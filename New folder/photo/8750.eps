%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Stylized people sending payment and receiving money.eps
%%Creator: Adobe Illustrator(R) 24.1
%%For: картрайт .
%%CreationDate: 8/8/2020
%%BoundingBox: 0 0 3600 2000
%%HiResBoundingBox: 0 0 3600 2000
%%CropBox: 0 0 3600 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 24.1.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 24.1.2 x408 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c002 79.164360, 2020/02/13-01:07:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Stylized people sending payment and receiving money</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Stylized people sending payment and receiving money isolated flat vector illustration. Cartoon tiny woman with wallet and coins. Remittance, bank and financial transactions concept</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>money</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>bank</rdf:li>
               <rdf:li>coin</rdf:li>
               <rdf:li>business</rdf:li>
               <rdf:li>credit</rdf:li>
               <rdf:li>financial</rdf:li>
               <rdf:li>remittance</rdf:li>
               <rdf:li>sending</rdf:li>
               <rdf:li>wallet</rdf:li>
               <rdf:li>cashless</rdf:li>
               <rdf:li>data</rdf:li>
               <rdf:li>deposit</rdf:li>
               <rdf:li>payment</rdf:li>
               <rdf:li>transfer</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>flat</rdf:li>
               <rdf:li>concept</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>character</rdf:li>
               <rdf:li>person</rdf:li>
               <rdf:li>people</rdf:li>
               <rdf:li>woman</rdf:li>
               <rdf:li>female</rdf:li>
               <rdf:li>stylized</rdf:li>
               <rdf:li>transaction</rdf:li>
               <rdf:li>mobile</rdf:li>
               <rdf:li>tiny</rdf:li>
               <rdf:li>receiving</rdf:li>
               <rdf:li>banking</rdf:li>
               <rdf:li>wirelessly</rdf:li>
               <rdf:li>reward</rdf:li>
               <rdf:li>gold</rdf:li>
               <rdf:li>cashback</rdf:li>
               <rdf:li>commerce</rdf:li>
               <rdf:li>finance</rdf:li>
               <rdf:li>electronic</rdf:li>
               <rdf:li>connection</rdf:li>
               <rdf:li>telephone</rdf:li>
               <rdf:li>wireless</rdf:li>
               <rdf:li>smartphone</rdf:li>
               <rdf:li>flying</rdf:li>
               <rdf:li>management</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>dollar</rdf:li>
               <rdf:li>cash</rdf:li>
               <rdf:li>app</rdf:li>
               <rdf:li>digital</rdf:li>
               <rdf:li>phone</rdf:li>
               <rdf:li>internet</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:CreatorTool>Adobe Illustrator 24.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2020-08-08T13:31:15+05:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-08-08T13:31:15+05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-08-08T13:31:15+05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>144</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAkAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqg9Xn9Gxen2pPgH09fwyURu4PaGXgxHvOzGcseXdirs&#xA;VdirsVdirsVdirsVdirMspe2dirFNZuPzFttckbSrW0v9HKo6JK4hlU8G9SMGvxNyiXgxoP3lDsO&#xA;SqoG9vfzdT6vcWunafKTDcfWLL1OIEo9Y21JC+4IWIONt22NFOKpjpl9+YjatFFqOmWI0t5G9W5i&#xA;mZZY4/TZk/dkyBzzorGo9hToqyjFXYq7FXYq7FXYq7FXYq7FXYq8W89ahNH+Yd5Fd3VzFYKIuKxO&#xA;y0U26n4B0/vOv05zPaGStQRIkR8vd+t7TszEDo4mIiZ78/636lKC70wr8Gq3xalRUGleP2ftfzZr&#xA;pzx/z5/j4thhl644fj4dz0P8uJ7mbRpjO7yATkIXJO3FSQCc3XYE5SxS4iT6v0B0HbcIxyihXpZL&#xA;fG7FlcGzCm7Eb/Vg/wBkycTw5e3Lrm9dMwq31D8547dUn0jSJ50L85lupUVxyfgVTgeNVCbFu532&#xA;pirN7ZrhraJrlFjuCimZEPJVcj4grECoB74qk2vz8p0hHSMVPzb+zLIB5/tbLcxHu/SwLQbn8xHv&#xA;oBrdnYxWRUpcNBKxkDKrESKCCDzbivGo49d67HdwcgxV6SbZRhcdKPMsnmdLSP8Aw9Dby3Rc+r9Z&#xA;YqoTiQONP2uZU77UBxLbiEL9fJBQ3vn57iBZdOsYISQbh1meWi8RULURblj13oB32wbszHFXMpjo&#xA;Nxr88Mza1aQ2cokAgjhk9SsfBTVj48ywwteQRH0m0zxa2P6nc+dI9apptlbT6SYkWssnCQTc6u21&#xA;fgKNTxBBNDsCt8Bj4dyeJCyaj+Ynpj09Ks/ULKamaoCAIW5DkKM3JqUJAp32LDdkI4u8p/pR1E6Z&#xA;anUwg1H0k+tiIUj9Wnx8BVvh5dN8LROrNckXixZllL2zsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;diqx4YZDV41cjYFgD+vAYgshIjkWvq1t/vpP+BGDgj3Lxy716qqiigADoBsMIFIJtvCh2KuJABJ2&#xA;A3JxQTTEbmYzXEkp/bYkfLtlwDx+bJxzMu8qeLU7FXYq7FXYq7FXYq7FXYq7FWZZS9s7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUFq8/pWL0+1J8A+nr+GSiN3B7Ry8GI+ezGsseX&#xA;dirsVdirsVdirsVdirsVdirsVZllL2zsVebP5zvbT89bnQb7U0t9AXy8t5HbTNHHH9aN2icw7ANy&#xA;4V25Ya2aeP110phq/wDOR+t/W7idtHtP0VMusppcazObtZdHtvrHK6SnFUlqBQbjfw3NNfjnu7/s&#xA;Qmv/APOSfnLTNO0KQeWbf69rFr+kli9WWZDZnZCvpiodijk1+yKVxpZagitkTJ/zkZ5tn1lLTTfL&#xA;NvLb3F7Z6dbfWLl4ZfrGowGSBHBQ8eLfbNPbbqGl8c3sEZ5j/NvzJqf/ADj0fO+nEaPrTzJCzQUk&#xA;VSt2IXKCUNs6joemNbpllJx8XV13/wA5A6/aeZbmzk0eyk0u31rUdEUrdFLpns1rHIyuOEaGo5OT&#xA;Tr0pu0pzm+XVK9D/AOcndWurSN9R02xtbhtXstPlhMk6NFa3ays0z+ooT4PSHxB6b7gbVeFA1B+1&#xA;0/8Azkr5ofTrO6sNCs7h7iLULiUNO6qsOnklmU/tVRSceFfzB7md/lN+auredNT1ix1TSotMksoL&#xA;C+tFhlM/K31GD6xH6jEL8XBlOwHWlNsBDZiyGRNvSsDc7FXYq7FXYq07oil3YKqirMTQAfPASBuU&#xA;gXyWW11b3UKz28iywuKq6EEH7sjCcZi4mwynCUDUhRVMmwQFlrul3uo3mnW0vO7sSBcx8WHHl03I&#xA;AOLTDPCUjEHePNA6/PynSEdIxU/Nv7MsgHS9rZbmI936UqyTqULG+oG/lWSNRZhR6UgPxFu9RXMa&#xA;EsvikEDw62PW3PyQ0/5eJjKXjWeIdK6fjzRWZLgOxV2KuxV2KuxV2KuxV2Ksyyl7Z2Ksa8w/lt5F&#xA;8x6gNR1zRbfUL1UWITzAluCklV2I2BY4bYSxxPMNn8tvIX6QvtR/QNmL7Uo5ob24EQDyJcqVmBI6&#xA;GRWIYjc1ONr4ce52o/lv5E1Ky0+yv9DtLq10pBHp8UsYYQxig4KTvx2HwnbG1OOJ6Lz+Xnkk3v17&#xA;9D24uhdw6gJQpBF1bgiGUUNOSA7Y2vBHub/wB5N/w3/hn9EwfoDlz/R1D6XLn6laVr9vfBaeAVVb&#xA;JL5c/J3yho+u6xrs9tFqep6tfXV8Li6hRmgW8JMkMda/D8RFTvQnxw2wjiAJKOi/Kb8tYbKexj8t&#xA;2AtbmVJ54vRUhpIq8Ca70XkaDpufE42y8KPcui/Kz8vIoUhj0G1SKOOeGNFUgLHdAiZAK9HB3xtf&#xA;Dj3Jno3lLy3olzNdaVp8VncTw29tNJGCC0NpGIoENSdo41CjAkRA5JviydirsVdirsVWzRRzRPFI&#xA;OUcilHXxVhQjbBKIIo8imMjE2OYUrKxtLG2S1tIxFBHXhGK0FSSete5yGLFHHHhiKDPLllklxSNl&#xA;XyxrUltrWKWS4SJElkH76UKAzBenJhuaYsaiLLFrmYzXEkp/bYkfLtlwDyGbJxzMu8oOx+tiErdA&#xA;GRHZVcftoD8DU7Er198WoIihoT+yoqx7Ae5xJA5soQlLkLbZWU0Ip338DisomJo7Jfp13qU9zeJd&#xA;2ot4opONrIG5eonTl0HcV+n6ShgETdXBgjDCGSdieIjiALVPzKgD3JxSttJruUFp7cW67cFLhn/2&#xA;QAoPvxQERil2KuxV2KuxVmWUvbOxVgPmO5httc1COTz1HpBuSrmwcIRbxLa8CpZ5P3RY/vlI4Hr9&#xA;qlVVSu/1dE0W5Sf80bdZrH1zfXUcNpzHppEOKxQsJOUbxM1FJLcyP5aKr77U7xdWuUP5oWtkxuLl&#xA;IdOe0tAYuM7BYj6r+o7RcWjr+11piqteavM+lRNa/mLaWv1O1Vbm7jgt7oMOSqt1JyZuJZbqAt+y&#xA;DQ9DiqCm1W8hD28/5oQOTH6bOljb7F1dfUEkbUCqxFTWi0FSKg4qr+W9b/3L2kk35kw6pbzVubjT&#xA;DaQRSSIbYNHvUvboFhaRhxFTXocVUoNVXT9SuNUvfzGjmt70S2cUM0AiijeaV44pIU5mNngaLiTx&#xA;48Qzvsa4q3LFqFyuoQyfmlbmQ6ddQI8UVtCbc+pE0l3+7mUMYUjZK9U51DL3VegeWZZJtFglfUhq&#xA;5dpCNQWNYRIPUbiOC7DgPh96VxVM8VdirsVdiqX635h0LQrVbvWb+DT7d2EaSXEioGc9ESpqzew3&#xA;xQSAibG/stQs4b2xnjurSdQ8NxEwdHU91YVBxSCr4qhLuwe5njZrhltlIMtqAvFyp5LU05DfqK70&#xA;p45VPHxHnt3N2PKIg7erv7ku8y6tNa+hZwGNJbvmvrTVKKAtdwCnXp1ynUakwnGA5yvc+Ti5RcSG&#xA;G+X9ev72+vtM1O0FrqFkEk+CoV4pOhoWeh6dDQg5k6fLKW0ubzeqwCO4FUnmZDgpZrkNvNLYpesi&#xA;6YOT3IlZkRitS45Jvy4fZzS64E6iIl/d19vX409B2fw+B53ulXkSe7nXWJSippbXddMEatHFT4vV&#xA;9JHJKofgPHoDXNhpTYPc67Wfp2ZRmU4DsVdirsVdirsVdirsVZllL2zsVYJ5js9an8xTiLyRp2q2&#xA;PK1aPVLl7b1HYK3qkq4L/AFSNT2rX4hsFUIdO1y5sZVn/LrSOTIAttNPasrBmlV0ekLgfAkZ7g86&#xA;bUOKoa6PmG8vr9X/AC0s3dYpXaWSe2WSf1ZpgqpOE483CJI/x/Dy3PLqqiLoeZrSWa30/wDL+xGk&#xA;0gjaLnaD1aLBRuMZ+zbtyHEoSRGCvYYq610i+udNuRJ+XWm2F1H+5tIZhYSxyRTxVJb0m+BUn4+q&#xA;u9UBK8moMVcNP8xWghjsvy+0kFoozPNHJaxr6kkA+sII+IIXdouXI+NCvVVqTS9SnXQ7Wb8t9M9I&#xA;iI3rM9jLDYL9ZETpGhCM5W1ZpBwFP2d+mKqUsXnRFkEX5eaSVmWUTRie1YMJWBlDErHy9f8AaBFN&#xA;qkt9nFWb+WH1FtJQahpMei3KO4aygkjli+I8+cbRhdmLb1UHlXbuVU2xV2KuxV2KvmLzl+Yl/r/5&#xA;6wafH9Xl0Dy7NJZQOdgs00YSaUsTvJ6qGNdqAfMnK88bxlr0usjDVQEiKunsH5LQ6uvlK5uNTshY&#xA;NealeXNrb9G9CST4WcA7MWDV6V698lAVEDybZyMpyJFXIs8eRI0LuwRFFWZjQAe5OEmkWl58xaJ9&#xA;Xe4ivIriNDxb0HWU8iCQvwk77d8rlnhGPESKYeJFiXmTUbTXFEMsLRRpX05VI9QEnuCCtPb8c0mr&#xA;1mLKRsdurVKZPuSq3gS3mnuFkklvLrgLm7k4q7LEvGNQIwqqqj7+56UrydoTP07fe0eDE891X1JP&#xA;5j95zH/N5bvil80+DDuCot3cKCPUJU9Vb4gfmGqMtHaGYczfvQMEByFe5Xi1OQcVkUMqig47UA8B&#xA;0zY4O2BymK936nCz9n8W4O/mjYp4pVqjV8R3GbnHljMXE2HU5cMoGpBA6zra6Zb3VwLU3MVlwF03&#xA;qrDxLk/CgZW5kU3FRmGdcDKQiLEdifN2I7OqHFI7lFaff2uoWMF9aMXtrhecbEUPUqQR4qwIOZsZ&#xA;CQsOuy4+E0iMk1uxV2KuxV2Ksyyl7Z2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV84+cfyg07SP&#xA;OWsXNpdSyPqyyavaWwABSX1CZIiTXkvNxx6EVp75XlymNdzgT7LjqJTFnjEDKI7z3fc9r8j3NjB5&#xA;T0639dfUtLZPrSt8DIwXk9VNDsa74Y5InkXOx6TJhxxjIdAlWoX13qvla0F1MVuLw/WpkVKslrI5&#xA;aP4BSvCNlqOppXNZrTKeOIvmbP8AV/ZssyAaYfZyCfzOX0yJU0aztGguLhIzEssrqNjX7Z9ZeY70&#xA;rkc8oeEf5tV8XWizk25Jxmjcl2Kr0hlcVRCw8QNsyoaHNLlE/d97TPUQjzIVDZXVK+n+I/rl/wDJ&#xA;WfuHzavz2Lv+9TeKRPtqV+YpmNk0eWH1RLfDNCXIgtI7IwZTRh0IyODUTxSuJTkxxmKK6a2vbq4u&#xA;Z7CeGGS8hkhuUn9X4TIpUyRhKq+5rRx/XNvo8fHKU4H6uYPQn72rUagQiBLupH6RpkGlaXa6bbsW&#xA;itU4h22LFmLu1N6cnYmmbuEOEU6DNMSO3JXnnjgVC4ZnkJWKKNS8jkCpCqMqy6iMCAeZ5Bt0+knl&#xA;BI5BR07U7DUrcz2UvqIjmOVSCjo69VdW3ByzHkExYa8uEwRWTaXYq7FWZZS9s7FWPax5+8r6RqD6&#xA;fe3RS6jCmRFjd+PIcgCVBHQg5h5tfixy4ZHd2On7Kz5occR6T5hDL+Z3k9ul0/8AyKk/5pyg9r6f&#xA;v+wtp7E1P837Qqr+YnlVuly//IqT+mRPbWm7/sLE9jaju+0JzpWr2GqW7T2UnqRq3BqgqQwAPQge&#xA;OZmm1ePPHigbDhajTTwyqYoozMlodirsVdirsVdirsVS7zF5h0ny7o9zrGrTi3sLVQ0slCxqxCqq&#xA;qNyWYgAYsMmQQFnkwpfz58luiulpqrowDKy2ExBB3BBAw0441kD3/J43+cvm6+8y+abHVvLKapBD&#xA;b2Qtm/0e4t5Ff1XdiCANmVl79sxc+MkuVp9XG7Bo/JAeQJ/PGpa7FaaldXy6bFG8lytx6imRaceH&#xA;NwGNWcV36Zh5MfCLIdro8pzS4eImPV7UJZWIkY0fahG1ANlAp0oM0+oymUybdRqYxGSQjytdJNNK&#xA;QZHZyOhYk/ryqU5S5m2hpEZ2CqKsegyzBglllwxYZMggLPJMILWKNgGHqy/tfyrnRafTY8J4Yjin&#xA;1Pd+r3c3TZtTOYu+GP3osgEEHoc2MhYouADRtb6MP8i/cMqGnx/zR8mzxp95cYkKcAOI/wAnbJHF&#xA;Hhoen3bIGQ3Z396CubEgFk3+W34f0zVavQWL+0c/iOvvG/kXZabW9D+Pj+v5oRHeKQMNmU9M1OHJ&#xA;PT5bPx9zsckI5YV0KdRN6qB0BIIrtnXRkCLHJ5uWMgkdQhNUiuy1rdWhrJakiSPnHGWjavKjSgx9&#xA;CQeWazWaaZyxyx6Cj+C7js7UAw8P+K9vNLvK+iNp0mqXjRpbjVLgSw2cf2YYY+XpqaEryPqGvHbp&#xA;v4ZmnhQvlbh64gSMetp7mQ4DsVdirMspe2diryzzj5D8z3vm+71awtorm1uFQKHkC7egsLBgSh7H&#xA;oc0Ot0OWWYziAQf1U9T2f2pghpo45kxkPL+lfmpnyl52eModIsIgwo3piEE/EWr9rYivbMeej1JF&#xA;cEPsZDXaUG/EyH32il8rebyGD6ZZKX5BiohH2l49jtTqKd8qnodUf4If7Huph+d0o/jn/su+2WeS&#xA;dFvtJ02WK9VUlklLhVYNQcQNyNu2bTsfRzwYyJ8yXVdqaqGbIDDkAk19+XOsXGrXV9F5luoYLm4+&#xA;sNZ1uDGFq1IqJcx0X4/2ApzbusQlz+VOs3LwNL5puW+rwQwKCJ25CDnxeTlckuxaTk3LYsqmm2Kp&#xA;h5C/Lu88qXVxLJrtxqkdyh9WOdWBaYiMesxMjhnKxUJpU164qzXFXYq4kAVPTFVkNxBOpaGRZVBo&#xA;WRgwr9GRhOMhYNqw383YopvKkEUqCSKTVNMSRGFVZWvYgQQeoIycXG1f0fEfeyzpsMkrsVeaeafO&#xA;dnfFZLSN5ILW+TTHVlKP68l4lnJsd6K7ZrdYTIkDoC7jSZI4dNLID6pGv0frVWVlPFgVI6g7HObI&#xA;I5umawKmNlCywmRR+8fZSew8c6bQ6eWPDcfrl9n9jpdZmEsnCfpj9qLjCBaIajep61PeubHHjEBQ&#xA;cCczI2V2TYIaz1LTr4ObK6huhEeMhhkWTifBuJNMVROKoe8vBaoJZEJtx/eyLuUH8xXuPGnTFBKG&#xA;vokYC5iIZGpUg1HsQc03amlscY/H4+/3u37P1H8B+CGu4/rUp0wyvCslpytXDMsaSkB2lfg8bGhq&#xA;Nq/LMPSzMp8BJoRFfe7acBw7cyh/KF7qOo+U1lvmM0/KaKO4apaWNDRXJO53qtfbxzdwuWI33Oox&#xA;TENTjmf5wv5u1jzdb6NYLK1pcXpjiWSZbZVYonLhU8mWtSD08DXBHUxjCN9zmZ+xc2TUZeEVGMvv&#xA;3H2Knlrzx5X8y810e9E80Sh5YGV45FBp+y4WoBNCVqPfMiGWMuTp9RpMmL6xSfZNxnYqzLKXtnYq&#xA;s9RvW9PgePHl6m1K16YsOM8VVtXNY9xKsE0iwOzxcuEQpyfiNuNTTfIzPDEkC2WE8Zo+net/vaju&#xA;JWghkaB0eULziJHKPkKnlQ029sYGwCRS5jwGh6t62+9XySXYq7FXYq7FXYqtljEkTxnYOpUn5imR&#xA;lGwQrzjRtUudMv5EP97buY7iL+ZQaf7RzldNmlgn7ti0yNFS/MXzIL3S4LURARHVtN9GQE1IW+i+&#xA;0CB1Gb3Ta8ZMphW3QtGpncfiPvZn5gvprLTJJodpSQqt4V75Z2jqJYsRlHnyboizTzXWdf1vRLfS&#xA;9at7ye5FzOY72N6GLrUR8T8XLjuD0OYOESEBMSPEXFzzMDYU/PnkuHTVn1a0lEWma7qWky3ls7cZ&#xA;EvH1ON5JVkb4VV0fevQqO2bWVShxd8WyVgEfwkg/Fqw1q3XUdVs4TI+mWjRpYEyG45MvJXMch/Yk&#xA;ChyK0U+Fc0uu4DHnuDs14iTIgclUanPdA+hJFEg6kESv+B4qf+CzUSkI9D9zlQx8XUfeh9Qaze2Z&#xA;dRu3eJlKEzTFEAIpsqlIwffjlx12omdifcGH5TBEEkc+pXaXrUHlzy3LbRgztbXLw2qORUq6rNyY&#xA;gDYGQ503Z+czwiR5vOa/GMWQgMc84fmFdahokdlCPqzyhv0gyVAIBICKTvxYbt93jmbxOCZWnP5L&#xA;afLFoN3qDigvp6RDxSEca/8ABMw+jCGcXoeFk0QCCCKg7EHFVJbe1gtjCiLFBv8ACooo5Ek7fM5D&#xA;IYiNy5M8fFxDh5pfBDaXI+r3kUVxEv8AdrKivQ1/ZqPwzR9njHxyjKiAfT9vJ3esyTEAY/FNVVVV&#xA;URQiIAqIoCqoGwAA2AGb8CnRymZGyv1Lylp2sW9v6q/V4Gt2hu3hYxytHuVUMo2oWY1rXc5iZNOJ&#xA;Edwey0XaEhhJJPFIDf3PDNT8seRtO8020Pluw8wtcKyC2uI42hQTqxDHncLG4p+0aUpmPOEhL0t+&#xA;PUaY4j4pv3Ecns/p35pWZFodwq/1zM4ch6j5PODUaGN1jnL3y/UEVl7p09sNaSSkdzRH6CTop+fh&#xA;kDF6DSdpiXpnse9Ncg7Z2KuxV2KuxV2KuxV2KuxV2KoDXvrv6JuDZsVuFUMpX7VAQWp9GYmu4/CP&#xA;B9SRzeP3uqXEeo/XJWMjsf3xPVl6H6c5iJM9zzLj5TTfmt0k0/TnQ8kbU9NZWHcG7iIzO7M/vx8f&#xA;ucbP9I94+9nnm+L6zPDD/iS30iNVrNZzrC/q1NQx5vG4G1Ns3GtjCY4ZTER3GnPw4pSFiJl7rYzf&#xA;+W/Ld0LcyebrMyWlTbCV4ZIo2JBqiGYeH7RIzDjhhw8Pixr4frQdBkMrMJn4H9TX5jahZH8t4WOs&#xA;wasLPVNNW81CNoggK3sTnn6bFU4oR36b5sJgnCQDxek8mjPExNSHDuObBdS8yeUZLNkm1W1eBPjN&#xA;vDPF8ZHQFQ3xfI7ZzuHT5hKxE33kNeXJjMaJ27gk8XmPQrO1j1aL9HJb3MjRvBDfRC7QKRRngVlP&#xA;Fu1BTbem1dnk0OSUd5Wfc4MM0Y+oR29+6Ytr3kWUCRr3T2LCtXmi5b778mrmu8LUDapfa5t4jvsl&#xA;us6r5QeOOa21OzjlidTwjuIqOCyg8gG7DM3ReNGYEgaPfbha7HCUCY8/Jjeq6rZXTelaXEc4G8hi&#xA;dXA8B8JOb0OgOOQFkEM//JubzDd6pIWuZTo1lAYzAzH0Q7EcFVPshupJH09cmExeszXUUPItWiDk&#xA;5A2VfEnMfLqowNUSfIcnKx6cyF2APNUtZI7sqLdhIzCqgHcjr3yWLVY8n0n9aTpcl1SD1LWNJsBM&#xA;l9dRwtCvKeNjV1VgaFkFWAPE02yWWcK4ZEepYafLdiMvT5JH5S81+WdfvruLR75b17EKZuKuoHMk&#xA;Kasqg14npmp0GglDKZS5Dk5+t1F4wO/myS4vLW3RnmkVFUVYk9B75s8urx49id+7q67Hp5z3A2Yj&#xA;50/PTSfKTfoWXTLm5v2hEqMGSOIxSlgp5VZq1U7cfpyWLJxi6I97shlEMXBd7HcMk0DW7PXNGs9W&#xA;sq/VryMSIGFGXsyt7qwIOXOoIo0mGKHYq7FUfYatNbUR/wB5D/L3HyyJjbsNJ2hLFsd4p/BcQzxi&#xA;SJgy/iPY5Ah6HFmjkFxNqmBtdirsVdirsVdirsVdirz7Ufzl0jSdam03V9MvbKOOQxx3ZVHVqGnK&#xA;gatO+1T7Zjw1MZEgdHDyawQlUgR5vG7vzvLeaveNdiMWs0rmJoVKqgLHjQfy0zXZtGD6o7HudeNc&#xA;TIiXJFWfma3v7G004kiWLVNPeAPsSn12Oo+gnJabTGGaMvf9yRqBMV5j73uGteRtK1a+e8lnuIJZ&#xA;QvqiFk4sVAUNSRJKHiANttvHMjU9lYc0+OQPF73o9N2pmwx4YkV7kjvfyw8tRGFZr2/LXEghiVWg&#xA;JLMCf989Aqkn2GY8uyNPCue5rm52LtvVSuuH0izsxX83PJ+keVPyu1abTGk+s3N5p8k93OQ7n0bl&#xA;PTFFVV4pyJA4982OLTQxw4IjZ0vaGtyZj4kz6nz4fM2r/wDV2X/kQP8AmjKvykP5n2/tdcNZk/n/&#xA;AGfsZ3+UEtzrOo6rNfXCXosIY/qtu8cYRnmYr6jKVHIJxpQ7VYZi67HHFjBjH1E131+hyNNqJzJB&#xA;lYAZD+ayNYWWoQWBIvtPt7a5WcQwrI0k1xFC0JVF6EXH2WBZWXY0JrdjwQkakL2933Nc9TkiSAXk&#xA;2q3H5m6VbC61K2u7O3JC+rPaKihm6KxaP4SfA5aNJi7vtKPzWYcz9gQnlqa91C8v7qUmaYiNpXAA&#xA;78RsoAzJxwEdhydZ2hlMo78yf0PpXyda6/BpFg2k6fDBpHDk1u80Jmmciju8hZKNyH8nbK82fJE+&#xA;mPEPeAuj7OGWHFKXD3bXf2p/Pe+Y4o3kOjRmNFLOfrtvsoFTlY1Ob/U/9kG7J2ZGIvj2937Xnv1h&#xA;rS4klsAbNHZnFvGf3Y5GtOH2D8+OSyYIZPqG/wCOrpsepnjPpOyeWHnQXzJYa7wa2NQLlxyKdK8S&#xA;fiWtOzAZhajSS4diZR7iLI9zuNH2ueKpenzYlr135bg1SWbTdJs5p0b4NQmjEjk9eShq0IPepx02&#xA;ilw+qUgP5vJr1fadyPCB72Nx+YryXzLZXOuTyXNlBcxyyQtvGI1cE0jHw7DtTfNlhwQx/SKdbPPO&#xA;Z9RtW/5yQij/AMR6HqMbB4ryyaFJFNVYRSc1II6/32XHm5mnFwPkm/5YfmNKuheXPJ+kWj3mqO8/&#xA;1+cGi21uZ3f1PiBBIVgaeG3U7V5YylAiJ4Zd7bgGOGTjyx44D+G6v4va7YXIhAuShlGxaOvE+9D0&#xA;yeLj4fXXF5OLqTiMycXEIf0uY/Wq5NodirsVVbe5mt5OcTcT38D8xiQ24c0sZuJT+w1WG5ojfu5v&#xA;5ex+WVmNPRaTXxy7HaX45I7Iue7FXYq7FXYq7FXYqwf8zdMguLGORrATg19a4pUKBSgcUP0E9M0/&#xA;akCCJRG/84fpYZIgii8s8v8AkryxcatKb6V44VWsdtTmjE7HfmjbfTlOPV3GpGj3gOr/ACcOK+nc&#xA;ymLyP5ChnhnVeEkEiSxP6bfC8bBlb++7EYRqAOWSX+lbRp8YN09I0a4E8buLtroVAAZQhX6B45st&#xA;Fk4gTxcXwpyVKzsb79JtLdtzgtFZLFyas3qmrM3uqgIPp8ccOKYn69xH6fO+/wB3Jzs2aHh1DaUv&#xA;q+Hd7+fyeff85K6lYQflpcWc06Jd3dzarbQFhzfhMHYhetAqHfM11WoPoL5KbC6kMw/LolW1AqaG&#xA;kQqPA881faX8Px/Q7nsv+L4fpZi8wjVpXfiq/Gzk0pTvX2zWCzsHamgLK9o7krVoJirDesUm46/y&#xA;4LrqPmgkdR9iS+WLEW3nHUbjUoprTS7gwr9YEZHw1UMV5cRt75uNNngIAXu832ni48g/m8XN661l&#xA;5NWJVi1G6WGlU4wBhQ77HnmrmMEpEmcr9zvoiUICMRUelH9qX3NpoiFZNNuJrkCokaZBHRtvsirH&#xA;M7R4Mf1RNvN9saiViHfuUuuO+bJ0SV3HfClK7nvhSk2oRhl5ftL+rJBIQXmPVLvUtK0CymJkl0q+&#xA;4WTHc+nc8SY9+ytCKfOnbEufo58w+jfK3kfyx5WSddFsxbtcNWaUs0kjAElV5OSeK12H8cnTVKZl&#xA;zT7Fg7FXYq7FXYq7FU2sNbdKR3NWTtJ3Hz8ciYu30naZj6cm4707R0dQ6EMp6EbjK3exkJCxuG8W&#xA;TsVdirsVdirsVYrqXlhx5gOp2dnBOrwem0UioAr8q813Xcjr+vMLNpiZXERN9C4+SJ4rAtd+jdU/&#xA;6tNr96/81ZT+Vn/Mx/axqX80/Z+t5X+a/wCTf5gecNXguNONpa6fDEq/VJLh1T1QTVwirIoJUgVr&#xA;mXpsXADYiD/RcTPgyTOw294edzf84wfmkHKrHZOB0dbnY/8ABKD+GZNtQ0uQdPu/Wh3/AOcZ/wAy&#xA;Ldlku0tY4q7FJ1c169DxxDVqBLHG5D7l7f8AOPvnM94v+CT/AJrydFwfH8k38ufk95z0b6xWCOf1&#xA;+HSWNKcOX+U382Ymq0py1vVObpO0hiv03fmnlt5H86W19a3P6NilS3mSSSB5YJEkRT8SOjmhDDKM&#xA;egMDYIJ8x+1yJ9siVAxIF779PkzWTUPNRFF8naaf9ZLf/qtgGkyfzcX+lbJdr4zy40n1jSvN2ti2&#xA;iby9pumpbXEdwxjWFfWCH+6fg8vJG7gimXYtPIGyID3BwNTrozAAB57slZ9cK0Hl7SKDYAwqR/xM&#xA;ZV+UydY4vk50u18dUBP7Esv9J169cM2mWdmFFAtmFiU+7Auan3zIw4Zx2IiP6rptfmGaQkAbS6Xy&#xA;frr9IR/waf1y/gLgeGUFL5D8wv0iX/g0/rh4Cnwyg5fy28yv0jj/AODX+uHhTwFAXX5U+bJEIRIq&#xA;nxkUf1w0ngKYeX/ywv7OErqumxX7/WYbhF9UKEMHKhVg6mp9Q9RTplGQZTIcPDw9edu00M9NjxzO&#xA;QTOQxIjVcINbE73z8vm9E/SOvf8AVo/6eI/6ZkuuTRCxRSy8WIBZa1ofCoxSuxV2KuxV2KuxV2Ko&#xA;mzv57VqoaoftRnocBFuVptXPEduXcyCzv4LpaoaOPtRnqMrIp6LTauGUbc+5E4HKdirsVdirsVdi&#xA;rsVdirsVSHX5+VwkI6Rip+bf2ZZAPP8Aa2W5iPd+lK8k6l2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxVF/onUP98n7x/XBxBzPyGb+a79E6h/vk/eP648QX8hm/mu/ROof75P3j+uPEF/IZv5rv0TqH&#xA;++T94/rjxBfyGb+a79E6h/vk/eP648QX8hm/mu/ROof75P3j+uPEF/IZv5q5NN1NGDpEysOhBAP6&#xA;8eIJjos8TYBBTqxmvWHC6hKsOkgpQ/MA5WQHe6XLlO2SNHvReBzHYq7FXYq7FXYq7FXYqxy40/UZ&#xA;p5JTCfjYnqOnbvlgIeZzaTPOZlw8yp/onUP98n7x/XDxBr/IZv5rv0TqH++T94/rjxBfyGb+a79E&#xA;6h/vk/eP648QX8hm/mu/ROof75P3j+uPEF/IZv5rv0TqH++T94/rjxBfyGb+a79E6h/vk/eP648Q&#xA;X8hm/mu/ROof75P3j+uPEF/IZv5rv0TqH++T94/rjxBfyGb+a79E6h/vk/eP648QX8hm/mu/ROof&#xA;75P3j+uPEF/IZv5rv0TqH++T94/rjxBfyGb+a79E6h/vk/eP648QX8hm/mu/ROof75P3j+uPEF/I&#xA;Zv5rv0TqH++T94/rjxBfyGb+a79E6h/vk/eP648QX8hm/mv/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:222b6690-3c40-e247-9a92-aaac907edd64</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:222b6690-3c40-e247-9a92-aaac907edd64</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:3f1e93cb-54c0-0645-b022-f9b5aabc501c</stRef:instanceID>
            <stRef:documentID>xmp.did:3f1e93cb-54c0-0645-b022-f9b5aabc501c</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:eccac040-8d86-3b47-af4c-e5b6ed89839b</stEvt:instanceID>
                  <stEvt:when>2020-06-10T19:06:02+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:feb8b71e-feb3-114d-a712-12608590e6f3</stEvt:instanceID>
                  <stEvt:when>2020-06-14T17:24:16+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9B8DFFFEF8B2EA119086F493C99EFE59</stEvt:instanceID>
                  <stEvt:when>2020-06-20T16:32:17+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:62d2260e-587a-0e49-998b-0b1285548c1f</stEvt:instanceID>
                  <stEvt:when>2020-06-25T20:02:38+06:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge 2019 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3f1e93cb-54c0-0645-b022-f9b5aabc501c</stEvt:instanceID>
                  <stEvt:when>2020-08-08T10:09:46+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:222b6690-3c40-e247-9a92-aaac907edd64</stEvt:instanceID>
                  <stEvt:when>2020-08-08T13:31:15+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>3600.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=42 B=36 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>42</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=71 G=59 B=30 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>71</xmpG:red>
                           <xmpG:green>59</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=132 G=125 B=61 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>132</xmpG:red>
                           <xmpG:green>125</xmpG:green>
                           <xmpG:blue>61</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=183 G=217 B=114 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>183</xmpG:red>
                           <xmpG:green>217</xmpG:green>
                           <xmpG:blue>114</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=253 B=252 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>253</xmpG:green>
                           <xmpG:blue>252</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
3600 2000 li
3600 0 li
cp
clp
3600 2000 mo
0 2000 li
0 -1.52739e-05 li
3600 -1.52739e-05 li
3600 2000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
1800 2000 mo
3600 2000 li
3600 -1.52739e-05 li
2468 -1.52739e-05 li
1800 2000 li
cp
.592157 .976471 .890196 rgb
f
873 2000 mo
0 1379 li
0 2000 li
873 2000 li
cp
f
263.843 475.675 mo
292.664 475.675 li
292.664 558.338 li
336.833 558.338 li
333.909 580.153 li
263.843 580.153 li
263.843 475.675 li
cp
0 .164706 .141176 rgb
f
372.148 539.313 mo
372.148 555.784 376.087 562.684 384.48 562.684 cv
392.28 562.684 396.157 555.57 396.157 539.404 cv
396.157 523.938 392.568 517.687 384.031 517.687 cv
376.248 517.687 372.148 524.302 372.148 539.313 cv
cp
424.681 539.09 mo
424.681 561.694 413.657 581.839 383.718 581.839 cv
353.675 581.839 343.526 561.125 343.526 539.548 cv
343.526 521.892 352.95 498.424 384.732 498.424 cv
415.371 498.424 424.681 520.131 424.681 539.09 cv
cp
f
437.686 527.287 mo
437.686 513.79 437.686 504.891 437.434 500.11 cv
464.659 500.11 li
465.009 503.199 465.269 510.003 465.162 514.449 cv
467.818 506.729 474.808 498.622 488.545 498.622 cv
488.545 525.055 li
471.666 524.705 465.628 529.558 465.628 546.36 cv
465.628 580.153 li
437.686 580.153 li
437.686 527.287 li
cp
f
545.831 530.422 mo
545.633 522.862 543.393 516.655 535.145 516.655 cv
526.57 516.655 524.198 523.325 524 530.422 cv
545.831 530.422 li
cp
523.802 545.882 mo
523.749 554.971 526.693 562.639 535.466 562.639 cv
542.502 562.639 544.659 558.469 545.728 554.844 cv
572.515 554.844 li
569.307 566.961 560.497 581.741 534.749 581.741 cv
506.051 581.741 495.601 562.919 495.601 540.204 cv
495.601 519.93 505.84 498.424 535.557 498.424 cv
564.708 498.424 573.484 518.363 573.484 539.214 cv
573.484 540.006 573.385 544.991 573.287 545.882 cv
523.802 545.882 li
cp
f
586.76 524.999 mo
586.76 507.798 586.661 503.773 586.509 500.11 cv
613.634 500.11 li
614.039 502.696 614.245 506.061 614.344 508.631 cv
618.884 502.482 625.528 498.424 636.209 498.424 cv
647.579 498.424 653.146 503.863 655.84 509.674 cv
659.51 504.16 667.465 498.424 679.59 498.424 cv
694.448 498.424 705.225 507.463 705.225 526.999 cv
705.225 580.153 li
677.794 580.153 li
677.794 530.179 li
677.794 524.528 675.888 519.414 669.471 519.414 cv
662.611 519.414 659.86 524.285 659.86 533.684 cv
659.86 580.153 li
632.376 580.153 li
632.376 529.729 li
632.376 524.025 629.869 519.513 624.115 519.513 cv
617.553 519.513 614.397 523.431 614.397 534.653 cv
614.397 580.153 li
586.76 580.153 li
586.76 524.999 li
cp
f
785.364 475.675 mo
785.364 580.153 li
756.544 580.153 li
756.544 475.675 li
785.364 475.675 li
cp
f
852.699 539.808 mo
852.699 525.641 848.487 518.717 840.763 518.717 cv
831.586 518.717 828.835 523.428 828.835 540.257 cv
828.835 555.541 831.532 561.913 840.206 561.913 cv
848.645 561.913 852.699 555.157 852.699 539.808 cv
cp
829.849 574.647 mo
829.849 609.339 li
802.06 609.339 li
802.06 523.213 li
802.06 512.532 802.159 505.406 801.907 500.11 cv
829.239 500.11 li
829.491 502.445 829.697 506.107 829.849 509.171 cv
832.443 504.725 838.316 498.424 851.529 498.424 cv
867.803 498.424 881.214 510.73 881.214 538.913 cv
881.214 567.334 865.333 581.741 847.715 581.741 cv
838.654 581.741 832.81 579.125 829.849 574.647 cv
cp
f
914.8 554.844 mo
915.456 560.564 919.452 563.744 925.857 563.744 cv
931.561 563.744 934.625 561.715 934.625 557.789 cv
934.625 553.594 930.575 552.13 920.648 549.47 cv
896.721 543.474 891.571 535.729 891.571 523.91 cv
891.571 511.58 900.407 498.424 924.904 498.424 cv
949.367 498.424 958.361 510.811 959.116 523.588 cv
933.874 523.588 li
933.47 519.613 931.127 515.67 924.372 515.67 cv
919.864 515.67 917.295 517.493 917.295 521.023 cv
917.295 524.355 920.124 525.812 931.807 528.719 cv
953.298 534.15 960.984 541.809 960.984 555.331 cv
960.984 571.695 947.804 581.741 925.407 581.741 cv
902.586 581.741 890.701 571.497 889.29 554.844 cv
914.8 554.844 li
cp
f
1046.23 555.43 mo
1046.23 568.357 1046.33 575.872 1046.48 580.153 cv
1019.26 580.153 li
1018.8 578.033 1018.59 574.285 1018.49 571.571 cv
1013.36 579.114 1006.81 581.741 996.763 581.741 cv
980.131 581.741 972.357 571.55 972.357 553.924 cv
972.357 500.11 li
1000.25 500.11 li
1000.25 549.565 li
1000.25 556.428 1002.4 560.544 1008.52 560.544 cv
1014.95 560.544 1018.23 556.465 1018.23 546.022 cv
1018.23 500.11 li
1046.23 500.11 li
1046.23 555.43 li
cp
f
1062.99 524.999 mo
1062.99 507.798 1062.89 503.773 1062.73 500.11 cv
1089.86 500.11 li
1090.26 502.696 1090.47 506.061 1090.57 508.631 cv
1095.11 502.482 1101.75 498.424 1112.43 498.424 cv
1123.8 498.424 1129.37 503.863 1132.06 509.674 cv
1135.73 504.16 1143.69 498.424 1155.81 498.424 cv
1170.67 498.424 1181.45 507.463 1181.45 526.999 cv
1181.45 580.153 li
1154.02 580.153 li
1154.02 530.179 li
1154.02 524.528 1152.11 519.414 1145.7 519.414 cv
1138.84 519.414 1136.09 524.285 1136.09 533.684 cv
1136.09 580.153 li
1108.6 580.153 li
1108.6 529.729 li
1108.6 524.025 1106.09 519.513 1100.34 519.513 cv
1093.78 519.513 1090.62 523.431 1090.62 534.653 cv
1090.62 580.153 li
1062.99 580.153 li
1062.99 524.999 li
cp
f
263.906 725.229 mo
271.159 725.229 li
279.361 725.229 283.219 719.32 283.219 711.363 cv
283.219 704.466 279.687 698.093 271.182 698.093 cv
263.906 698.093 li
263.906 725.229 li
cp
258.546 693.603 mo
271.721 693.603 li
281.942 693.603 288.811 700.523 288.811 711.278 cv
288.811 721.934 282.122 729.72 271.527 729.72 cv
258.546 729.72 li
258.546 693.603 li
cp
.0980392 .0980392 .0980392 rgb
f
298.576 716.483 mo
298.576 722.152 301.337 726.151 305.857 726.151 cv
310.457 726.151 313.038 722.327 313.038 716.507 cv
313.038 710.631 310.461 706.815 305.753 706.815 cv
301.101 706.815 298.576 710.527 298.576 716.483 cv
cp
318.275 716.432 mo
318.275 724.132 313.822 730.344 305.672 730.344 cv
297.967 730.344 293.338 724.478 293.338 716.531 cv
293.338 708.646 297.919 702.623 305.979 702.623 cv
313.416 702.623 318.275 708.125 318.275 716.432 cv
cp
f
324.019 729.72 mo
324.019 691.584 li
329.124 691.584 li
329.124 729.72 li
324.019 729.72 li
cp
f
340.124 716.483 mo
340.124 722.152 342.885 726.151 347.405 726.151 cv
352.004 726.151 354.586 722.327 354.586 716.507 cv
354.586 710.631 352.009 706.815 347.301 706.815 cv
342.648 706.815 340.124 710.527 340.124 716.483 cv
cp
359.823 716.432 mo
359.823 724.132 355.37 730.344 347.22 730.344 cv
339.515 730.344 334.886 724.478 334.886 716.531 cv
334.886 708.646 339.467 702.623 347.527 702.623 cv
354.964 702.623 359.823 708.125 359.823 716.432 cv
cp
f
365.566 710.437 mo
365.566 706.943 365.538 704.811 365.514 703.247 cv
370.52 703.247 li
370.596 703.96 370.671 706.145 370.671 708.503 cv
372.014 705.029 375.105 702.736 379.507 702.623 cv
379.507 707.652 li
374.099 707.756 370.671 710.319 370.671 717.122 cv
370.671 729.72 li
365.566 729.72 li
365.566 710.437 li
cp
f
400.172 722.071 mo
400.891 724.813 402.952 726.416 406.375 726.416 cv
410.034 726.416 411.457 724.875 411.457 722.625 cv
411.457 720.298 410.256 719.244 405.449 718.076 cv
397.677 716.181 396.131 713.798 396.131 710.177 cv
396.131 706.4 398.882 702.623 405.917 702.623 cv
412.974 702.623 415.759 706.66 416.08 710.328 cv
411.164 710.328 li
410.814 708.759 409.642 706.48 405.694 706.48 cv
402.233 706.48 401.193 708.125 401.193 709.756 cv
401.193 711.604 402.229 712.517 406.975 713.647 cv
415.158 715.581 416.695 718.327 416.695 722.251 cv
416.695 726.841 413.083 730.344 406.205 730.344 cv
399.119 730.344 395.767 726.799 395.11 722.071 cv
400.172 722.071 li
cp
f
422.348 703.247 mo
427.453 703.247 li
427.453 729.72 li
422.348 729.72 li
422.348 703.247 li
cp
422.348 691.584 mo
427.453 691.584 li
427.453 697.455 li
422.348 697.455 li
422.348 691.584 li
cp
f
432.005 703.247 mo
436.486 703.247 li
436.486 695.56 li
441.592 695.56 li
441.592 703.247 li
447.307 703.247 li
447.307 707.321 li
441.592 707.321 li
441.592 722.355 li
441.592 724.818 442.216 726.033 444.57 726.033 cv
445.161 726.033 446.064 726.005 446.754 725.839 cv
446.754 729.593 li
445.563 730.027 443.913 730.084 442.608 730.084 cv
438.288 730.084 436.486 727.829 436.486 723.386 cv
436.486 707.321 li
432.005 707.321 li
432.005 703.247 li
cp
f
480.469 716.979 mo
479.67 716.979 477.774 716.979 476.437 716.979 cv
471.326 716.979 468.73 718.417 468.73 721.92 cv
468.73 724.511 470.48 726.439 473.624 726.439 cv
479.666 726.439 480.469 722.35 480.469 717.797 cv
480.469 716.979 li
cp
485.452 723.74 mo
485.452 726.17 485.66 728.983 485.815 729.72 cv
480.933 729.72 li
480.725 729.144 480.568 727.857 480.512 726.425 cv
479.581 728.136 477.529 730.344 472.479 730.344 cv
466.211 730.344 463.54 726.255 463.54 722.213 cv
463.54 716.28 468.22 713.562 476.068 713.562 cv
477.803 713.562 479.472 713.562 480.441 713.562 cv
480.441 711.43 li
480.441 709.184 479.708 706.527 475.056 706.527 cv
470.891 706.527 470.158 708.551 469.705 710.588 cv
464.788 710.588 li
465.147 706.735 467.53 702.599 475.226 702.623 cv
481.816 702.646 485.452 705.308 485.452 711.382 cv
485.452 723.74 li
cp
f
493.066 710.073 mo
493.066 707.79 493.066 705.417 493.014 703.247 cv
497.926 703.247 li
498.001 704.012 498.129 705.871 498.125 707.142 cv
499.358 704.849 501.632 702.623 505.759 702.623 cv
509.518 702.623 512 704.537 512.992 707.227 cv
514.434 704.783 516.893 702.623 521.374 702.623 cv
525.733 702.623 529.728 705.218 529.728 712.328 cv
529.728 729.72 li
524.717 729.72 li
524.717 712.947 li
524.717 710.007 523.658 706.943 519.743 706.943 cv
515.668 706.943 513.923 709.959 513.923 714.531 cv
513.923 729.72 li
508.917 729.72 li
508.917 713.117 li
508.917 709.841 508.01 706.967 504.053 706.967 cv
500.048 706.967 498.125 710.092 498.125 715.042 cv
498.125 729.72 li
493.066 729.72 li
493.066 710.073 li
cp
f
553.997 713.987 mo
553.945 709.879 551.94 706.556 547.601 706.556 cv
543.166 706.556 541.242 709.638 540.812 713.987 cv
553.997 713.987 li
cp
540.655 717.457 mo
540.684 722.44 543.189 726.151 547.52 726.151 cv
551.486 726.151 552.749 724.175 553.566 722.303 cv
558.7 722.303 li
557.679 725.664 554.829 730.344 547.369 730.344 cv
538.968 730.344 535.498 723.626 535.498 716.786 cv
535.498 708.83 539.521 702.623 547.657 702.623 cv
556.304 702.623 559.159 709.42 559.159 715.254 cv
559.159 716.077 559.159 716.734 559.083 717.457 cv
540.655 717.457 li
cp
f
561.796 703.247 mo
566.277 703.247 li
566.277 695.56 li
571.383 695.56 li
571.383 703.247 li
577.098 703.247 li
577.098 707.321 li
571.383 707.321 li
571.383 722.355 li
571.383 724.818 572.007 726.033 574.361 726.033 cv
574.952 726.033 575.855 726.005 576.545 725.839 cv
576.545 729.593 li
575.354 730.027 573.704 730.084 572.399 730.084 cv
568.079 730.084 566.277 727.829 566.277 723.386 cv
566.277 707.321 li
561.796 707.321 li
561.796 703.247 li
cp
f
580.052 735.696 mo
582.836 729.683 583.536 725.149 583.786 721.788 cv
588.986 721.788 li
588.527 726.529 586.84 731.985 584.164 735.696 cv
580.052 735.696 li
cp
f
629.48 721.532 mo
628.397 726.061 625.311 730.344 618.352 730.344 cv
610.883 730.344 606.42 725.012 606.42 716.635 cv
606.42 709.085 610.76 702.623 618.688 702.623 cv
626.568 702.623 629.178 708.248 629.48 711.581 cv
624.441 711.581 li
623.827 708.99 622.229 706.815 618.588 706.815 cv
614.163 706.815 611.658 710.621 611.658 716.46 cv
611.658 722.412 614.121 726.175 618.446 726.175 cv
621.604 726.175 623.42 724.463 624.417 721.532 cv
629.48 721.532 li
cp
f
638.494 716.483 mo
638.494 722.152 641.254 726.151 645.774 726.151 cv
650.374 726.151 652.956 722.327 652.956 716.507 cv
652.956 710.631 650.379 706.815 645.67 706.815 cv
641.018 706.815 638.494 710.527 638.494 716.483 cv
cp
658.193 716.432 mo
658.193 724.132 653.74 730.344 645.59 730.344 cv
637.884 730.344 633.256 724.478 633.256 716.531 cv
633.256 708.646 637.837 702.623 645.897 702.623 cv
653.333 702.623 658.193 708.125 658.193 716.432 cv
cp
f
663.959 709.917 mo
663.959 707.629 663.959 705.279 663.907 703.247 cv
668.866 703.247 li
668.994 704.008 669.069 706.608 669.064 707.407 cv
670.09 705.251 672.246 702.623 677.271 702.623 cv
682.301 702.623 686.102 705.766 686.102 712.73 cv
686.102 729.72 li
680.997 729.72 li
680.997 713.358 li
680.997 709.558 679.545 706.967 675.66 706.967 cv
671.031 706.967 669.064 710.366 669.064 715.562 cv
669.064 729.72 li
663.959 729.72 li
663.959 709.917 li
cp
f
696.151 722.071 mo
696.87 724.813 698.931 726.416 702.354 726.416 cv
706.013 726.416 707.437 724.875 707.437 722.625 cv
707.437 720.298 706.235 719.244 701.428 718.076 cv
693.656 716.181 692.11 713.798 692.11 710.177 cv
692.11 706.4 694.861 702.623 701.896 702.623 cv
708.953 702.623 711.738 706.66 712.059 710.328 cv
707.143 710.328 li
706.793 708.759 705.621 706.48 701.673 706.48 cv
698.212 706.48 697.172 708.125 697.172 709.756 cv
697.172 711.604 698.208 712.517 702.954 713.647 cv
711.137 715.581 712.674 718.327 712.674 722.251 cv
712.674 726.841 709.062 730.344 702.184 730.344 cv
695.098 730.344 691.746 726.799 691.089 722.071 cv
696.151 722.071 li
cp
f
735.109 713.987 mo
735.057 709.879 733.053 706.556 728.713 706.556 cv
724.278 706.556 722.354 709.638 721.924 713.987 cv
735.109 713.987 li
cp
721.768 717.457 mo
721.796 722.44 724.302 726.151 728.632 726.151 cv
732.599 726.151 733.861 724.175 734.679 722.303 cv
739.813 722.303 li
738.792 725.664 735.941 730.344 728.481 730.344 cv
720.081 730.344 716.61 723.626 716.61 716.786 cv
716.61 708.83 720.634 702.623 728.77 702.623 cv
737.416 702.623 740.271 709.42 740.271 715.254 cv
740.271 716.077 740.271 716.734 740.195 717.457 cv
721.768 717.457 li
cp
f
767.589 721.532 mo
766.506 726.061 763.419 730.344 756.461 730.344 cv
748.992 730.344 744.529 725.012 744.529 716.635 cv
744.529 709.085 748.869 702.623 756.796 702.623 cv
764.677 702.623 767.287 708.248 767.589 711.581 cv
762.55 711.581 li
761.936 708.99 760.337 706.815 756.697 706.815 cv
752.272 706.815 749.767 710.621 749.767 716.46 cv
749.767 722.412 752.229 726.175 756.555 726.175 cv
759.713 726.175 761.529 724.463 762.526 721.532 cv
767.589 721.532 li
cp
f
770.207 703.247 mo
774.688 703.247 li
774.688 695.56 li
779.794 695.56 li
779.794 703.247 li
785.509 703.247 li
785.509 707.321 li
779.794 707.321 li
779.794 722.355 li
779.794 724.818 780.418 726.033 782.772 726.033 cv
783.363 726.033 784.266 726.005 784.956 725.839 cv
784.956 729.593 li
783.765 730.027 782.115 730.084 780.811 730.084 cv
776.49 730.084 774.688 727.829 774.688 723.386 cv
774.688 707.321 li
770.207 707.321 li
770.207 703.247 li
cp
f
806.712 713.987 mo
806.66 709.879 804.655 706.556 800.315 706.556 cv
795.881 706.556 793.957 709.638 793.526 713.987 cv
806.712 713.987 li
cp
793.37 717.457 mo
793.398 722.44 795.904 726.151 800.235 726.151 cv
804.201 726.151 805.463 724.175 806.281 722.303 cv
811.415 722.303 li
810.394 725.664 807.543 730.344 800.083 730.344 cv
791.683 730.344 788.213 723.626 788.213 716.786 cv
788.213 708.83 792.236 702.623 800.372 702.623 cv
809.019 702.623 811.874 709.42 811.874 715.254 cv
811.874 716.077 811.874 716.734 811.798 717.457 cv
793.37 717.457 li
cp
f
814.51 703.247 mo
818.992 703.247 li
818.992 695.56 li
824.097 695.56 li
824.097 703.247 li
829.813 703.247 li
829.813 707.321 li
824.097 707.321 li
824.097 722.355 li
824.097 724.818 824.721 726.033 827.075 726.033 cv
827.667 726.033 828.569 726.005 829.259 725.839 cv
829.259 729.593 li
828.068 730.027 826.418 730.084 825.114 730.084 cv
820.793 730.084 818.992 727.829 818.992 723.386 cv
818.992 707.321 li
814.51 707.321 li
814.51 703.247 li
cp
f
855.724 722.01 mo
855.724 724.582 855.752 728 855.776 729.72 cv
850.798 729.72 li
850.694 729.021 850.642 727.446 850.619 725.929 cv
849.267 728.808 846.756 730.344 842.743 730.344 cv
838.1 730.344 833.978 727.919 833.978 720.625 cv
833.978 703.247 li
839.055 703.247 li
839.055 719.552 li
839.055 722.922 840.109 725.977 844.265 725.977 cv
848.836 725.977 850.619 723.457 850.619 717.107 cv
850.619 703.247 li
855.724 703.247 li
855.724 722.01 li
cp
f
863.301 710.437 mo
863.301 706.943 863.272 704.811 863.249 703.247 cv
868.255 703.247 li
868.331 703.96 868.406 706.145 868.406 708.503 cv
869.749 705.029 872.84 702.736 877.242 702.623 cv
877.242 707.652 li
871.833 707.756 868.406 710.319 868.406 717.122 cv
868.406 729.72 li
863.301 729.72 li
863.301 710.437 li
cp
f
924.802 713.987 mo
924.75 709.879 922.746 706.556 918.406 706.556 cv
913.971 706.556 912.047 709.638 911.617 713.987 cv
924.802 713.987 li
cp
911.46 717.457 mo
911.489 722.44 913.995 726.151 918.325 726.151 cv
922.292 726.151 923.554 724.175 924.372 722.303 cv
929.505 722.303 li
928.484 725.664 925.634 730.344 918.174 730.344 cv
909.773 730.344 906.303 723.626 906.303 716.786 cv
906.303 708.83 910.326 702.623 918.462 702.623 cv
927.109 702.623 929.964 709.42 929.964 715.254 cv
929.964 716.077 929.964 716.734 929.888 717.457 cv
911.46 717.457 li
cp
f
935.735 729.72 mo
935.735 691.584 li
940.84 691.584 li
940.84 729.72 li
935.735 729.72 li
cp
f
948.422 703.247 mo
953.527 703.247 li
953.527 729.72 li
948.422 729.72 li
948.422 703.247 li
cp
948.422 691.584 mo
953.527 691.584 li
953.527 697.455 li
948.422 697.455 li
948.422 691.584 li
cp
f
958.08 703.247 mo
962.561 703.247 li
962.561 695.56 li
967.667 695.56 li
967.667 703.247 li
973.382 703.247 li
973.382 707.321 li
967.667 707.321 li
967.667 722.355 li
967.667 724.818 968.291 726.033 970.645 726.033 cv
971.236 726.033 972.139 726.005 972.829 725.839 cv
972.829 729.593 li
971.638 730.027 969.988 730.084 968.683 730.084 cv
964.362 730.084 962.561 727.829 962.561 723.386 cv
962.561 707.321 li
958.08 707.321 li
958.08 703.247 li
cp
f
976.335 735.696 mo
979.12 729.683 979.819 725.149 980.07 721.788 cv
985.27 721.788 li
984.812 726.529 983.124 731.985 980.448 735.696 cv
976.335 735.696 li
cp
f
1007.31 722.071 mo
1008.03 724.813 1010.09 726.416 1013.52 726.416 cv
1017.17 726.416 1018.6 724.875 1018.6 722.625 cv
1018.6 720.298 1017.4 719.244 1012.59 718.076 cv
1004.82 716.181 1003.27 713.798 1003.27 710.177 cv
1003.27 706.4 1006.02 702.623 1013.06 702.623 cv
1020.11 702.623 1022.9 706.66 1023.22 710.328 cv
1018.3 710.328 li
1017.95 708.759 1016.78 706.48 1012.83 706.48 cv
1009.37 706.48 1008.33 708.125 1008.33 709.756 cv
1008.33 711.604 1009.37 712.517 1014.12 713.647 cv
1022.3 715.581 1023.83 718.327 1023.83 722.251 cv
1023.83 726.841 1020.22 730.344 1013.35 730.344 cv
1006.26 730.344 1002.91 726.799 1002.25 722.071 cv
1007.31 722.071 li
cp
f
1046.27 713.987 mo
1046.22 709.879 1044.21 706.556 1039.87 706.556 cv
1035.44 706.556 1033.52 709.638 1033.08 713.987 cv
1046.27 713.987 li
cp
1032.93 717.457 mo
1032.96 722.44 1035.46 726.151 1039.79 726.151 cv
1043.76 726.151 1045.02 724.175 1045.84 722.303 cv
1050.97 722.303 li
1049.95 725.664 1047.1 730.344 1039.64 730.344 cv
1031.24 730.344 1027.77 723.626 1027.77 716.786 cv
1027.77 708.83 1031.79 702.623 1039.93 702.623 cv
1048.58 702.623 1051.43 709.42 1051.43 715.254 cv
1051.43 716.077 1051.43 716.734 1051.36 717.457 cv
1032.93 717.457 li
cp
f
1060.95 716.597 mo
1060.95 722.752 1063.79 726.081 1067.84 726.081 cv
1073.81 726.081 1075.02 721.584 1075.02 716.167 cv
1075.02 710.545 1073.9 706.886 1068.17 706.886 cv
1063.66 706.886 1060.95 710.451 1060.95 716.597 cv
cp
1079.92 691.584 mo
1079.92 722.279 li
1079.92 724.751 1079.92 727.191 1079.97 729.72 cv
1075.07 729.72 li
1074.94 729.001 1074.84 727.101 1074.82 726.156 cv
1073.52 728.784 1070.91 730.344 1066.65 730.344 cv
1059.86 730.344 1055.67 724.855 1055.67 716.748 cv
1055.67 708.598 1060.18 702.623 1067.54 702.623 cv
1072.05 702.623 1074.13 704.41 1074.82 705.837 cv
1074.82 691.584 li
1079.92 691.584 li
cp
f
1104.01 716.597 mo
1104.01 722.752 1106.85 726.081 1110.9 726.081 cv
1116.86 726.081 1118.07 721.584 1118.07 716.167 cv
1118.07 710.545 1116.96 706.886 1111.22 706.886 cv
1106.71 706.886 1104.01 710.451 1104.01 716.597 cv
cp
1122.98 691.584 mo
1122.98 722.279 li
1122.98 724.751 1122.98 727.191 1123.03 729.72 cv
1118.12 729.72 li
1118 729.001 1117.9 727.101 1117.87 726.156 cv
1116.57 728.784 1113.97 730.344 1109.7 730.344 cv
1102.92 730.344 1098.72 724.855 1098.72 716.748 cv
1098.72 708.598 1103.24 702.623 1110.59 702.623 cv
1115.11 702.623 1117.19 704.41 1117.87 705.837 cv
1117.87 691.584 li
1122.98 691.584 li
cp
f
1133.94 716.483 mo
1133.94 722.152 1136.7 726.151 1141.22 726.151 cv
1145.82 726.151 1148.4 722.327 1148.4 716.507 cv
1148.4 710.631 1145.83 706.815 1141.12 706.815 cv
1136.46 706.815 1133.94 710.527 1133.94 716.483 cv
cp
1153.64 716.432 mo
1153.64 724.132 1149.19 730.344 1141.04 730.344 cv
1133.33 730.344 1128.7 724.478 1128.7 716.531 cv
1128.7 708.646 1133.28 702.623 1141.34 702.623 cv
1148.78 702.623 1153.64 708.125 1153.64 716.432 cv
cp
f
274.345 783.987 mo
274.293 779.879 272.289 776.556 267.949 776.556 cv
263.514 776.556 261.59 779.638 261.16 783.987 cv
274.345 783.987 li
cp
261.003 787.457 mo
261.032 792.44 263.538 796.151 267.868 796.151 cv
271.834 796.151 273.097 794.175 273.915 792.303 cv
279.048 792.303 li
278.027 795.664 275.177 800.344 267.717 800.344 cv
259.316 800.344 255.846 793.626 255.846 786.786 cv
255.846 778.83 259.869 772.623 268.005 772.623 cv
276.652 772.623 279.507 779.42 279.507 785.254 cv
279.507 786.077 279.507 786.734 279.431 787.457 cv
261.003 787.457 li
cp
f
285.382 773.247 mo
290.487 773.247 li
290.487 799.72 li
285.382 799.72 li
285.382 773.247 li
cp
285.382 761.584 mo
290.487 761.584 li
290.487 767.455 li
285.382 767.455 li
285.382 761.584 li
cp
f
319.716 792.01 mo
319.716 794.582 319.745 798 319.769 799.72 cv
314.791 799.72 li
314.687 799.021 314.635 797.446 314.611 795.929 cv
313.259 798.808 310.749 800.344 306.735 800.344 cv
302.093 800.344 297.971 797.919 297.971 790.625 cv
297.971 773.247 li
303.047 773.247 li
303.047 789.552 li
303.047 792.922 304.102 795.977 308.257 795.977 cv
312.829 795.977 314.611 793.457 314.611 787.107 cv
314.611 773.247 li
319.716 773.247 li
319.716 792.01 li
cp
f
329.766 792.071 mo
330.485 794.813 332.546 796.416 335.969 796.416 cv
339.628 796.416 341.051 794.875 341.051 792.625 cv
341.051 790.298 339.85 789.244 335.042 788.076 cv
327.271 786.181 325.725 783.798 325.725 780.177 cv
325.725 776.4 328.476 772.623 335.51 772.623 cv
342.568 772.623 345.353 776.66 345.674 780.328 cv
340.758 780.328 li
340.408 778.759 339.235 776.48 335.288 776.48 cv
331.827 776.48 330.787 778.125 330.787 779.756 cv
330.787 781.604 331.823 782.517 336.569 783.647 cv
344.752 785.581 346.289 788.327 346.289 792.251 cv
346.289 796.841 342.677 800.344 335.799 800.344 cv
328.712 800.344 325.36 796.799 324.704 792.071 cv
329.766 792.071 li
cp
f
351.733 780.073 mo
351.733 777.79 351.733 775.417 351.681 773.247 cv
356.593 773.247 li
356.668 774.012 356.796 775.871 356.792 777.142 cv
358.025 774.849 360.299 772.623 364.426 772.623 cv
368.185 772.623 370.667 774.537 371.659 777.227 cv
373.101 774.783 375.56 772.623 380.041 772.623 cv
384.4 772.623 388.395 775.218 388.395 782.328 cv
388.395 799.72 li
383.384 799.72 li
383.384 782.947 li
383.384 780.007 382.325 776.943 378.41 776.943 cv
374.335 776.943 372.59 779.959 372.59 784.531 cv
372.59 799.72 li
367.584 799.72 li
367.584 783.117 li
367.584 779.841 366.677 776.967 362.72 776.967 cv
358.715 776.967 356.792 780.092 356.792 785.042 cv
356.792 799.72 li
351.733 799.72 li
351.733 780.073 li
cp
f
399.403 786.483 mo
399.403 792.152 402.164 796.151 406.684 796.151 cv
411.283 796.151 413.865 792.327 413.865 786.507 cv
413.865 780.631 411.288 776.815 406.58 776.815 cv
401.927 776.815 399.403 780.527 399.403 786.483 cv
cp
419.102 786.432 mo
419.102 794.132 414.649 800.344 406.499 800.344 cv
398.793 800.344 394.165 794.478 394.165 786.531 cv
394.165 778.646 398.746 772.623 406.806 772.623 cv
414.243 772.623 419.102 778.125 419.102 786.432 cv
cp
f
428.645 786.597 mo
428.645 792.752 431.486 796.081 435.533 796.081 cv
441.5 796.081 442.71 791.584 442.71 786.167 cv
442.71 780.545 441.594 776.886 435.859 776.886 cv
431.349 776.886 428.645 780.451 428.645 786.597 cv
cp
447.616 761.584 mo
447.616 792.279 li
447.616 794.751 447.616 797.191 447.668 799.72 cv
442.762 799.72 li
442.634 799.001 442.535 797.101 442.511 796.156 cv
441.211 798.784 438.606 800.344 434.342 800.344 cv
427.558 800.344 423.36 794.855 423.36 786.748 cv
423.36 778.598 427.875 772.623 435.231 772.623 cv
439.746 772.623 441.826 774.41 442.511 775.837 cv
442.511 761.584 li
447.616 761.584 li
cp
f
464.974 773.247 mo
469.456 773.247 li
469.456 765.56 li
474.561 765.56 li
474.561 773.247 li
480.276 773.247 li
480.276 777.321 li
474.561 777.321 li
474.561 792.355 li
474.561 794.818 475.185 796.033 477.539 796.033 cv
478.13 796.033 479.033 796.005 479.723 795.839 cv
479.723 799.593 li
478.532 800.027 476.882 800.084 475.578 800.084 cv
471.257 800.084 469.456 797.829 469.456 793.386 cv
469.456 777.321 li
464.974 777.321 li
464.974 773.247 li
cp
f
501.479 783.987 mo
501.427 779.879 499.423 776.556 495.083 776.556 cv
490.648 776.556 488.724 779.638 488.294 783.987 cv
501.479 783.987 li
cp
488.138 787.457 mo
488.166 792.44 490.672 796.151 495.002 796.151 cv
498.969 796.151 500.231 794.175 501.049 792.303 cv
506.183 792.303 li
505.162 795.664 502.311 800.344 494.851 800.344 cv
486.451 800.344 482.98 793.626 482.98 786.786 cv
482.98 778.83 487.004 772.623 495.14 772.623 cv
503.786 772.623 506.641 779.42 506.641 785.254 cv
506.641 786.077 506.641 786.734 506.565 787.457 cv
488.138 787.457 li
cp
f
512.36 780.073 mo
512.36 777.79 512.36 775.417 512.308 773.247 cv
517.219 773.247 li
517.295 774.012 517.422 775.871 517.418 777.142 cv
518.652 774.849 520.926 772.623 525.053 772.623 cv
528.811 772.623 531.293 774.537 532.286 777.227 cv
533.728 774.783 536.186 772.623 540.667 772.623 cv
545.026 772.623 549.021 775.218 549.021 782.328 cv
549.021 799.72 li
544.01 799.72 li
544.01 782.947 li
544.01 780.007 542.951 776.943 539.037 776.943 cv
534.961 776.943 533.217 779.959 533.217 784.531 cv
533.217 799.72 li
528.211 799.72 li
528.211 783.117 li
528.211 779.841 527.303 776.967 523.346 776.967 cv
519.342 776.967 517.418 780.092 517.418 785.042 cv
517.418 799.72 li
512.36 799.72 li
512.36 780.073 li
cp
f
575.489 786.006 mo
575.489 780.541 573.049 776.915 568.728 776.915 cv
563.5 776.915 561.466 780.229 561.466 786.45 cv
561.466 792.473 563.164 796.104 568.388 796.104 cv
573.04 796.104 575.489 792.308 575.489 786.006 cv
cp
561.693 796.628 mo
561.693 810.073 li
556.612 810.073 li
556.612 779.69 li
556.612 777.534 556.612 775.317 556.56 773.247 cv
561.519 773.247 li
561.623 774.093 561.693 775.7 561.693 777.241 cv
563.069 774.712 565.693 772.623 570.16 772.623 cv
576.25 772.623 580.726 777.724 580.726 785.808 cv
580.726 795.239 575.616 800.344 569.206 800.344 cv
565.031 800.344 562.852 798.624 561.693 796.628 cv
cp
f
590.241 786.483 mo
590.241 792.152 593.002 796.151 597.522 796.151 cv
602.122 796.151 604.703 792.327 604.703 786.507 cv
604.703 780.631 602.126 776.815 597.418 776.815 cv
592.766 776.815 590.241 780.527 590.241 786.483 cv
cp
609.94 786.432 mo
609.94 794.132 605.487 800.344 597.337 800.344 cv
589.632 800.344 585.003 794.478 585.003 786.531 cv
585.003 778.646 589.584 772.623 597.645 772.623 cv
605.081 772.623 609.94 778.125 609.94 786.432 cv
cp
f
615.684 780.437 mo
615.684 776.943 615.655 774.811 615.631 773.247 cv
620.638 773.247 li
620.713 773.96 620.789 776.145 620.789 778.503 cv
622.131 775.029 625.223 772.736 629.625 772.623 cv
629.625 777.652 li
624.216 777.756 620.789 780.319 620.789 787.122 cv
620.789 799.72 li
615.684 799.72 li
615.684 780.437 li
cp
f
647.455 773.247 mo
652.56 773.247 li
652.56 799.72 li
647.455 799.72 li
647.455 773.247 li
cp
647.455 761.584 mo
652.56 761.584 li
652.56 767.455 li
647.455 767.455 li
647.455 761.584 li
cp
f
660.166 779.917 mo
660.166 777.629 660.166 775.279 660.114 773.247 cv
665.072 773.247 li
665.2 774.008 665.276 776.608 665.271 777.407 cv
666.297 775.251 668.453 772.623 673.478 772.623 cv
678.508 772.623 682.309 775.766 682.309 782.73 cv
682.309 799.72 li
677.204 799.72 li
677.204 783.358 li
677.204 779.558 675.752 776.967 671.866 776.967 cv
667.238 776.967 665.271 780.366 665.271 785.562 cv
665.271 799.72 li
660.166 799.72 li
660.166 779.917 li
cp
f
711.121 791.532 mo
710.039 796.061 706.952 800.344 699.993 800.344 cv
692.524 800.344 688.061 795.012 688.061 786.635 cv
688.061 779.085 692.401 772.623 700.329 772.623 cv
708.209 772.623 710.819 778.248 711.121 781.581 cv
706.082 781.581 li
705.468 778.99 703.87 776.815 700.229 776.815 cv
695.804 776.815 693.299 780.621 693.299 786.46 cv
693.299 792.412 695.762 796.175 700.087 796.175 cv
703.246 796.175 705.061 794.463 706.059 791.532 cv
711.121 791.532 li
cp
f
716.821 773.247 mo
721.926 773.247 li
721.926 799.72 li
716.821 799.72 li
716.821 773.247 li
cp
716.821 761.584 mo
721.926 761.584 li
721.926 767.455 li
716.821 767.455 li
716.821 761.584 li
cp
f
732.997 786.597 mo
732.997 792.752 735.838 796.081 739.885 796.081 cv
745.851 796.081 747.062 791.584 747.062 786.167 cv
747.062 780.545 745.945 776.886 740.211 776.886 cv
735.701 776.886 732.997 780.451 732.997 786.597 cv
cp
751.968 761.584 mo
751.968 792.279 li
751.968 794.751 751.968 797.191 752.02 799.72 cv
747.113 799.72 li
746.986 799.001 746.886 797.101 746.863 796.156 cv
745.563 798.784 742.958 800.344 738.694 800.344 cv
731.91 800.344 727.712 794.855 727.712 786.748 cv
727.712 778.598 732.227 772.623 739.583 772.623 cv
744.097 772.623 746.177 774.41 746.863 775.837 cv
746.863 761.584 li
751.968 761.584 li
cp
f
759.512 773.247 mo
764.617 773.247 li
764.617 799.72 li
759.512 799.72 li
759.512 773.247 li
cp
759.512 761.584 mo
764.617 761.584 li
764.617 767.455 li
759.512 767.455 li
759.512 761.584 li
cp
f
775.688 786.597 mo
775.688 792.752 778.529 796.081 782.576 796.081 cv
788.542 796.081 789.753 791.584 789.753 786.167 cv
789.753 780.545 788.637 776.886 782.902 776.886 cv
778.392 776.886 775.688 780.451 775.688 786.597 cv
cp
794.659 761.584 mo
794.659 792.279 li
794.659 794.751 794.659 797.191 794.711 799.72 cv
789.805 799.72 li
789.677 799.001 789.578 797.101 789.554 796.156 cv
788.254 798.784 785.649 800.344 781.385 800.344 cv
774.601 800.344 770.403 794.855 770.403 786.748 cv
770.403 778.598 774.918 772.623 782.274 772.623 cv
786.789 772.623 788.869 774.41 789.554 775.837 cv
789.554 761.584 li
794.659 761.584 li
cp
f
823.85 792.01 mo
823.85 794.582 823.878 798 823.902 799.72 cv
818.925 799.72 li
818.821 799.021 818.769 797.446 818.745 795.929 cv
817.393 798.808 814.883 800.344 810.869 800.344 cv
806.227 800.344 802.104 797.919 802.104 790.625 cv
802.104 773.247 li
807.181 773.247 li
807.181 789.552 li
807.181 792.922 808.235 795.977 812.391 795.977 cv
816.963 795.977 818.745 793.457 818.745 787.107 cv
818.745 773.247 li
823.85 773.247 li
823.85 792.01 li
cp
f
831.451 779.917 mo
831.451 777.629 831.451 775.279 831.399 773.247 cv
836.357 773.247 li
836.485 774.008 836.561 776.608 836.556 777.407 cv
837.582 775.251 839.738 772.623 844.763 772.623 cv
849.793 772.623 853.594 775.766 853.594 782.73 cv
853.594 799.72 li
848.489 799.72 li
848.489 783.358 li
848.489 779.558 847.037 776.967 843.151 776.967 cv
838.523 776.967 836.556 780.366 836.556 785.562 cv
836.556 799.72 li
831.451 799.72 li
831.451 779.917 li
cp
f
857.518 773.247 mo
861.999 773.247 li
861.999 765.56 li
867.104 765.56 li
867.104 773.247 li
872.82 773.247 li
872.82 777.321 li
867.104 777.321 li
867.104 792.355 li
867.104 794.818 867.729 796.033 870.083 796.033 cv
870.674 796.033 871.577 796.005 872.267 795.839 cv
872.267 799.593 li
871.076 800.027 869.426 800.084 868.121 800.084 cv
863.8 800.084 861.999 797.829 861.999 793.386 cv
861.999 777.321 li
857.518 777.321 li
857.518 773.247 li
cp
f
912.458 792.01 mo
912.458 794.582 912.486 798 912.51 799.72 cv
907.533 799.72 li
907.429 799.021 907.376 797.446 907.353 795.929 cv
906.001 798.808 903.491 800.344 899.477 800.344 cv
894.834 800.344 890.712 797.919 890.712 790.625 cv
890.712 773.247 li
895.789 773.247 li
895.789 789.552 li
895.789 792.922 896.843 795.977 900.999 795.977 cv
905.571 795.977 907.353 793.457 907.353 787.107 cv
907.353 773.247 li
912.458 773.247 li
912.458 792.01 li
cp
f
917.317 773.247 mo
921.798 773.247 li
921.798 765.56 li
926.904 765.56 li
926.904 773.247 li
932.619 773.247 li
932.619 777.321 li
926.904 777.321 li
926.904 792.355 li
926.904 794.818 927.528 796.033 929.882 796.033 cv
930.473 796.033 931.376 796.005 932.066 795.839 cv
932.066 799.593 li
930.875 800.027 929.225 800.084 927.92 800.084 cv
923.6 800.084 921.798 797.829 921.798 793.386 cv
921.798 777.321 li
917.317 777.321 li
917.317 773.247 li
cp
f
950.611 799.72 mo
950.611 761.584 li
955.716 761.584 li
955.716 799.72 li
950.611 799.72 li
cp
f
978.157 786.979 mo
977.358 786.979 975.462 786.979 974.124 786.979 cv
969.014 786.979 966.418 788.417 966.418 791.92 cv
966.418 794.511 968.167 796.439 971.311 796.439 cv
977.353 796.439 978.157 792.35 978.157 787.797 cv
978.157 786.979 li
cp
983.139 793.74 mo
983.139 796.17 983.347 798.983 983.503 799.72 cv
978.62 799.72 li
978.412 799.144 978.256 797.857 978.199 796.425 cv
977.268 798.136 975.216 800.344 970.167 800.344 cv
963.898 800.344 961.228 796.255 961.228 792.213 cv
961.228 786.28 965.908 783.562 973.755 783.562 cv
975.49 783.562 977.159 783.562 978.128 783.562 cv
978.128 781.43 li
978.128 779.184 977.396 776.527 972.744 776.527 cv
968.579 776.527 967.846 778.551 967.392 780.588 cv
962.476 780.588 li
962.835 776.735 965.218 772.599 972.914 772.623 cv
979.504 772.646 983.139 775.308 983.139 781.382 cv
983.139 793.74 li
cp
f
1009.73 786.058 mo
1009.73 780.598 1007.3 776.886 1002.84 776.886 cv
997.495 776.886 995.608 780.456 995.608 786.583 cv
995.608 791.892 997.282 796.104 1002.64 796.104 cv
1007.14 796.104 1009.73 792.232 1009.73 786.058 cv
cp
990.754 761.584 mo
995.859 761.584 li
995.859 776.835 li
997.036 774.684 999.419 772.623 1004.14 772.623 cv
1010.89 772.623 1014.96 778.187 1014.96 785.958 cv
1014.96 793.915 1010.95 800.344 1003.44 800.344 cv
999.258 800.344 997.14 798.86 995.812 796.416 cv
995.812 797.678 995.712 799.016 995.613 799.72 cv
990.702 799.72 li
990.754 796.78 990.754 793.815 990.754 790.875 cv
990.754 761.584 li
cp
f
1024.43 786.483 mo
1024.43 792.152 1027.2 796.151 1031.72 796.151 cv
1036.31 796.151 1038.9 792.327 1038.9 786.507 cv
1038.9 780.631 1036.32 776.815 1031.61 776.815 cv
1026.96 776.815 1024.43 780.527 1024.43 786.483 cv
cp
1044.13 786.432 mo
1044.13 794.132 1039.68 800.344 1031.53 800.344 cv
1023.83 800.344 1019.2 794.478 1019.2 786.531 cv
1019.2 778.646 1023.78 772.623 1031.84 772.623 cv
1039.27 772.623 1044.13 778.125 1044.13 786.432 cv
cp
f
1049.88 780.437 mo
1049.88 776.943 1049.85 774.811 1049.82 773.247 cv
1054.83 773.247 li
1054.91 773.96 1054.98 776.145 1054.98 778.503 cv
1056.32 775.029 1059.42 772.736 1063.82 772.623 cv
1063.82 777.652 li
1058.41 777.756 1054.98 780.319 1054.98 787.122 cv
1054.98 799.72 li
1049.88 799.72 li
1049.88 780.437 li
cp
f
1084.86 783.987 mo
1084.81 779.879 1082.8 776.556 1078.46 776.556 cv
1074.03 776.556 1072.1 779.638 1071.67 783.987 cv
1084.86 783.987 li
cp
1071.52 787.457 mo
1071.54 792.44 1074.05 796.151 1078.38 796.151 cv
1082.35 796.151 1083.61 794.175 1084.43 792.303 cv
1089.56 792.303 li
1088.54 795.664 1085.69 800.344 1078.23 800.344 cv
1069.83 800.344 1066.36 793.626 1066.36 786.786 cv
1066.36 778.83 1070.38 772.623 1078.52 772.623 cv
1087.17 772.623 1090.02 779.42 1090.02 785.254 cv
1090.02 786.077 1090.02 786.734 1089.94 787.457 cv
1071.52 787.457 li
cp
f
1125.16 783.987 mo
1125.11 779.879 1123.1 776.556 1118.76 776.556 cv
1114.33 776.556 1112.4 779.638 1111.97 783.987 cv
1125.16 783.987 li
cp
1111.82 787.457 mo
1111.84 792.44 1114.35 796.151 1118.68 796.151 cv
1122.65 796.151 1123.91 794.175 1124.73 792.303 cv
1129.86 792.303 li
1128.84 795.664 1125.99 800.344 1118.53 800.344 cv
1110.13 800.344 1106.66 793.626 1106.66 786.786 cv
1106.66 778.83 1110.68 772.623 1118.82 772.623 cv
1127.46 772.623 1130.32 779.42 1130.32 785.254 cv
1130.32 786.077 1130.32 786.734 1130.24 787.457 cv
1111.82 787.457 li
cp
f
1132.96 773.247 mo
1137.44 773.247 li
1137.44 765.56 li
1142.54 765.56 li
1142.54 773.247 li
1148.26 773.247 li
1148.26 777.321 li
1142.54 777.321 li
1142.54 792.355 li
1142.54 794.818 1143.17 796.033 1145.52 796.033 cv
1146.11 796.033 1147.02 796.005 1147.71 795.839 cv
1147.71 799.593 li
1146.51 800.027 1144.86 800.084 1143.56 800.084 cv
1139.24 800.084 1137.44 797.829 1137.44 793.386 cv
1137.44 777.321 li
1132.96 777.321 li
1132.96 773.247 li
cp
f
261.155 856.597 mo
261.155 862.752 263.996 866.081 268.043 866.081 cv
274.009 866.081 275.22 861.584 275.22 856.167 cv
275.22 850.545 274.104 846.886 268.369 846.886 cv
263.859 846.886 261.155 850.451 261.155 856.597 cv
cp
280.126 831.584 mo
280.126 862.279 li
280.126 864.751 280.126 867.191 280.178 869.72 cv
275.271 869.72 li
275.144 869.001 275.044 867.101 275.021 866.156 cv
273.721 868.784 271.116 870.344 266.852 870.344 cv
260.068 870.344 255.87 864.855 255.87 856.748 cv
255.87 848.598 260.385 842.623 267.741 842.623 cv
272.255 842.623 274.335 844.41 275.021 845.837 cv
275.021 831.584 li
280.126 831.584 li
cp
f
291.088 856.483 mo
291.088 862.152 293.849 866.151 298.369 866.151 cv
302.968 866.151 305.55 862.327 305.55 856.507 cv
305.55 850.631 302.973 846.815 298.265 846.815 cv
293.612 846.815 291.088 850.527 291.088 856.483 cv
cp
310.787 856.432 mo
310.787 864.132 306.334 870.344 298.184 870.344 cv
290.479 870.344 285.85 864.478 285.85 856.531 cv
285.85 848.646 290.431 842.623 298.491 842.623 cv
305.928 842.623 310.787 848.125 310.787 856.432 cv
cp
f
316.53 869.72 mo
316.53 831.584 li
321.635 831.584 li
321.635 869.72 li
316.53 869.72 li
cp
f
332.635 856.483 mo
332.635 862.152 335.396 866.151 339.916 866.151 cv
344.515 866.151 347.097 862.327 347.097 856.507 cv
347.097 850.631 344.52 846.815 339.812 846.815 cv
335.159 846.815 332.635 850.527 332.635 856.483 cv
cp
352.334 856.432 mo
352.334 864.132 347.881 870.344 339.731 870.344 cv
332.025 870.344 327.397 864.478 327.397 856.531 cv
327.397 848.646 331.978 842.623 340.038 842.623 cv
347.475 842.623 352.334 848.125 352.334 856.432 cv
cp
f
358.077 850.437 mo
358.077 846.943 358.048 844.811 358.024 843.247 cv
363.031 843.247 li
363.106 843.96 363.182 846.145 363.182 848.503 cv
364.524 845.029 367.616 842.736 372.018 842.623 cv
372.018 847.652 li
366.609 847.756 363.182 850.319 363.182 857.122 cv
363.182 869.72 li
358.077 869.72 li
358.077 850.437 li
cp
f
393.059 853.987 mo
393.007 849.879 391.002 846.556 386.663 846.556 cv
382.228 846.556 380.304 849.638 379.874 853.987 cv
393.059 853.987 li
cp
379.717 857.457 mo
379.746 862.44 382.251 866.151 386.582 866.151 cv
390.548 866.151 391.811 864.175 392.628 862.303 cv
397.762 862.303 li
396.741 865.664 393.891 870.344 386.431 870.344 cv
378.03 870.344 374.56 863.626 374.56 856.786 cv
374.56 848.83 378.583 842.623 386.719 842.623 cv
395.366 842.623 398.221 849.42 398.221 855.254 cv
398.221 856.077 398.221 856.734 398.145 857.457 cv
379.717 857.457 li
cp
f
416.68 850.073 mo
416.68 847.79 416.68 845.417 416.627 843.247 cv
421.539 843.247 li
421.615 844.012 421.742 845.871 421.738 847.142 cv
422.972 844.849 425.246 842.623 429.373 842.623 cv
433.131 842.623 435.613 844.537 436.605 847.227 cv
438.047 844.783 440.506 842.623 444.987 842.623 cv
449.346 842.623 453.341 845.218 453.341 852.328 cv
453.341 869.72 li
448.33 869.72 li
448.33 852.947 li
448.33 850.007 447.271 846.943 443.356 846.943 cv
439.281 846.943 437.537 849.959 437.537 854.531 cv
437.537 869.72 li
432.531 869.72 li
432.531 853.117 li
432.531 849.841 431.623 846.967 427.666 846.967 cv
423.662 846.967 421.738 850.092 421.738 855.042 cv
421.738 869.72 li
416.68 869.72 li
416.68 850.073 li
cp
f
475.79 856.979 mo
474.991 856.979 473.095 856.979 471.757 856.979 cv
466.647 856.979 464.051 858.417 464.051 861.92 cv
464.051 864.511 465.801 866.439 468.944 866.439 cv
474.986 866.439 475.79 862.35 475.79 857.797 cv
475.79 856.979 li
cp
480.772 863.74 mo
480.772 866.17 480.98 868.983 481.136 869.72 cv
476.253 869.72 li
476.045 869.144 475.889 867.857 475.833 866.425 cv
474.901 868.136 472.85 870.344 467.801 870.344 cv
461.532 870.344 458.861 866.255 458.861 862.213 cv
458.861 856.28 463.541 853.562 471.389 853.562 cv
473.124 853.562 474.792 853.562 475.762 853.562 cv
475.762 851.43 li
475.762 849.184 475.029 846.527 470.377 846.527 cv
466.212 846.527 465.479 848.551 465.025 850.588 cv
460.109 850.588 li
460.468 846.735 462.851 842.599 470.547 842.623 cv
477.137 842.646 480.772 845.308 480.772 851.382 cv
480.772 863.74 li
cp
f
491.875 856.309 mo
491.875 861.693 494.655 865.267 498.773 865.267 cv
504.233 865.267 505.808 861.589 505.808 855.987 cv
505.808 850.328 504.39 846.886 498.929 846.886 cv
494.367 846.886 491.875 850.664 491.875 856.309 cv
cp
510.639 867.172 mo
510.639 875.658 507.207 880.593 498.296 880.593 cv
489.952 880.593 487.593 875.923 487.158 872.443 cv
492.362 872.443 li
493.086 875.133 495.223 876.613 498.518 876.613 cv
504.286 876.613 505.661 872.978 505.661 867.059 cv
505.661 865.087 li
504.257 867.924 501.875 869.555 497.544 869.555 cv
490.94 869.555 486.591 864.166 486.591 856.531 cv
486.591 847.96 491.606 842.623 498.05 842.623 cv
503 842.623 505.099 844.953 505.661 846.608 cv
505.713 845.501 505.836 843.776 505.888 843.247 cv
510.719 843.247 li
510.696 844.939 510.639 848.338 510.639 850.881 cv
510.639 867.172 li
cp
f
518.207 849.917 mo
518.207 847.629 518.207 845.279 518.155 843.247 cv
523.113 843.247 li
523.241 844.008 523.317 846.608 523.312 847.407 cv
524.338 845.251 526.494 842.623 531.519 842.623 cv
536.549 842.623 540.35 845.766 540.35 852.73 cv
540.35 869.72 li
535.245 869.72 li
535.245 853.358 li
535.245 849.558 533.793 846.967 529.907 846.967 cv
525.279 846.967 523.312 850.366 523.312 855.562 cv
523.312 869.72 li
518.207 869.72 li
518.207 849.917 li
cp
f
562.734 856.979 mo
561.935 856.979 560.039 856.979 558.701 856.979 cv
553.591 856.979 550.995 858.417 550.995 861.92 cv
550.995 864.511 552.745 866.439 555.888 866.439 cv
561.93 866.439 562.734 862.35 562.734 857.797 cv
562.734 856.979 li
cp
567.716 863.74 mo
567.716 866.17 567.924 868.983 568.08 869.72 cv
563.197 869.72 li
562.989 869.144 562.833 867.857 562.776 866.425 cv
561.845 868.136 559.793 870.344 554.744 870.344 cv
548.476 870.344 545.805 866.255 545.805 862.213 cv
545.805 856.28 550.485 853.562 558.333 853.562 cv
560.067 853.562 561.736 853.562 562.706 853.562 cv
562.706 851.43 li
562.706 849.184 561.973 846.527 557.321 846.527 cv
553.156 846.527 552.423 848.551 551.969 850.588 cv
547.053 850.588 li
547.412 846.735 549.795 842.599 557.491 842.623 cv
564.081 842.646 567.716 845.308 567.716 851.382 cv
567.716 863.74 li
cp
f
603.554 856.979 mo
602.755 856.979 600.859 856.979 599.521 856.979 cv
594.411 856.979 591.815 858.417 591.815 861.92 cv
591.815 864.511 593.564 866.439 596.708 866.439 cv
602.75 866.439 603.554 862.35 603.554 857.797 cv
603.554 856.979 li
cp
608.536 863.74 mo
608.536 866.17 608.744 868.983 608.9 869.72 cv
604.017 869.72 li
603.809 869.144 603.653 867.857 603.596 866.425 cv
602.665 868.136 600.613 870.344 595.564 870.344 cv
589.296 870.344 586.625 866.255 586.625 862.213 cv
586.625 856.28 591.305 853.562 599.152 853.562 cv
600.887 853.562 602.556 853.562 603.525 853.562 cv
603.525 851.43 li
603.525 849.184 602.792 846.527 598.141 846.527 cv
593.976 846.527 593.243 848.551 592.789 850.588 cv
587.873 850.588 li
588.232 846.735 590.614 842.599 598.311 842.623 cv
604.901 842.646 608.536 845.308 608.536 851.382 cv
608.536 863.74 li
cp
f
616.151 869.72 mo
616.151 831.584 li
621.256 831.584 li
621.256 869.72 li
616.151 869.72 li
cp
f
628.838 843.247 mo
633.943 843.247 li
633.943 869.72 li
628.838 869.72 li
628.838 843.247 li
cp
628.838 831.584 mo
633.943 831.584 li
633.943 837.455 li
628.838 837.455 li
628.838 831.584 li
cp
f
644.991 856.568 mo
644.991 861.788 647.198 866.081 651.997 866.081 cv
657.476 866.081 659.013 862.284 659.013 856.375 cv
659.013 850.361 657.623 846.915 652.158 846.915 cv
647.42 846.915 644.991 850.915 644.991 856.568 cv
cp
658.909 866.104 mo
657.519 868.808 655.099 870.344 650.726 870.344 cv
644.745 870.344 639.706 865.641 639.706 856.772 cv
639.706 847.941 644.963 842.623 651.378 842.623 cv
656.162 842.623 658.285 844.773 658.909 846.438 cv
658.904 845.53 659.008 844.244 659.083 843.247 cv
663.919 843.247 li
663.891 845.889 663.867 848.13 663.867 850.546 cv
663.867 880.073 li
658.909 880.073 li
658.909 866.104 li
cp
f
693.072 862.01 mo
693.072 864.582 693.101 868 693.125 869.72 cv
688.147 869.72 li
688.043 869.021 687.991 867.446 687.967 865.929 cv
686.615 868.808 684.105 870.344 680.091 870.344 cv
675.449 870.344 671.327 867.919 671.327 860.625 cv
671.327 843.247 li
676.403 843.247 li
676.403 859.552 li
676.403 862.922 677.458 865.977 681.613 865.977 cv
686.185 865.977 687.967 863.457 687.967 857.107 cv
687.967 843.247 li
693.072 843.247 li
693.072 862.01 li
cp
f
715.82 856.979 mo
715.021 856.979 713.125 856.979 711.787 856.979 cv
706.677 856.979 704.081 858.417 704.081 861.92 cv
704.081 864.511 705.831 866.439 708.974 866.439 cv
715.016 866.439 715.82 862.35 715.82 857.797 cv
715.82 856.979 li
cp
720.802 863.74 mo
720.802 866.17 721.01 868.983 721.166 869.72 cv
716.283 869.72 li
716.075 869.144 715.919 867.857 715.862 866.425 cv
714.931 868.136 712.879 870.344 707.83 870.344 cv
701.562 870.344 698.891 866.255 698.891 862.213 cv
698.891 856.28 703.571 853.562 711.418 853.562 cv
713.153 853.562 714.822 853.562 715.792 853.562 cv
715.792 851.43 li
715.792 849.184 715.059 846.527 710.407 846.527 cv
706.242 846.527 705.509 848.551 705.055 850.588 cv
700.139 850.588 li
700.498 846.735 702.881 842.599 710.577 842.623 cv
717.167 842.646 720.802 845.308 720.802 851.382 cv
720.802 863.74 li
cp
f
727.543 869.72 mo
727.543 861.759 li
732.932 861.759 li
732.932 869.72 li
727.543 869.72 li
cp
f
758.543 833.603 mo
758.543 855.297 li
758.543 863.527 763.011 865.787 767.498 865.787 cv
772.731 865.787 776.357 863.31 776.357 855.297 cv
776.357 833.603 li
781.746 833.603 li
781.746 855.022 li
781.746 866.86 775.123 870.184 767.394 870.184 cv
759.745 870.184 753.126 866.614 753.126 855.325 cv
753.126 833.603 li
758.543 833.603 li
cp
f
786.59 843.247 mo
791.072 843.247 li
791.072 835.56 li
796.177 835.56 li
796.177 843.247 li
801.893 843.247 li
801.893 847.321 li
796.177 847.321 li
796.177 862.355 li
796.177 864.818 796.801 866.033 799.155 866.033 cv
799.747 866.033 800.649 866.005 801.339 865.839 cv
801.339 869.593 li
800.148 870.027 798.499 870.084 797.194 870.084 cv
792.873 870.084 791.072 867.829 791.072 863.386 cv
791.072 847.321 li
786.59 847.321 li
786.59 843.247 li
cp
f
836.563 853.987 mo
836.511 849.879 834.506 846.556 830.167 846.556 cv
825.732 846.556 823.808 849.638 823.377 853.987 cv
836.563 853.987 li
cp
823.221 857.457 mo
823.25 862.44 825.755 866.151 830.086 866.151 cv
834.052 866.151 835.314 864.175 836.132 862.303 cv
841.266 862.303 li
840.245 865.664 837.395 870.344 829.935 870.344 cv
821.534 870.344 818.064 863.626 818.064 856.786 cv
818.064 848.83 822.087 842.623 830.223 842.623 cv
838.87 842.623 841.725 849.42 841.725 855.254 cv
841.725 856.077 841.725 856.734 841.649 857.457 cv
823.221 857.457 li
cp
f
847.467 849.917 mo
847.467 847.629 847.467 845.279 847.415 843.247 cv
852.374 843.247 li
852.501 844.008 852.577 846.608 852.572 847.407 cv
853.598 845.251 855.754 842.623 860.779 842.623 cv
865.809 842.623 869.61 845.766 869.61 852.73 cv
869.61 869.72 li
864.505 869.72 li
864.505 853.358 li
864.505 849.558 863.053 846.967 859.167 846.967 cv
854.539 846.967 852.572 850.366 852.572 855.562 cv
852.572 869.72 li
847.467 869.72 li
847.467 849.917 li
cp
f
877.135 843.247 mo
882.24 843.247 li
882.24 869.72 li
877.135 869.72 li
877.135 843.247 li
cp
877.135 831.584 mo
882.24 831.584 li
882.24 837.455 li
877.135 837.455 li
877.135 831.584 li
cp
f
889.823 850.073 mo
889.823 847.79 889.823 845.417 889.771 843.247 cv
894.682 843.247 li
894.758 844.012 894.885 845.871 894.881 847.142 cv
896.115 844.849 898.389 842.623 902.516 842.623 cv
906.274 842.623 908.756 844.537 909.749 847.227 cv
911.19 844.783 913.649 842.623 918.13 842.623 cv
922.489 842.623 926.484 845.218 926.484 852.328 cv
926.484 869.72 li
921.473 869.72 li
921.473 852.947 li
921.473 850.007 920.414 846.943 916.5 846.943 cv
912.424 846.943 910.68 849.959 910.68 854.531 cv
910.68 869.72 li
905.674 869.72 li
905.674 853.117 li
905.674 849.841 904.766 846.967 900.809 846.967 cv
896.805 846.967 894.881 850.092 894.881 855.042 cv
894.881 869.72 li
889.823 869.72 li
889.823 850.073 li
cp
f
962.297 856.979 mo
961.498 856.979 959.602 856.979 958.264 856.979 cv
953.154 856.979 950.558 858.417 950.558 861.92 cv
950.558 864.511 952.308 866.439 955.451 866.439 cv
961.493 866.439 962.297 862.35 962.297 857.797 cv
962.297 856.979 li
cp
967.279 863.74 mo
967.279 866.17 967.487 868.983 967.643 869.72 cv
962.76 869.72 li
962.552 869.144 962.396 867.857 962.339 866.425 cv
961.408 868.136 959.356 870.344 954.308 870.344 cv
948.039 870.344 945.368 866.255 945.368 862.213 cv
945.368 856.28 950.048 853.562 957.896 853.562 cv
959.63 853.562 961.299 853.562 962.269 853.562 cv
962.269 851.43 li
962.269 849.184 961.536 846.527 956.884 846.527 cv
952.719 846.527 951.986 848.551 951.532 850.588 cv
946.616 850.588 li
946.975 846.735 949.357 842.599 957.054 842.623 cv
963.644 842.646 967.279 845.308 967.279 851.382 cv
967.279 863.74 li
cp
f
978.331 856.597 mo
978.331 862.752 981.172 866.081 985.219 866.081 cv
991.186 866.081 992.396 861.584 992.396 856.167 cv
992.396 850.545 991.28 846.886 985.545 846.886 cv
981.035 846.886 978.331 850.451 978.331 856.597 cv
cp
997.302 831.584 mo
997.302 862.279 li
997.302 864.751 997.302 867.191 997.354 869.72 cv
992.448 869.72 li
992.32 869.001 992.221 867.101 992.197 866.156 cv
990.897 868.784 988.292 870.344 984.028 870.344 cv
977.244 870.344 973.046 864.855 973.046 856.748 cv
973.046 848.598 977.561 842.623 984.917 842.623 cv
989.432 842.623 991.512 844.41 992.197 845.837 cv
992.197 831.584 li
997.302 831.584 li
cp
f
1017.9 850.073 mo
1017.9 847.79 1017.9 845.417 1017.85 843.247 cv
1022.76 843.247 li
1022.83 844.012 1022.96 845.871 1022.96 847.142 cv
1024.19 844.849 1026.46 842.623 1030.59 842.623 cv
1034.35 842.623 1036.83 844.537 1037.82 847.227 cv
1039.27 844.783 1041.72 842.623 1046.21 842.623 cv
1050.56 842.623 1054.56 845.218 1054.56 852.328 cv
1054.56 869.72 li
1049.55 869.72 li
1049.55 852.947 li
1049.55 850.007 1048.49 846.943 1044.58 846.943 cv
1040.5 846.943 1038.76 849.959 1038.76 854.531 cv
1038.76 869.72 li
1033.75 869.72 li
1033.75 853.117 li
1033.75 849.841 1032.84 846.967 1028.88 846.967 cv
1024.88 846.967 1022.96 850.092 1022.96 855.042 cv
1022.96 869.72 li
1017.9 869.72 li
1017.9 850.073 li
cp
f
1062.15 843.247 mo
1067.26 843.247 li
1067.26 869.72 li
1062.15 869.72 li
1062.15 843.247 li
cp
1062.15 831.584 mo
1067.26 831.584 li
1067.26 837.455 li
1062.15 837.455 li
1062.15 831.584 li
cp
f
1074.86 849.917 mo
1074.86 847.629 1074.86 845.279 1074.81 843.247 cv
1079.77 843.247 li
1079.9 844.008 1079.97 846.608 1079.97 847.407 cv
1080.99 845.251 1083.15 842.623 1088.17 842.623 cv
1093.2 842.623 1097 845.766 1097 852.73 cv
1097 869.72 li
1091.9 869.72 li
1091.9 853.358 li
1091.9 849.558 1090.45 846.967 1086.56 846.967 cv
1081.93 846.967 1079.97 850.366 1079.97 855.562 cv
1079.97 869.72 li
1074.86 869.72 li
1074.86 849.917 li
cp
f
1104.53 843.247 mo
1109.63 843.247 li
1109.63 869.72 li
1104.53 869.72 li
1104.53 843.247 li
cp
1104.53 831.584 mo
1109.63 831.584 li
1109.63 837.455 li
1104.53 837.455 li
1104.53 831.584 li
cp
f
1117.22 850.073 mo
1117.22 847.79 1117.22 845.417 1117.17 843.247 cv
1122.08 843.247 li
1122.15 844.012 1122.28 845.871 1122.28 847.142 cv
1123.51 844.849 1125.78 842.623 1129.91 842.623 cv
1133.67 842.623 1136.15 844.537 1137.14 847.227 cv
1138.58 844.783 1141.04 842.623 1145.52 842.623 cv
1149.88 842.623 1153.88 845.218 1153.88 852.328 cv
1153.88 869.72 li
1148.87 869.72 li
1148.87 852.947 li
1148.87 850.007 1147.81 846.943 1143.89 846.943 cv
1139.82 846.943 1138.07 849.959 1138.07 854.531 cv
1138.07 869.72 li
1133.07 869.72 li
1133.07 853.117 li
1133.07 849.841 1132.16 846.967 1128.2 846.967 cv
1124.2 846.967 1122.28 850.092 1122.28 855.042 cv
1122.28 869.72 li
1117.22 869.72 li
1117.22 850.073 li
cp
f
1159.97 869.72 mo
1159.97 861.759 li
1165.36 861.759 li
1165.36 869.72 li
1159.97 869.72 li
cp
f
581.163 1204.2 mo
280.875 1204.2 li
265.963 1204.2 253.875 1192.11 253.875 1177.2 cv
253.875 1121.39 li
253.875 1106.48 265.963 1094.39 280.875 1094.39 cv
581.163 1094.39 li
596.075 1094.39 608.163 1106.48 608.163 1121.39 cv
608.163 1177.2 li
608.163 1192.11 596.075 1204.2 581.163 1204.2 cv
cp
level3{
gsave
clp
[354.288 0 0 354.288 253.875 1149.29 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.901961 .34902 .145098 ]
/C1 [.984314 .603922 .168627 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[354.288 0 0 354.288 253.875 1149.29 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~k2tggk2tggk2tggk3(pjkND$kkND$kkNM-nkih6okih6okiq?rl07Hsl07Hsl0@R!lK[["lK[["lKdd%
lg*m&lg*m&lg*p(m-O**m-O**m-O-,mHs<.mHs<.mHs?0mdBN2mdBN2mdBQ4n*f`6n*f`6n*fc8nF5r:
nF5r:nF5r;naZ/>naZ/>naZ/?o()ABo()ABo()ACoCMSFoCMSFoCMSGo^qeJo^qeJo^qeKp%A"Np%A"N
p%A"Np@e4Rp@e4Rp@e4Rp\4FVp\4FVp\4FVq"XXZq"XXZq"XXZq>'j^q>'j^q>'j^qYL'bqYL'bqYL'b
~>
<~=]nm1>$>*5>?b<9>[1N=?!U`A?=$rE?XI/I?smAM@:<SQ@U`eU@q0"YA7T4]AS#FaAnGXeB4kjiBP;'m
Bk_9rC2.L!CMR^%Ci!p)D/F--DJj?1Df9Q5E,]c9EH,u=EcQ2AF)uDEFEDVIF`hhMG'8%QGB\7UG^+IY
H$O^^H?spbH[C-fI!g?jI=6QnIXZcrIt*!!J:N3%JUrE)JqAW-K7ei1KS5&5KnY89L5(J=LPL\ALkpnE
M2I1JMMmCNMi<URN/`gVNK0$ZNfT6^O-#HbOHGZfOckljP*;)nPE_;rPa.N!Q'R`%QC!r)Q^F/-R$jA1
~>
<~,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,paia-71&d-71&d-71&d-71&d-71&d
-71&d-71&d-71&d-71&d-71&d-71)f-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jm.4H\p.4H\p.4H\p.4H\p.4H\p
.4H\p.4H\p.4H\p.4H\p.4H\p.4H_r.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
313.063 1130.1 mo
318.011 1130.1 li
318.011 1159.26 li
335.253 1159.26 li
334.599 1163.45 li
313.063 1163.45 li
313.063 1130.1 li
cp
.929412 .992157 .988235 rgb
f
355.055 1148.92 mo
355.006 1145.13 353.156 1142.06 349.149 1142.06 cv
345.056 1142.06 343.279 1144.91 342.883 1148.92 cv
355.055 1148.92 li
cp
342.738 1152.13 mo
342.765 1156.72 345.078 1160.15 349.075 1160.15 cv
352.737 1160.15 353.902 1158.33 354.657 1156.6 cv
359.396 1156.6 li
358.453 1159.7 355.822 1164.02 348.936 1164.02 cv
341.181 1164.02 337.978 1157.82 337.978 1151.51 cv
337.978 1144.16 341.691 1138.43 349.202 1138.43 cv
357.184 1138.43 359.819 1144.71 359.819 1150.09 cv
359.819 1150.85 359.819 1151.46 359.75 1152.13 cv
342.738 1152.13 li
cp
f
379.054 1151.68 mo
378.316 1151.68 376.566 1151.68 375.331 1151.68 cv
370.613 1151.68 368.218 1153.01 368.218 1156.25 cv
368.218 1158.64 369.832 1160.42 372.734 1160.42 cv
378.312 1160.42 379.054 1156.64 379.054 1152.44 cv
379.054 1151.68 li
cp
383.653 1157.92 mo
383.653 1160.17 383.845 1162.76 383.989 1163.45 cv
379.481 1163.45 li
379.289 1162.91 379.146 1161.73 379.093 1160.4 cv
378.233 1161.98 376.339 1164.02 371.679 1164.02 cv
365.892 1164.02 363.426 1160.25 363.426 1156.52 cv
363.426 1151.04 367.746 1148.53 374.991 1148.53 cv
376.593 1148.53 378.133 1148.53 379.027 1148.53 cv
379.027 1146.56 li
379.027 1144.49 378.352 1142.04 374.057 1142.04 cv
370.212 1142.04 369.535 1143.9 369.116 1145.78 cv
364.578 1145.78 li
364.91 1142.23 367.109 1138.41 374.214 1138.43 cv
380.297 1138.45 383.653 1140.91 383.653 1146.52 cv
383.653 1157.92 li
cp
f
390.682 1145.64 mo
390.682 1142.42 390.655 1140.45 390.634 1139.01 cv
395.255 1139.01 li
395.324 1139.67 395.395 1141.68 395.395 1143.86 cv
396.634 1140.65 399.487 1138.54 403.551 1138.43 cv
403.551 1143.07 li
398.558 1143.17 395.395 1145.54 395.395 1151.82 cv
395.395 1163.45 li
390.682 1163.45 li
390.682 1145.64 li
cp
f
407.503 1145.16 mo
407.503 1143.05 407.503 1140.88 407.455 1139.01 cv
412.032 1139.01 li
412.15 1139.71 412.22 1142.11 412.216 1142.85 cv
413.163 1140.86 415.152 1138.43 419.792 1138.43 cv
424.435 1138.43 427.943 1141.33 427.943 1147.76 cv
427.943 1163.45 li
423.231 1163.45 li
423.231 1148.34 li
423.231 1144.83 421.892 1142.44 418.304 1142.44 cv
414.031 1142.44 412.216 1145.58 412.216 1150.38 cv
412.216 1163.45 li
407.503 1163.45 li
407.503 1145.16 li
cp
f
446.937 1145.31 mo
446.937 1143.2 446.937 1141.01 446.889 1139.01 cv
451.422 1139.01 li
451.492 1139.71 451.609 1141.43 451.605 1142.6 cv
452.744 1140.49 454.844 1138.43 458.653 1138.43 cv
462.123 1138.43 464.414 1140.2 465.33 1142.68 cv
466.661 1140.42 468.931 1138.43 473.067 1138.43 cv
477.091 1138.43 480.779 1140.83 480.779 1147.39 cv
480.779 1163.45 li
476.153 1163.45 li
476.153 1147.96 li
476.153 1145.25 475.176 1142.42 471.563 1142.42 cv
467.801 1142.42 466.19 1145.2 466.19 1149.42 cv
466.19 1163.45 li
461.569 1163.45 li
461.569 1148.12 li
461.569 1145.09 460.73 1142.44 457.078 1142.44 cv
453.382 1142.44 451.605 1145.33 451.605 1149.9 cv
451.605 1163.45 li
446.937 1163.45 li
446.937 1145.31 li
cp
f
490.939 1151.23 mo
490.939 1156.46 493.488 1160.15 497.66 1160.15 cv
501.906 1160.15 504.289 1156.62 504.289 1151.25 cv
504.289 1145.82 501.911 1142.3 497.564 1142.3 cv
493.27 1142.3 490.939 1145.73 490.939 1151.23 cv
cp
509.124 1151.18 mo
509.124 1158.29 505.014 1164.02 497.49 1164.02 cv
490.377 1164.02 486.104 1158.61 486.104 1151.27 cv
486.104 1143.99 490.333 1138.43 497.773 1138.43 cv
504.638 1138.43 509.124 1143.51 509.124 1151.18 cv
cp
f
514.424 1145.64 mo
514.424 1142.42 514.397 1140.45 514.376 1139.01 cv
518.997 1139.01 li
519.067 1139.67 519.137 1141.68 519.137 1143.86 cv
520.376 1140.65 523.23 1138.54 527.293 1138.43 cv
527.293 1143.07 li
522.301 1143.17 519.137 1145.54 519.137 1151.82 cv
519.137 1163.45 li
514.424 1163.45 li
514.424 1145.64 li
cp
f
546.716 1148.92 mo
546.668 1145.13 544.817 1142.06 540.812 1142.06 cv
536.718 1142.06 534.941 1144.91 534.544 1148.92 cv
546.716 1148.92 li
cp
534.4 1152.13 mo
534.427 1156.72 536.739 1160.15 540.737 1160.15 cv
544.398 1160.15 545.563 1158.33 546.318 1156.6 cv
551.058 1156.6 li
550.115 1159.7 547.483 1164.02 540.598 1164.02 cv
532.843 1164.02 529.64 1157.82 529.64 1151.51 cv
529.64 1144.16 533.354 1138.43 540.863 1138.43 cv
548.845 1138.43 551.481 1144.71 551.481 1150.09 cv
551.481 1150.85 551.481 1151.46 551.411 1152.13 cv
534.4 1152.13 li
cp
f
697.875 1145.14 mo
697.875 1142.95 697.875 1140.67 697.825 1138.58 cv
702.548 1138.58 li
702.621 1139.31 702.743 1141.1 702.739 1142.32 cv
703.925 1140.12 706.112 1137.98 710.08 1137.98 cv
713.694 1137.98 716.081 1139.82 717.035 1142.41 cv
718.421 1140.06 720.786 1137.98 725.095 1137.98 cv
729.286 1137.98 733.127 1140.47 733.127 1147.31 cv
733.127 1164.04 li
728.309 1164.04 li
728.309 1147.91 li
728.309 1145.08 727.291 1142.13 723.527 1142.13 cv
719.608 1142.13 717.931 1145.03 717.931 1149.43 cv
717.931 1164.04 li
713.117 1164.04 li
713.117 1148.07 li
713.117 1144.92 712.244 1142.16 708.439 1142.16 cv
704.589 1142.16 702.739 1145.16 702.739 1149.92 cv
702.739 1164.04 li
697.875 1164.04 li
697.875 1145.14 li
cp
.0980392 .0980392 .0980392 rgb
f
743.711 1151.31 mo
743.711 1156.76 746.366 1160.6 750.712 1160.6 cv
755.135 1160.6 757.617 1156.93 757.617 1151.33 cv
757.617 1145.68 755.14 1142.01 750.612 1142.01 cv
746.139 1142.01 743.711 1145.58 743.711 1151.31 cv
cp
762.653 1151.26 mo
762.653 1158.66 758.371 1164.63 750.535 1164.63 cv
743.125 1164.63 738.675 1158.99 738.675 1151.35 cv
738.675 1143.77 743.08 1137.98 750.83 1137.98 cv
757.98 1137.98 762.653 1143.27 762.653 1151.26 cv
cp
f
768.175 1145.49 mo
768.175 1142.13 768.147 1140.08 768.125 1138.58 cv
772.938 1138.58 li
773.011 1139.27 773.083 1141.37 773.083 1143.63 cv
774.375 1140.29 777.348 1138.09 781.58 1137.98 cv
781.58 1142.81 li
776.379 1142.91 773.083 1145.38 773.083 1151.92 cv
773.083 1164.04 li
768.175 1164.04 li
768.175 1145.49 li
cp
f
801.812 1148.91 mo
801.762 1144.96 799.834 1141.76 795.661 1141.76 cv
791.397 1141.76 789.547 1144.72 789.133 1148.91 cv
801.812 1148.91 li
cp
788.983 1152.24 mo
789.01 1157.04 791.419 1160.6 795.583 1160.6 cv
799.397 1160.6 800.611 1158.7 801.398 1156.9 cv
806.334 1156.9 li
805.352 1160.13 802.611 1164.63 795.438 1164.63 cv
787.36 1164.63 784.024 1158.18 784.024 1151.6 cv
784.024 1143.95 787.893 1137.98 795.715 1137.98 cv
804.029 1137.98 806.775 1144.52 806.775 1150.13 cv
806.775 1150.92 806.775 1151.55 806.702 1152.24 cv
788.983 1152.24 li
cp
f
827.878 1151.42 mo
827.878 1157.33 830.61 1160.54 834.502 1160.54 cv
840.239 1160.54 841.402 1156.21 841.402 1151 cv
841.402 1145.6 840.33 1142.08 834.815 1142.08 cv
830.479 1142.08 827.878 1145.51 827.878 1151.42 cv
cp
846.121 1127.36 mo
846.121 1156.88 li
846.121 1159.26 846.121 1161.6 846.17 1164.04 cv
841.453 1164.04 li
841.33 1163.34 841.234 1161.52 841.211 1160.61 cv
839.961 1163.13 837.457 1164.63 833.356 1164.63 cv
826.833 1164.63 822.797 1159.36 822.797 1151.56 cv
822.797 1143.72 827.138 1137.98 834.211 1137.98 cv
838.552 1137.98 840.552 1139.7 841.211 1141.07 cv
841.211 1127.36 li
846.121 1127.36 li
cp
f
869.411 1148.91 mo
869.361 1144.96 867.434 1141.76 863.261 1141.76 cv
858.997 1141.76 857.146 1144.72 856.732 1148.91 cv
869.411 1148.91 li
cp
856.583 1152.24 mo
856.61 1157.04 859.019 1160.6 863.183 1160.6 cv
866.997 1160.6 868.211 1158.7 868.998 1156.9 cv
873.934 1156.9 li
872.952 1160.13 870.211 1164.63 863.038 1164.63 cv
854.96 1164.63 851.624 1158.18 851.624 1151.6 cv
851.624 1143.95 855.492 1137.98 863.315 1137.98 cv
871.629 1137.98 874.375 1144.52 874.375 1150.13 cv
874.375 1150.92 874.375 1151.55 874.302 1152.24 cv
856.583 1152.24 li
cp
f
876.909 1138.58 mo
881.219 1138.58 li
881.219 1131.19 li
886.127 1131.19 li
886.127 1138.58 li
891.624 1138.58 li
891.624 1142.5 li
886.127 1142.5 li
886.127 1156.95 li
886.127 1159.32 886.728 1160.49 888.992 1160.49 cv
889.56 1160.49 890.428 1160.46 891.092 1160.3 cv
891.092 1163.91 li
889.946 1164.33 888.36 1164.38 887.105 1164.38 cv
882.951 1164.38 881.219 1162.22 881.219 1157.94 cv
881.219 1142.5 li
876.909 1142.5 li
876.909 1138.58 li
cp
f
910.811 1151.78 mo
910.042 1151.78 908.22 1151.78 906.933 1151.78 cv
902.019 1151.78 899.523 1153.17 899.523 1156.54 cv
899.523 1159.03 901.205 1160.88 904.228 1160.88 cv
910.038 1160.88 910.811 1156.95 910.811 1152.57 cv
910.811 1151.78 li
cp
915.602 1158.29 mo
915.602 1160.62 915.801 1163.33 915.952 1164.04 cv
911.256 1164.04 li
911.056 1163.48 910.906 1162.24 910.852 1160.87 cv
909.956 1162.51 907.983 1164.63 903.128 1164.63 cv
897.101 1164.63 894.532 1160.7 894.532 1156.82 cv
894.532 1151.11 899.033 1148.5 906.579 1148.5 cv
908.247 1148.5 909.852 1148.5 910.783 1148.5 cv
910.783 1146.45 li
910.783 1144.29 910.079 1141.73 905.605 1141.73 cv
901.601 1141.73 900.896 1143.68 900.459 1145.64 cv
895.732 1145.64 li
896.078 1141.93 898.369 1137.96 905.769 1137.98 cv
912.106 1138 915.602 1140.56 915.602 1146.4 cv
915.602 1158.29 li
cp
f
922.923 1138.58 mo
927.832 1138.58 li
927.832 1164.04 li
922.923 1164.04 li
922.923 1138.58 li
cp
922.923 1127.36 mo
927.832 1127.36 li
927.832 1133.01 li
922.923 1133.01 li
922.923 1127.36 li
cp
f
935.123 1164.04 mo
935.123 1127.36 li
940.032 1127.36 li
940.032 1164.04 li
935.123 1164.04 li
cp
f
949.799 1156.68 mo
950.49 1159.32 952.473 1160.86 955.764 1160.86 cv
959.282 1160.86 960.65 1159.38 960.65 1157.21 cv
960.65 1154.97 959.496 1153.96 954.873 1152.84 cv
947.4 1151.02 945.913 1148.72 945.913 1145.24 cv
945.913 1141.61 948.559 1137.98 955.323 1137.98 cv
962.109 1137.98 964.787 1141.86 965.096 1145.39 cv
960.369 1145.39 li
960.032 1143.88 958.905 1141.69 955.109 1141.69 cv
951.781 1141.69 950.781 1143.27 950.781 1144.84 cv
950.781 1146.62 951.777 1147.49 956.341 1148.58 cv
964.209 1150.44 965.687 1153.08 965.687 1156.85 cv
965.687 1161.27 962.214 1164.63 955.6 1164.63 cv
948.786 1164.63 945.563 1161.22 944.932 1156.68 cv
949.799 1156.68 li
cp
f
966.853 1177 mo
694.853 1177 li
693.748 1177 692.853 1176.1 692.853 1175 cv
692.853 1173.9 693.748 1173 694.853 1173 cv
966.853 1173 li
967.958 1173 968.853 1173.9 968.853 1175 cv
968.853 1176.1 967.958 1177 966.853 1177 cv
cp
0 0 0 rgb
f
1930 226.555 mo
1743.04 226.555 li
1728.13 226.555 1716.04 214.466 1716.04 199.555 cv
1716.04 147.555 li
1716.04 132.643 1728.13 120.555 1743.04 120.555 cv
1930 120.555 li
1944.91 120.555 1957 132.643 1957 147.555 cv
1957 199.555 li
1957 214.466 1944.91 226.555 1930 226.555 cv
cp
level3{
gsave
clp
[240.957 0 0 240.957 1716.04 173.554 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[240.957 0 0 240.957 1716.04 173.554 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
1772.11 152.751 mo
1777.47 152.751 li
1777.47 167.643 li
1795.48 167.643 li
1795.48 152.751 li
1800.84 152.751 li
1800.84 188.869 li
1795.48 188.869 li
1795.48 172.181 li
1777.47 172.181 li
1777.47 188.869 li
1772.11 188.869 li
1772.11 152.751 li
cp
.929412 .992157 .988235 rgb
f
1812.45 175.632 mo
1812.45 181.3 1815.21 185.3 1819.73 185.3 cv
1824.33 185.3 1826.92 181.475 1826.92 175.655 cv
1826.92 169.779 1824.34 165.964 1819.63 165.964 cv
1814.98 165.964 1812.45 169.675 1812.45 175.632 cv
cp
1832.15 175.58 mo
1832.15 183.281 1827.7 189.493 1819.55 189.493 cv
1811.84 189.493 1807.22 183.626 1807.22 175.679 cv
1807.22 167.794 1811.8 161.771 1819.86 161.771 cv
1827.29 161.771 1832.15 167.274 1832.15 175.58 cv
cp
f
1837.89 169.222 mo
1837.89 166.938 1837.89 164.565 1837.84 162.395 cv
1842.75 162.395 li
1842.83 163.161 1842.96 165.019 1842.95 166.291 cv
1844.19 163.998 1846.46 161.771 1850.59 161.771 cv
1854.35 161.771 1856.83 163.686 1857.82 166.375 cv
1859.26 163.932 1861.72 161.771 1866.2 161.771 cv
1870.56 161.771 1874.56 164.366 1874.56 171.477 cv
1874.56 188.869 li
1869.54 188.869 li
1869.54 172.096 li
1869.54 169.155 1868.49 166.092 1864.57 166.092 cv
1860.5 166.092 1858.75 169.108 1858.75 173.679 cv
1858.75 188.869 li
1853.75 188.869 li
1853.75 172.266 li
1853.75 168.99 1852.84 166.115 1848.88 166.115 cv
1844.88 166.115 1842.95 169.24 1842.95 174.19 cv
1842.95 188.869 li
1837.89 188.869 li
1837.89 169.222 li
cp
f
1898.83 173.136 mo
1898.77 169.027 1896.77 165.704 1892.43 165.704 cv
1887.99 165.704 1886.07 168.786 1885.64 173.136 cv
1898.83 173.136 li
cp
1885.48 176.605 mo
1885.51 181.588 1888.02 185.3 1892.35 185.3 cv
1896.32 185.3 1897.58 183.324 1898.4 181.451 cv
1903.53 181.451 li
1902.51 184.812 1899.66 189.493 1892.2 189.493 cv
1883.8 189.493 1880.33 182.775 1880.33 175.935 cv
1880.33 167.978 1884.35 161.771 1892.49 161.771 cv
1901.13 161.771 1903.99 168.569 1903.99 174.402 cv
1903.99 175.225 1903.99 175.882 1903.91 176.605 cv
1885.48 176.605 li
cp
f
2133.78 188.869 mo
2133.78 152.751 li
2140.75 152.751 li
2145.8 161.133 2156.52 178.464 2158.47 182.393 cv
2158.55 182.393 li
2158.19 177.92 2158.22 172.115 2158.22 166.21 cv
2158.22 152.751 li
2163.23 152.751 li
2163.23 188.869 li
2156.66 188.869 li
2152.06 181.177 2140.78 162.328 2138.61 158.253 cv
2138.53 158.253 li
2138.79 162.187 2138.81 168.554 2138.81 175.064 cv
2138.81 188.869 li
2133.78 188.869 li
cp
.0980392 .0980392 .0980392 rgb
f
2188.11 173.136 mo
2188.06 169.027 2186.05 165.704 2181.71 165.704 cv
2177.28 165.704 2175.35 168.787 2174.92 173.136 cv
2188.11 173.136 li
cp
2174.77 176.605 mo
2174.8 181.588 2177.3 185.3 2181.63 185.3 cv
2185.6 185.3 2186.86 183.324 2187.68 181.451 cv
2192.81 181.451 li
2191.79 184.812 2188.94 189.493 2181.48 189.493 cv
2173.08 189.493 2169.61 182.775 2169.61 175.935 cv
2169.61 167.978 2173.63 161.771 2181.77 161.771 cv
2190.42 161.771 2193.27 168.569 2193.27 174.403 cv
2193.27 175.225 2193.27 175.882 2193.2 176.605 cv
2174.77 176.605 li
cp
f
2201.81 162.395 mo
2204.92 174.464 2206.69 181.357 2207.15 184.189 cv
2207.22 184.189 li
2207.71 181.636 2209.37 175.504 2213.02 162.395 cv
2217.96 162.395 li
2221.87 176.999 2223.04 181.249 2223.46 183.726 cv
2223.52 183.726 li
2224.15 180.913 2225.16 176.941 2229.09 162.395 cv
2234.23 162.395 li
2226.13 188.869 li
2220.63 188.869 li
2218.13 179.145 2215.83 170.909 2215.27 167.926 cv
2215.21 167.926 li
2214.74 170.899 2212.56 178.553 2209.7 188.869 cv
2204.05 188.869 li
2196.4 162.395 li
2201.81 162.395 li
cp
f
2241.76 181.22 mo
2242.48 183.962 2244.54 185.564 2247.96 185.564 cv
2251.62 185.564 2253.05 184.023 2253.05 181.773 cv
2253.05 179.447 2251.85 178.393 2247.04 177.225 cv
2239.27 175.329 2237.72 172.947 2237.72 169.325 cv
2237.72 165.548 2240.47 161.771 2247.5 161.771 cv
2254.56 161.771 2257.35 165.808 2257.67 169.477 cv
2252.75 169.477 li
2252.4 167.907 2251.23 165.628 2247.28 165.628 cv
2243.82 165.628 2242.78 167.273 2242.78 168.905 cv
2242.78 170.753 2243.82 171.666 2248.56 172.795 cv
2256.75 174.729 2258.28 177.476 2258.28 181.399 cv
2258.28 185.99 2254.67 189.493 2247.79 189.493 cv
2240.71 189.493 2237.36 185.947 2236.7 181.22 cv
2241.76 181.22 li
cp
f
2787.49 173.968 mo
2784.21 164.829 2782.37 159.818 2781.57 156.972 cv
2781.52 156.972 li
2780.64 160.13 2778.58 166.153 2775.94 173.968 cv
2787.49 173.968 li
cp
2774.62 178.506 mo
2770.94 188.869 li
2765.62 188.869 li
2778.37 152.751 li
2785.01 152.751 li
2798.31 188.869 li
2792.62 188.869 li
2788.8 178.506 li
2774.62 178.506 li
cp
f
2822.01 175.207 mo
2822.01 169.746 2819.59 166.035 2815.13 166.035 cv
2809.78 166.035 2807.9 169.604 2807.9 175.731 cv
2807.9 181.04 2809.57 185.252 2814.93 185.252 cv
2819.43 185.252 2822.01 181.38 2822.01 175.207 cv
cp
2803.04 150.732 mo
2808.15 150.732 li
2808.15 165.983 li
2809.33 163.832 2811.71 161.771 2816.43 161.771 cv
2823.18 161.771 2827.25 167.335 2827.25 175.107 cv
2827.25 183.063 2823.24 189.493 2815.73 189.493 cv
2811.55 189.493 2809.43 188.008 2808.1 185.564 cv
2808.1 186.826 2808 188.164 2807.9 188.869 cv
2802.99 188.869 li
2803.04 185.928 2803.04 182.964 2803.04 180.023 cv
2803.04 150.732 li
cp
f
2836.72 175.632 mo
2836.72 181.3 2839.48 185.3 2844 185.3 cv
2848.6 185.3 2851.18 181.475 2851.18 175.655 cv
2851.18 169.779 2848.61 165.964 2843.9 165.964 cv
2839.25 165.964 2836.72 169.675 2836.72 175.632 cv
cp
2856.42 175.58 mo
2856.42 183.281 2851.97 189.493 2843.82 189.493 cv
2836.11 189.493 2831.49 183.626 2831.49 175.679 cv
2831.49 167.794 2836.07 161.771 2844.13 161.771 cv
2851.56 161.771 2856.42 167.274 2856.42 175.58 cv
cp
f
2883.81 181.158 mo
2883.81 183.73 2883.84 187.148 2883.86 188.869 cv
2878.89 188.869 li
2878.78 188.169 2878.73 186.595 2878.71 185.077 cv
2877.35 187.956 2874.84 189.493 2870.83 189.493 cv
2866.19 189.493 2862.07 187.068 2862.07 179.773 cv
2862.07 162.395 li
2867.14 162.395 li
2867.14 178.7 li
2867.14 182.071 2868.2 185.125 2872.35 185.125 cv
2876.92 185.125 2878.71 182.605 2878.71 176.256 cv
2878.71 162.395 li
2883.81 162.395 li
2883.81 181.158 li
cp
f
2888.67 162.395 mo
2893.15 162.395 li
2893.15 154.708 li
2898.26 154.708 li
2898.26 162.395 li
2903.97 162.395 li
2903.97 166.47 li
2898.26 166.47 li
2898.26 181.503 li
2898.26 183.966 2898.88 185.182 2901.24 185.182 cv
2901.83 185.182 2902.73 185.153 2903.42 184.988 cv
2903.42 188.741 li
2902.23 189.176 2900.58 189.232 2899.27 189.232 cv
2894.95 189.232 2893.15 186.978 2893.15 182.534 cv
2893.15 166.47 li
2888.67 166.47 li
2888.67 162.395 li
cp
f
2943.61 181.158 mo
2943.61 183.73 2943.64 187.148 2943.66 188.869 cv
2938.68 188.869 li
2938.58 188.169 2938.53 186.595 2938.5 185.077 cv
2937.15 187.956 2934.64 189.493 2930.63 189.493 cv
2925.99 189.493 2921.86 187.068 2921.86 179.773 cv
2921.86 162.395 li
2926.94 162.395 li
2926.94 178.7 li
2926.94 182.071 2928 185.125 2932.15 185.125 cv
2936.72 185.125 2938.5 182.605 2938.5 176.256 cv
2938.5 162.395 li
2943.61 162.395 li
2943.61 181.158 li
cp
f
2953.66 181.22 mo
2954.38 183.962 2956.44 185.564 2959.86 185.564 cv
2963.52 185.564 2964.94 184.023 2964.94 181.773 cv
2964.94 179.447 2963.74 178.393 2958.94 177.225 cv
2951.16 175.329 2949.62 172.946 2949.62 169.325 cv
2949.62 165.548 2952.37 161.771 2959.4 161.771 cv
2966.46 161.771 2969.25 165.808 2969.57 169.477 cv
2964.65 169.477 li
2964.3 167.907 2963.13 165.628 2959.18 165.628 cv
2955.72 165.628 2954.68 167.273 2954.68 168.905 cv
2954.68 170.753 2955.72 171.666 2960.46 172.795 cv
2968.65 174.729 2970.18 177.476 2970.18 181.399 cv
2970.18 185.99 2966.57 189.493 2959.69 189.493 cv
2952.61 189.493 2949.25 185.947 2948.6 181.22 cv
2953.66 181.22 li
cp
f
3210.12 174 mo
3206.59 164.159 3204.61 158.763 3203.75 155.698 cv
3203.69 155.698 li
3202.74 159.099 3200.53 165.584 3197.68 174 cv
3210.12 174 li
cp
3196.26 178.887 mo
3192.3 190.046 li
3186.57 190.046 li
3200.3 151.152 li
3207.45 151.152 li
3221.77 190.046 li
3215.64 190.046 li
3211.54 178.887 li
3196.26 178.887 li
cp
f
3249.74 181.229 mo
3248.57 186.106 3245.25 190.718 3237.76 190.718 cv
3229.71 190.718 3224.91 184.976 3224.91 175.955 cv
3224.91 167.825 3229.58 160.866 3238.12 160.866 cv
3246.6 160.866 3249.41 166.923 3249.74 170.513 cv
3244.31 170.513 li
3243.65 167.723 3241.93 165.381 3238.01 165.381 cv
3233.25 165.381 3230.55 169.479 3230.55 175.767 cv
3230.55 182.176 3233.2 186.229 3237.86 186.229 cv
3241.26 186.229 3243.21 184.386 3244.29 181.229 cv
3249.74 181.229 li
cp
f
3278.69 181.229 mo
3277.52 186.106 3274.2 190.718 3266.71 190.718 cv
3258.66 190.718 3253.86 184.976 3253.86 175.955 cv
3253.86 167.825 3258.53 160.866 3267.07 160.866 cv
3275.55 160.866 3278.36 166.923 3278.69 170.513 cv
3273.26 170.513 li
3272.6 167.723 3270.88 165.381 3266.96 165.381 cv
3262.2 165.381 3259.5 169.479 3259.5 175.767 cv
3259.5 182.176 3262.15 186.229 3266.81 186.229 cv
3270.21 186.229 3272.16 184.386 3273.24 181.229 cv
3278.69 181.229 li
cp
f
3288.4 175.792 mo
3288.4 181.896 3291.37 186.203 3296.24 186.203 cv
3301.19 186.203 3303.97 182.084 3303.97 175.817 cv
3303.97 169.489 3301.2 165.381 3296.13 165.381 cv
3291.12 165.381 3288.4 169.377 3288.4 175.792 cv
cp
3309.61 175.736 mo
3309.61 184.029 3304.82 190.718 3296.04 190.718 cv
3287.74 190.718 3282.76 184.4 3282.76 175.843 cv
3282.76 167.352 3287.69 160.866 3296.37 160.866 cv
3304.38 160.866 3309.61 166.791 3309.61 175.736 cv
cp
f
3339.11 181.743 mo
3339.11 184.513 3339.14 188.193 3339.16 190.046 cv
3333.8 190.046 li
3333.69 189.293 3333.64 187.598 3333.61 185.963 cv
3332.15 189.064 3329.45 190.718 3325.13 190.718 cv
3320.13 190.718 3315.69 188.107 3315.69 180.251 cv
3315.69 161.538 li
3321.16 161.538 li
3321.16 179.096 li
3321.16 182.726 3322.29 186.015 3326.77 186.015 cv
3331.69 186.015 3333.61 183.301 3333.61 176.464 cv
3333.61 161.538 li
3339.11 161.538 li
3339.11 181.743 li
cp
f
3347.29 168.721 mo
3347.29 166.257 3347.29 163.727 3347.24 161.538 cv
3352.58 161.538 li
3352.71 162.357 3352.8 165.157 3352.79 166.018 cv
3353.9 163.696 3356.22 160.866 3361.63 160.866 cv
3367.05 160.866 3371.14 164.251 3371.14 171.75 cv
3371.14 190.046 li
3365.64 190.046 li
3365.64 172.427 li
3365.64 168.333 3364.08 165.543 3359.89 165.543 cv
3354.91 165.543 3352.79 169.205 3352.79 174.799 cv
3352.79 190.046 li
3347.29 190.046 li
3347.29 168.721 li
cp
f
3375.37 161.538 mo
3380.19 161.538 li
3380.19 153.26 li
3385.69 153.26 li
3385.69 161.538 li
3391.84 161.538 li
3391.84 165.926 li
3385.69 165.926 li
3385.69 182.115 li
3385.69 184.768 3386.36 186.076 3388.9 186.076 cv
3389.53 186.076 3390.5 186.045 3391.25 185.867 cv
3391.25 189.909 li
3389.97 190.377 3388.19 190.438 3386.78 190.438 cv
3382.13 190.438 3380.19 188.01 3380.19 183.225 cv
3380.19 165.926 li
3375.37 165.926 li
3375.37 161.538 li
cp
f
2483.68 152.751 mo
2483.68 188.869 li
2478.32 188.869 li
2478.32 152.751 li
2483.68 152.751 li
cp
f
2491.56 169.065 mo
2491.56 166.777 2491.56 164.428 2491.51 162.395 cv
2496.46 162.395 li
2496.59 163.156 2496.67 165.756 2496.66 166.555 cv
2497.69 164.399 2499.84 161.771 2504.87 161.771 cv
2509.9 161.771 2513.7 164.915 2513.7 171.878 cv
2513.7 188.869 li
2508.6 188.869 li
2508.6 172.507 li
2508.6 168.706 2507.14 166.115 2503.26 166.115 cv
2498.63 166.115 2496.66 169.515 2496.66 174.71 cv
2496.66 188.869 li
2491.56 188.869 li
2491.56 169.065 li
cp
f
2522.07 188.869 mo
2522.07 166.47 li
2517.88 166.47 li
2517.88 162.395 li
2522.07 162.395 li
2522.07 159.388 li
2522.07 154.406 2524.1 150.212 2529.92 150.212 cv
2530.94 150.212 2532.29 150.345 2532.94 150.553 cv
2532.94 154.797 li
2532.35 154.661 2531.46 154.58 2530.77 154.58 cv
2528.15 154.58 2527.17 156.055 2527.17 159.729 cv
2527.17 162.395 li
2532.35 162.395 li
2532.35 166.47 li
2527.17 166.47 li
2527.17 188.869 li
2522.07 188.869 li
cp
f
2539.52 175.632 mo
2539.52 181.3 2542.28 185.3 2546.79 185.3 cv
2551.4 185.3 2553.98 181.475 2553.98 175.655 cv
2553.98 169.779 2551.4 165.964 2546.69 165.964 cv
2542.04 165.964 2539.52 169.675 2539.52 175.632 cv
cp
2559.21 175.58 mo
2559.21 183.281 2554.76 189.493 2546.61 189.493 cv
2538.91 189.493 2534.28 183.626 2534.28 175.679 cv
2534.28 167.794 2538.86 161.771 2546.92 161.771 cv
2554.36 161.771 2559.21 167.274 2559.21 175.58 cv
cp
f
268.29 190.636 mo
268.29 175.962 li
268.29 175.562 268.2 175.155 268.005 174.85 cv
253.875 150.353 li
260.691 150.353 li
264.251 156.807 269.745 166.757 271.617 170.458 cv
273.356 166.836 279.067 156.738 282.731 150.353 cv
289.085 150.353 li
274.554 174.896 li
274.411 175.155 274.301 175.361 274.301 175.978 cv
274.301 190.636 li
268.29 190.636 li
cp
f
291.584 175.872 mo
291.584 182.194 294.663 186.655 299.704 186.655 cv
304.835 186.655 307.714 182.39 307.714 175.898 cv
307.714 169.345 304.84 165.09 299.588 165.09 cv
294.399 165.09 291.584 169.229 291.584 175.872 cv
cp
313.556 175.814 mo
313.556 184.403 308.589 191.332 299.499 191.332 cv
290.904 191.332 285.742 184.788 285.742 175.925 cv
285.742 167.131 290.852 160.413 299.842 160.413 cv
308.135 160.413 313.556 166.551 313.556 175.814 cv
cp
f
344.104 182.036 mo
344.104 184.904 344.137 188.717 344.163 190.636 cv
338.611 190.636 li
338.495 189.855 338.438 188.1 338.411 186.407 cv
336.903 189.618 334.104 191.332 329.627 191.332 cv
324.449 191.332 319.852 188.627 319.852 180.491 cv
319.852 161.109 li
325.514 161.109 li
325.514 179.295 li
325.514 183.054 326.689 186.46 331.324 186.46 cv
336.423 186.46 338.411 183.649 338.411 176.568 cv
338.411 161.109 li
344.104 161.109 li
344.104 182.036 li
cp
f
352.558 169.129 mo
352.558 165.232 352.526 162.854 352.5 161.109 cv
358.083 161.109 li
358.167 161.905 358.252 164.341 358.252 166.973 cv
359.749 163.097 363.197 160.54 368.106 160.413 cv
368.106 166.022 li
362.074 166.139 358.252 168.997 358.252 176.584 cv
358.252 190.636 li
352.558 190.636 li
352.558 169.129 li
cp
f
388.976 190.636 mo
388.976 150.353 li
396.753 150.353 li
402.389 159.701 414.337 179.031 416.521 183.413 cv
416.604 183.413 li
416.204 178.425 416.235 171.95 416.235 165.364 cv
416.235 150.353 li
421.824 150.353 li
421.824 190.636 li
414.501 190.636 li
409.365 182.057 396.79 161.035 394.364 156.49 cv
394.28 156.49 li
394.57 160.877 394.591 167.979 394.591 175.239 cv
394.591 190.636 li
388.976 190.636 li
cp
f
447.312 176.426 mo
446.421 176.426 444.306 176.426 442.813 176.426 cv
437.114 176.426 434.219 178.029 434.219 181.936 cv
434.219 184.825 436.17 186.977 439.677 186.977 cv
446.415 186.977 447.312 182.416 447.312 177.338 cv
447.312 176.426 li
cp
452.868 183.966 mo
452.868 186.676 453.101 189.813 453.274 190.636 cv
447.828 190.636 li
447.597 189.992 447.422 188.559 447.359 186.961 cv
446.32 188.869 444.032 191.332 438.4 191.332 cv
431.409 191.332 428.431 186.77 428.431 182.263 cv
428.431 175.645 433.65 172.614 442.402 172.614 cv
444.338 172.614 446.199 172.614 447.28 172.614 cv
447.28 170.236 li
447.28 167.731 446.463 164.769 441.274 164.769 cv
436.629 164.769 435.812 167.025 435.306 169.298 cv
429.822 169.298 li
430.223 165 432.88 160.387 441.464 160.413 cv
448.813 160.439 452.868 163.408 452.868 170.184 cv
452.868 183.966 li
cp
f
461.363 168.723 mo
461.363 166.176 461.363 163.529 461.306 161.109 cv
466.783 161.109 li
466.867 161.964 467.01 164.035 467.005 165.454 cv
468.381 162.896 470.917 160.413 475.52 160.413 cv
479.712 160.413 482.479 162.549 483.587 165.549 cv
485.195 162.823 487.938 160.413 492.936 160.413 cv
497.797 160.413 502.252 163.308 502.252 171.238 cv
502.252 190.636 li
496.664 190.636 li
496.664 171.929 li
496.664 168.648 495.482 165.232 491.116 165.232 cv
486.571 165.232 484.626 168.597 484.626 173.695 cv
484.626 190.636 li
479.043 190.636 li
479.043 172.118 li
479.043 168.464 478.03 165.259 473.617 165.259 cv
469.15 165.259 467.005 168.744 467.005 174.265 cv
467.005 190.636 li
461.363 190.636 li
461.363 168.723 li
cp
f
529.323 173.089 mo
529.266 168.507 527.03 164.8 522.189 164.8 cv
517.244 164.8 515.098 168.237 514.618 173.089 cv
529.323 173.089 li
cp
514.443 176.959 mo
514.476 182.517 517.271 186.655 522.1 186.655 cv
526.523 186.655 527.932 184.451 528.844 182.363 cv
534.569 182.363 li
533.431 186.112 530.251 191.332 521.932 191.332 cv
512.562 191.332 508.691 183.839 508.691 176.21 cv
508.691 167.336 513.179 160.413 522.253 160.413 cv
531.896 160.413 535.081 167.995 535.081 174.502 cv
535.081 175.419 535.081 176.151 534.996 176.959 cv
514.443 176.959 li
cp
f
296.603 1315.64 mo
296.603 1324.67 289.276 1332 280.239 1332 cv
271.201 1332 263.875 1324.67 263.875 1315.64 cv
263.875 1306.6 271.201 1299.27 280.239 1299.27 cv
289.276 1299.27 296.603 1306.6 296.603 1315.64 cv
cp
.592157 .976471 .890196 rgb
f
381.36 1315.64 mo
381.36 1324.67 374.034 1332 364.996 1332 cv
355.958 1332 348.632 1324.67 348.632 1315.64 cv
348.632 1306.6 355.958 1299.27 364.996 1299.27 cv
374.034 1299.27 381.36 1306.6 381.36 1315.64 cv
cp
f
466.118 1315.64 mo
466.118 1324.67 458.792 1332 449.754 1332 cv
440.716 1332 433.39 1324.67 433.39 1315.64 cv
433.39 1306.6 440.716 1299.27 449.754 1299.27 cv
458.792 1299.27 466.118 1306.6 466.118 1315.64 cv
cp
level3{
gsave
clp
[-31.1847 42.6498 -42.6498 -31.1847 474.233 1282.16 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-31.1847 42.6498 -42.6498 -31.1847 474.233 1282.16 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
550.875 1315.64 mo
550.875 1324.67 543.549 1332 534.511 1332 cv
525.474 1332 518.147 1324.67 518.147 1315.64 cv
518.147 1306.6 525.474 1299.27 534.511 1299.27 cv
543.549 1299.27 550.875 1306.6 550.875 1315.64 cv
cp
.592157 .976471 .890196 rgb
f
2159.38 1453.34 mo
2159.41 1379.83 2172.32 1315.7 2194.84 1260.96 cv
2193.59 1260.29 2192.33 1259.62 2191.08 1258.95 cv
2168.33 1314.26 2155.28 1379.06 2155.25 1453.34 cv
2156.63 1453.34 2158 1453.34 2159.38 1453.34 cv
cp
.717647 .85098 .447059 rgb
f
2155.36 1453.23 mo
2159.28 1453.23 li
2159.31 1382.78 2171.23 1318.12 2194.71 1261 cv
2191.13 1259.09 li
2167.43 1316.77 2155.39 1382.08 2155.36 1453.23 cv
cp
2159.49 1453.44 mo
2155.15 1453.44 li
2155.15 1453.34 li
2155.17 1382.08 2167.23 1316.66 2190.98 1258.91 cv
2191.02 1258.8 li
2194.97 1260.91 li
2194.94 1261 li
2171.44 1318.13 2159.51 1382.84 2159.49 1453.34 cv
2159.49 1453.44 li
cp
f
2460.44 1032.56 mo
2512.56 1020 2567.02 1017.95 2619.9 1026.43 cv
2620.12 1024.94 2620.35 1023.46 2620.57 1021.97 cv
2567.14 1013.41 2512.12 1015.47 2459.45 1028.17 cv
2459.78 1029.63 2460.11 1031.1 2460.44 1032.56 cv
cp
f
2459.58 1028.25 mo
2460.52 1032.43 li
2491.48 1024.98 2523.42 1021.2 2555.48 1021.2 cv
2576.99 1021.2 2598.63 1022.92 2619.81 1026.31 cv
2620.45 1022.06 li
2599.07 1018.64 2577.2 1016.9 2555.48 1016.9 cv
2523.1 1016.9 2490.84 1020.72 2459.58 1028.25 cv
cp
2460.36 1032.69 mo
2459.32 1028.09 li
2459.43 1028.07 li
2490.74 1020.52 2523.05 1016.69 2555.48 1016.69 cv
2577.25 1016.69 2599.16 1018.43 2620.59 1021.87 cv
2620.69 1021.89 li
2619.99 1026.55 li
2619.88 1026.53 li
2598.68 1023.13 2577.01 1021.41 2555.48 1021.41 cv
2523.4 1021.41 2491.44 1025.2 2460.47 1032.66 cv
2460.36 1032.69 li
cp
f
2668.04 1037.21 mo
2721.11 1052.59 2771.25 1079.12 2814.18 1116.81 cv
2815.08 1115.64 2815.98 1114.47 2816.88 1113.3 cv
2773.5 1075.21 2722.84 1048.4 2669.21 1032.87 cv
2668.82 1034.31 2668.43 1035.76 2668.04 1037.21 cv
cp
f
2668.16 1037.13 mo
2694.93 1044.9 2720.77 1055.47 2744.96 1068.55 cv
2769.82 1081.99 2793.1 1098.17 2814.17 1116.66 cv
2816.73 1113.31 li
2774.32 1076.09 2724.71 1049.07 2669.28 1033 cv
2668.16 1037.13 li
cp
2814.2 1116.96 mo
2814.11 1116.89 li
2772.09 1080 2722.93 1053.22 2668.01 1037.31 cv
2667.91 1037.28 li
2669.13 1032.73 li
2669.24 1032.76 li
2696.32 1040.61 2722.46 1051.3 2746.94 1064.54 cv
2772.09 1078.13 2795.64 1094.51 2816.95 1113.22 cv
2817.02 1113.28 li
2814.2 1116.96 li
cp
f
2835.8 1137.38 mo
2866.03 1168.54 2891.79 1205.98 2911.29 1249.69 cv
2912.52 1248.98 2913.76 1248.27 2915 1247.56 cv
2895.3 1203.4 2869.27 1165.57 2838.73 1134.08 cv
2837.75 1135.18 2836.78 1136.28 2835.8 1137.38 cv
cp
f
2835.95 1137.38 mo
2867.09 1169.5 2892.46 1207.24 2911.33 1249.54 cv
2914.86 1247.52 li
2895.8 1204.79 2870.18 1166.68 2838.73 1134.24 cv
2835.95 1137.38 li
cp
2911.24 1249.84 mo
2911.19 1249.73 li
2892.3 1207.38 2866.91 1169.6 2835.73 1137.45 cv
2835.66 1137.38 li
2836.43 1136.51 li
2838.72 1133.93 li
2838.8 1134.01 li
2870.33 1166.51 2896 1204.7 2915.09 1247.52 cv
2915.13 1247.61 li
2911.24 1249.84 li
cp
f
2940.54 1322.47 mo
2939.22 1322.92 2937.89 1323.37 2936.57 1323.82 cv
2946.26 1363.16 2951.55 1406.33 2951.57 1453.34 cv
2952.95 1453.34 2954.32 1453.34 2955.7 1453.34 cv
2955.68 1405.84 2950.34 1362.21 2940.54 1322.47 cv
cp
f
2936.69 1323.89 mo
2946.61 1364.15 2951.65 1407.67 2951.68 1453.23 cv
2955.59 1453.23 li
2955.57 1407.22 2950.48 1363.27 2940.46 1322.61 cv
2936.69 1323.89 li
cp
2951.46 1453.44 mo
2951.46 1453.34 li
2951.45 1407.72 2946.4 1364.15 2936.46 1323.85 cv
2936.44 1323.75 li
2940.62 1322.33 li
2940.64 1322.44 li
2950.69 1363.18 2955.79 1407.22 2955.81 1453.34 cv
2955.81 1453.44 li
2951.46 1453.44 li
cp
f
2221.52 1207.49 mo
2253.5 1153.86 2295.92 1111.81 2344.29 1081.35 cv
2343.55 1080.06 2342.82 1078.76 2342.08 1077.47 cv
2293.22 1108.25 2250.35 1150.73 2218.04 1204.93 cv
2219.2 1205.78 2220.36 1206.64 2221.52 1207.49 cv
cp
f
2218.18 1204.9 mo
2221.49 1207.34 li
2237.11 1181.16 2255.68 1157.05 2276.68 1135.66 cv
2296.91 1115.06 2319.61 1096.78 2344.15 1081.32 cv
2342.05 1077.62 li
2291.07 1109.75 2249.39 1152.57 2218.18 1204.9 cv
cp
2221.56 1207.65 mo
2217.9 1204.95 li
2217.95 1204.87 li
2233.74 1178.38 2252.52 1153.98 2273.78 1132.34 cv
2294.24 1111.51 2317.21 1093.01 2342.03 1077.38 cv
2342.12 1077.32 li
2344.43 1081.39 li
2344.34 1081.44 li
2293.82 1113.26 2252.53 1155.69 2221.62 1207.55 cv
2221.56 1207.65 li
cp
f
2231.56 1737.93 mo
2231.56 1737.93 2447.63 1631.4 2484.79 1575.83 cv
2521.95 1520.26 2467.32 1517.12 2467.32 1517.12 cv
2467.32 1517.12 2563.74 1423.34 2550.18 1383.86 cv
2536.61 1344.38 2485.99 1382.1 2485.99 1382.1 cv
2485.99 1382.1 2548.66 1242.57 2519.43 1228.7 cv
2464.98 1202.86 2388.59 1351.35 2388.59 1351.35 cv
2388.59 1351.35 2405.01 1286.84 2367.51 1288.94 cv
2310.97 1292.1 2313.3 1438.02 2313.3 1438.02 cv
2313.3 1438.02 2306.92 1382.07 2272.83 1400.25 cv
2211.68 1432.86 2231.56 1737.93 2231.56 1737.93 cv
cp
level3{
gsave
clp
[-243.974 22.0128 -22.0128 -243.974 2827.56 1440.34 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.32549 .803922 .623529 ]
/C1 [.0509804 .478431 .360784 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-243.974 22.0128 -22.0128 -243.974 2827.56 1440.34 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~;c6Lk;,L1f:f'ta:JXb]:/4PY9he;T9MA)P91qlL8kDTG8OuBC84Q0?7Rfj:77BX66psF16UO4-6:+")
5s[b$5X7Ou5<h=q5!;%l4Zkhh4?GVd3]];_3B9)[3&ilV2`EZR2E!HN2)R3I1c.!E1G^dA1,1L<0eb:8
0J>(4/hSb//M/P*/1`>&.k<,".Olkr.4HYn-n$Gj-RL/e-7'ra,pX`],9nEX+sJ3T+X&!O+<VdK+!2RG
*Zc=B*??+>*#on:)]BV5)AsD1)&O2-(Ddl(()@Z$'bqGt'GM5p',)#l&eYcg&J5Qc&.f?_%h9'Z%LijV
~>
<~c-4DUbKJ)Ob0%iJaiMQEa2c6?`l?!:`Pf^5_o'C/_SX.*_83q&^q[Y!^:q=p]tM(k]Xtef]"5J`\[f5[
\@8rV[^NWP[C*EL['[0GZa-mBZ*CR<Yct=7YHG%2Xf\_,XK8J'X/`2"WMukrW2QYmVl-DhVPU,cUnjf]
USFQXU7n9STV.sMT:_^HSt2FCSXc4?S"#n9R[TY4R@'A/Q^=&)QBmf$Q'@MtPEV2nP*1riOcb`eOH5H`
NfK-ZNK&mUN/NUPMMd:JM2@%ELkgb@L5(G:KnY56KS4u1K7\],JUrB&J:N-!IsuiqI=6NkI!g9fH[:!a
~>
<~T:VXGSXl=BS=H+>S"#n:R[T\6R@0J1R$a8-Q^=&)QBmi%Q'IW!Pa%DrPEV/mP*1riOcb`eOH>NaO,o<]
NfB$XNJrgTN/NUPMi*CLMM[1HM26tDLPLY?L5(G;KnY57KS5#3K7ef.JqAT*JUrB&J:N0"It)rsIXZ`o
I=6KjI!g9fH[C'bH?sj^H$OXZG^+FVGBS.QG'.qMF`__IFE;MEF)l;AEH,u<E,]c8Df9Q4DJj?0D/F-,
Ci!p'CMR^#C2.KtBk_9pBP;'lB4kggAnGUcAS#C_A7T1[@q/tW@U`bS@:3JN?sd8J?X@&F?<piB?!LW>
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
2260.53 1377.68 mo
2287.62 1363.81 2306.87 1375.15 2306.87 1375.15 cv
2306.87 1375.15 2310.97 1292.1 2367.51 1288.94 cv
2405.01 1286.84 2388.59 1351.35 2388.59 1351.35 cv
2388.59 1351.35 2464.98 1202.86 2519.43 1228.7 cv
2231.31 1735.56 li
2229.27 1700.17 2176.2 1420.85 2260.53 1377.68 cv
cp
level3{
gsave
clp
[306.466 0 0 306.466 2212.96 1480.62 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[306.466 0 0 306.466 2212.96 1480.62 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
2286.4 1742.2 mo
2286.4 1742.2 2466.95 1767.99 2512.71 1748.43 cv
2558.46 1728.87 2521.83 1700.87 2521.83 1700.87 cv
2521.83 1700.87 2620.08 1681.56 2627.66 1651.42 cv
2635.24 1621.29 2588.34 1624.24 2588.34 1624.24 cv
2588.34 1624.24 2684.13 1562.68 2671.53 1542.15 cv
2648.07 1503.9 2540.09 1565.49 2540.09 1565.49 cv
2540.09 1565.49 2576.54 1531.92 2552.3 1517.99 cv
2515.74 1496.99 2457.91 1588.95 2457.91 1588.95 cv
2457.91 1588.95 2461.5 1566.29 2432.85 1563.77 cv
2381.46 1559.26 2286.4 1742.2 2286.4 1742.2 cv
cp
level3{
gsave
clp
[-243.974 22.0128 -22.0128 -243.974 2842.4 1604.8 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-243.974 22.0128 -22.0128 -243.974 2842.4 1604.8 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
2415.45 1537.66 mo
2444.1 1540.17 2457.91 1588.95 2457.91 1588.95 cv
2457.91 1588.95 2516.79 1479.94 2553.34 1500.94 cv
2577.58 1514.87 2548.9 1560.62 2548.9 1560.62 cv
2548.9 1560.62 2648.07 1503.9 2671.53 1542.15 cv
2285.86 1741.22 li
2298.97 1718.32 2367.45 1533.44 2415.45 1537.66 cv
cp
level3{
gsave
clp
[385.674 0 0 385.674 2285.86 1619.74 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[385.674 0 0 385.674 2285.86 1619.74 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
1813.99 1388.06 mo
1922.29 1388.06 2030.59 1388.06 2138.9 1388.06 cv
2126.88 1277.36 2157.29 1182.49 2218.26 1112.34 cv
2278.86 1042.18 2370.03 996.738 2471.01 984.893 cv
2571.62 973.047 2682.03 994.799 2772.62 1059.03 cv
2862.84 1123.27 2933.22 1229.98 2945.23 1388.06 cv
2958.77 1388.06 2972.31 1388.06 2985.85 1388.06 cv
2997.86 1216.44 2944.61 1075.88 2849.37 975.268 cv
2754.5 874.651 2617.64 813.978 2470.97 802.133 cv
2324.68 790.287 2168.57 827.269 2043.72 921.963 cv
1919.23 1016.66 1826 1169.06 1813.99 1388.06 cv
cp
.717647 .85098 .447059 rgb
f
2945.53 1387.74 mo
2985.55 1387.74 li
2996.92 1224.33 2949.75 1081.78 2849.13 975.489 cv
2755.35 876.029 2621.05 814.578 2470.95 802.455 cv
2453.42 801.036 2435.59 800.316 2417.96 800.316 cv
2280.4 800.316 2147.56 843.609 2043.91 922.22 cv
1946.82 996.081 1828.19 1136.78 1814.33 1387.74 cv
2138.54 1387.74 li
2132.71 1333.68 2136.87 1282.26 2150.9 1234.9 cv
2164.48 1189.05 2187.06 1147.74 2218.02 1112.13 cv
2248.11 1077.29 2285.56 1048.47 2329.35 1026.46 cv
2372.87 1004.58 2420.51 990.491 2470.97 984.571 cv
2488.37 982.523 2506.13 981.484 2523.75 981.484 cv
2567.65 981.484 2610.85 987.772 2652.17 1000.17 cv
2695.9 1013.3 2736.49 1033.01 2772.81 1058.77 cv
2844.02 1109.47 2931.76 1207.69 2945.53 1387.74 cv
cp
2986.15 1388.38 mo
2944.93 1388.38 li
2944.91 1388.09 li
2931.23 1208.1 2843.57 1109.94 2772.43 1059.3 cv
2701.24 1008.81 2615.25 982.13 2523.75 982.13 cv
2506.16 982.13 2488.42 983.168 2471.05 985.213 cv
2368.76 997.213 2279.07 1042.43 2218.51 1112.55 cv
2155.01 1185.61 2127.59 1280.87 2139.22 1388.03 cv
2139.26 1388.38 li
1813.65 1388.38 li
1813.67 1388.04 li
1827.46 1136.63 1946.27 995.68 2043.52 921.706 cv
2096.84 881.268 2157.25 850.218 2223.08 829.418 cv
2285.56 809.679 2351.12 799.67 2417.96 799.67 cv
2435.61 799.67 2453.46 800.39 2471 801.81 cv
2544.67 807.76 2614.89 825.695 2679.73 855.117 cv
2745.6 885.007 2802.75 925.356 2849.61 975.046 cv
2898.35 1026.54 2934.86 1087.07 2958.13 1154.93 cv
2982.58 1226.22 2992.01 1304.66 2986.17 1388.08 cv
2986.15 1388.38 li
cp
.607843 .756863 .976471 rgb
f
1984.81 1321.31 mo
1975.84 1360.75 1936.61 1385.45 1897.17 1376.48 cv
1857.74 1367.52 1833.04 1328.28 1842 1288.84 cv
1850.97 1249.41 1890.2 1224.71 1929.64 1233.67 cv
1969.08 1242.64 1993.78 1281.88 1984.81 1321.31 cv
cp
.929412 .992157 .988235 rgb
f
1973.32 1318.7 mo
1965.8 1351.79 1932.88 1372.52 1899.78 1364.99 cv
1866.69 1357.47 1845.96 1324.55 1853.49 1291.45 cv
1861.01 1258.36 1893.94 1237.64 1927.03 1245.16 cv
1960.12 1252.68 1980.85 1285.61 1973.32 1318.7 cv
cp
level3{
gsave
clp
[122.92 0 0 122.92 1851.95 1305.08 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.788235 .803922 .333333 ]
/C1 [.396078 .611765 .321569 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.396078 .611765 .321569 ]
/C1 [.156863 .498039 .313726 ]
/N 1 
>>
]
/Bounds [.506518 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.92 0 0 122.92 1851.95 1305.08 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~aiMNB`Pod5_SX.)^V7Fq]Xtee\[]/Y[^EKLZa-j@Yck44XfSS'Wi;qpVl$;dUSFQWTV.pKSXl:?R[KS2
Q^3r&P`q;oOcYWbNfB!VMi*@ILkg_=KnP)1Jq8H%IXZ]mH[C'aG^+FUF`__HEcH)<Df0E/Chmd#BkV-l
An>L`@q/tW@:<PO?sd8I?<piA>[(E9>$5!1=BAR)<`N.!<)Z^n;Gp@h:f'q`:/4MX9MA)P8kMZH84Z6@
7Rfg86psF16UF+*5sR\"5<_7o4Zkhg4$#D_3B/uW2`<QP2)R3I1G^dA0ek@90/"q1/M/M).k<)!.4HYn
~>
<~c-4DTbKJ&NaiVZGaN2EB`l?$;`Pod6_o'C/_SX.*^qdb#^V@Ls]tM+l]Xtef]"5J`\[]/Z\$riT[^ENN
['[3HZa-mBZ*CR<Yck76Y-+q0XfSV*X/i8#Wi;tsW2QVlVl$>gV59u`Una][U8"?TTqJ'OT:_^HSt2FC
S=H(<S"#n9R[T\5R@0J1R$a8.Q^=&*QBmi&Q'IW"Q'@MtP`q;pPEM)lP*1riOcb`eOH>NaO,o?^NfK-Z
NK&pWN/W^SMi3LOMMd:KMM[1HM26tDLkgb@LPLV=L5(D9KnY25KS5#2K7ef.JqAT*JUrB'J:N0#It)rt
~>
<~<E)ps<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr;c?Un;c?Un;c?Un;c?Un;c?Un
;c?Un;c?Un;c?Un;c?Un;c?Un;c?Um;GpCj;GpCj;GpCj;GpCj;GpCj;GpCj;GpCj;GpCj;GpCj;GpCj
;Gp@h;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f
;,C(c:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
1886.11 1339.33 mo
1891.66 1330.7 li
1887.87 1328.02 1884.52 1324.83 1882.03 1321.77 cv
1879.95 1319.22 1880.21 1315.49 1882.62 1313.25 cv
1882.91 1312.98 li
1885.57 1310.52 1889.78 1310.81 1892.03 1313.65 cv
1894.33 1316.55 1897.24 1319.4 1900.79 1321.69 cv
1905.97 1325.01 1910.8 1325.29 1913.13 1321.66 cv
1915.35 1318.21 1913.84 1314.16 1908.58 1307.57 cv
1900.97 1298.05 1897.26 1289.25 1902.92 1280.44 cv
1908.06 1272.44 1917.72 1269.8 1928.67 1274.14 cv
1934.21 1265.51 li
1943.11 1271.23 li
1937.98 1279.22 li
1941.18 1281.49 1943.61 1283.68 1945.49 1285.75 cv
1947.79 1288.27 1947.61 1292.18 1945.11 1294.51 cv
1945.11 1294.51 li
1942.52 1296.91 1938.45 1296.69 1936.14 1294.02 cv
1934.41 1292.02 1932.1 1289.82 1928.89 1287.76 cv
1922.99 1283.97 1919.45 1285.28 1917.81 1287.83 cv
1915.88 1290.82 1917.84 1294.77 1923.69 1302.64 cv
1932.04 1313.41 1933.19 1321.21 1927.94 1329.38 cv
1922.74 1337.46 1912.58 1340.69 1900.97 1335.79 cv
1895.01 1345.05 li
1886.11 1339.33 li
cp
.929412 .992157 .988235 rgb
f
2965.48 1474 mo
3020.22 1327.05 li
2964.31 1355.98 li
2898.53 1327.05 li
2965.48 1474 li
cp
.717647 .85098 .447059 rgb
f
2702.93 1596.95 mo
2513.2 1596.95 li
2505.58 1596.95 2499.41 1591.14 2499.41 1583.98 cv
2499.41 1583.98 li
2499.41 1576.81 2505.58 1571 2513.2 1571 cv
2702.93 1571 li
2710.55 1571 2716.72 1576.81 2716.72 1583.98 cv
2716.72 1583.98 li
2716.72 1591.14 2710.55 1596.95 2702.93 1596.95 cv
cp
level3{
gsave
clp
[217.308 0 0 217.308 2499.41 1583.98 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.780392 .643137 .309804 ]
/C1 [.376471 .603922 .247059 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[217.308 0 0 217.308 2499.41 1583.98 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~a2Z-<`Pf^5_o'@._SO((^qd_"^:q=p]tD"j]=YYc]",A]\@B#W[^NWP[C!<JZa6sCZE^[=Yct=7Y-+q0
XfSV*X/i8#Wi;trW2QVlVP^5eV50o^USFQXTqS0QTV%jKSt;LDSXc4>S"#k8R@0J1R$X/+QBmf$Q'@Ms
PEV/mOcbcfOH5H`NfK*YNJrgSMi3IMM2@(FLkgb@L5(D9KnP,3K7ec-JUr?%J:E&tIXZ]nI!g<gH[:!a
H$OXZG^"@TG'8"NFEDVGF)l;AEH,r:E,TZ4DJj<.Ci!p'CMIU!Bk_6oBP1siAnGUcA7T4\@q&nV@:<PO
~>
<~Una][USFTZUSFTZUSFTZUSFTZUSFTZUSFQXU8"BVU8"BVU8"BVU8"BVU8"BVU8"BVTqS0RTqS0RTqS0R
TqS0RTqS0RTqS0RTqJ'OTV.sNTV.sNTV.sNTV.sNTV.sNTV.sMT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJ
T:VXGSt;OFSt;OFSt;OFSt;OFSt;OFSt;LDSXl=BSXl=BSXl=BSXl=BSXl=BSXl=BS=H+>S=H+>S=H+>
S=H+>S=H+>S=H+>S=?";S"#n:S"#n:S"#n:S"#n:S"#n:S"#n9R[T\6R[T\6R[T\6R[T\6R[T\6R[T\6
~>
<~:JOY[:/4PZ:/4PZ:/4PZ9he>V9he>V9he>V9he>V9MA,R9MA,R9MA,R9MA,R91qoN91qoN91qoN91qoN
8kM]J8kM]J8kM]J8kM]J8P)KF8P)KF8P)KF8P)KF84Z9B84Z9B84Z9B84Z9B7n6'>7n6'>7n6'>7n6'>
7Rfj:7Rfj:7Rfj:7Rfj:77BX677BX677BX677BX66psF26psF26psF26psF26UO4.6UO4.6UO4.6UO4.
6:+"*6:+"*6:+"*6:+"*5s[e&5s[e&5s[e&5s[e&5X7S"5X7S"5X7S"5X7S"5<h@s5<h@s5<h@s5<h@s
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
2699.88 1571 mo
2508.53 1571 li
2501.37 1571 2495.55 1565.19 2495.55 1558.02 cv
2495.55 1558.02 li
2495.55 1550.85 2501.37 1545.04 2508.53 1545.04 cv
2699.88 1545.04 li
2707.05 1545.04 2712.86 1550.85 2712.86 1558.02 cv
2712.86 1558.02 li
2712.86 1565.19 2707.05 1571 2699.88 1571 cv
cp
.929412 .992157 .988235 rgb
f
2721.34 1545.04 mo
2531.6 1545.04 li
2523.99 1545.04 2517.82 1539.23 2517.82 1532.06 cv
2517.82 1532.06 li
2517.82 1524.89 2523.99 1519.08 2531.6 1519.08 cv
2721.34 1519.08 li
2728.96 1519.08 2735.13 1524.89 2735.13 1532.06 cv
2735.13 1532.06 li
2735.13 1539.23 2728.96 1545.04 2721.34 1545.04 cv
cp
level3{
gsave
clp
[217.309 0 0 217.309 2517.82 1532.06 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[217.309 0 0 217.309 2517.82 1532.06 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
2424.1 1450.3 mo
1712.31 1450.3 li
1712.31 1524.81 li
2424.1 1524.81 li
2424.1 1450.3 li
cp
.956863 .447059 .341176 rgb
f
2234.77 1714.01 mo
2074.26 1629.14 1899.92 1576.9 1720.93 1560.05 cv
1727.56 1482.38 1734.2 1404.72 1740.83 1327.05 cv
1947.78 1346.54 2149.35 1406.94 2334.94 1505.07 cv
2301.55 1574.72 2268.16 1644.36 2234.77 1714.01 cv
cp
level3{
gsave
clp
[614.006 0 0 614.006 1720.93 1520.53 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[614.006 0 0 614.006 1720.93 1520.53 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
1736.71 1517.45 mo
1741.23 1469.01 1745.75 1420.57 1750.27 1372.14 cv
1769.08 1374.06 1785.93 1361.93 1787.98 1344.53 cv
1960.51 1366.2 2128.66 1416.58 2286.11 1493.79 cv
2279.1 1509.7 2287.32 1529.35 2304.27 1538.13 cv
2283.77 1581.78 2263.27 1625.43 2242.77 1669.08 cv
2227.18 1661 2208.72 1667.68 2201.72 1683.58 cv
2063.46 1615.79 1915.8 1571.54 1764.29 1552.51 cv
1766.34 1535.13 1754.02 1519.22 1736.71 1517.45 cv
cp
.717647 .85098 .447059 rgb
f
2107.1 1525.44 mo
2092.63 1567.1 2048.01 1588.33 2006.63 1575.61 cv
1965.28 1562.79 1938.7 1519.59 1948 1476.33 cv
1957.27 1433.15 2003.18 1407.27 2049.72 1421.66 cv
2096.27 1436 2121.55 1483.85 2107.1 1525.44 cv
cp
.313726 .74902 .647059 rgb
f
2006.28 1560.94 mo
2007.44 1556.29 2008.6 1551.64 2009.75 1546.99 cv
2003.52 1544.96 1997.61 1542.11 1992.88 1539.09 cv
1988.94 1536.57 1987.51 1531.47 1989.64 1527.4 cv
1989.72 1527.24 1989.81 1527.08 1989.89 1526.91 cv
1992.24 1522.43 1998.01 1521 2002.37 1523.87 cv
2006.81 1526.79 2012.03 1529.4 2017.84 1531.02 cv
2026.29 1533.39 2032.9 1531.86 2034.43 1526.01 cv
2035.87 1520.45 2032.02 1515.51 2021.8 1508.73 cv
2007.01 1498.96 1997.57 1488.77 2000.83 1474.44 cv
2003.77 1461.46 2015.76 1453.7 2033.21 1455.22 cv
2034.35 1450.57 2035.49 1445.91 2036.63 1441.26 cv
2041.76 1442.68 2046.89 1444.13 2052.01 1445.6 cv
2050.91 1449.9 2049.81 1454.2 2048.71 1458.51 cv
2054.31 1460.37 2058.76 1462.46 2062.38 1464.59 cv
2066.8 1467.2 2068.35 1472.64 2065.94 1476.74 cv
2065.94 1476.74 li
2063.43 1480.99 2057.69 1482.2 2053.24 1479.43 cv
2049.9 1477.35 2045.64 1475.24 2040.21 1473.69 cv
2030.19 1470.84 2025.94 1474.1 2024.94 1478.21 cv
2023.75 1483.07 2028.38 1487.59 2040.09 1496 cv
2056.57 1507.4 2061.5 1517.73 2057.88 1530.82 cv
2054.27 1543.8 2041.97 1551.95 2024.39 1550.02 cv
2023.11 1555 2021.82 1559.98 2020.53 1564.96 cv
2015.79 1563.6 2011.04 1562.26 2006.28 1560.94 cv
cp
.235294 .560784 .486275 rgb
f
1923.49 1474.71 mo
1882.58 1465.27 1841.28 1457.58 1799.68 1451.67 cv
1800.64 1444.21 1801.6 1436.74 1802.57 1429.27 cv
1844.74 1435.26 1886.63 1443.06 1928.11 1452.63 cv
1926.57 1459.99 1925.03 1467.35 1923.49 1474.71 cv
cp
.313726 .74902 .647059 rgb
f
2242.49 1587.99 mo
2204.42 1569.37 2165.68 1552.42 2126.38 1537.17 cv
2128.87 1530.1 2131.35 1523.03 2133.84 1515.96 cv
2173.69 1531.43 2212.97 1548.61 2251.57 1567.49 cv
2248.54 1574.32 2245.52 1581.15 2242.49 1587.99 cv
cp
f
2316.25 1464.72 mo
2150.65 1499.32 1992.95 1568.66 1851.47 1669.08 cv
1813.24 1603.11 1775.01 1537.15 1736.78 1471.19 cv
1900.37 1355.08 2082.7 1274.91 2274.18 1234.91 cv
2288.2 1311.51 2302.23 1388.12 2316.25 1464.72 cv
cp
level3{
gsave
clp
[579.467 0 0 579.467 1736.78 1451.99 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[579.467 0 0 579.467 1736.78 1451.99 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
1839.46 1625.17 mo
1815.9 1583.79 1792.35 1542.41 1768.79 1501.03 cv
1783.74 1490.6 1789.44 1470.23 1781.29 1455.1 cv
1920.68 1362.61 2072.78 1295.73 2231.87 1256.99 cv
2235.54 1274.1 2252.51 1284.49 2269.9 1280.7 cv
2279 1328.44 2288.11 1376.17 2297.21 1423.91 cv
2281.21 1427.4 2271.3 1444.46 2274.96 1461.55 cv
2135.26 1495.57 2001.7 1554.3 1879.29 1635.51 cv
1871.15 1620.39 1853.22 1615.58 1839.46 1625.17 cv
cp
level3{
gsave
clp
[106.395 624.609 -624.609 106.395 2002.73 1284.8 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.395 624.609 -624.609 106.395 2002.73 1284.8 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
2117.3 1395.99 mo
2129.76 1438.32 2108.61 1483.56 2071 1499.77 cv
2033.35 1515.87 1989.75 1498.43 1972.6 1458.12 cv
1955.46 1417.89 1974.98 1368.13 2017.33 1349.97 cv
2059.65 1331.77 2104.88 1353.74 2117.3 1395.99 cv
cp
level3{
gsave
clp
[-11.0063 -121.07 121.07 -11.0063 2060.52 1609.59 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-11.0063 -121.07 121.07 -11.0063 2060.52 1609.59 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
2062.6 1488.33 mo
2060.87 1483.89 2059.14 1479.46 2057.41 1475.03 cv
2051.69 1477.38 2045.74 1478.87 2040.58 1479.48 cv
2036.27 1479.98 2032.37 1476.84 2031.69 1472.25 cv
2031.66 1472.06 2031.63 1471.88 2031.61 1471.7 cv
2030.85 1466.64 2034.32 1461.83 2039.13 1461.34 cv
2044.03 1460.84 2049.33 1459.6 2054.52 1457.2 cv
2062.07 1453.7 2066.1 1448.28 2063.98 1442.65 cv
2061.96 1437.32 2056.38 1435.84 2045.06 1436.95 cv
2028.72 1438.59 2016.1 1436.49 2010.55 1423.03 cv
2005.51 1410.83 2010.04 1397.04 2023.77 1387.16 cv
2022.03 1382.73 2020.29 1378.3 2018.55 1373.88 cv
2023.13 1371.74 2027.71 1369.64 2032.31 1367.55 cv
2033.89 1371.67 2035.47 1375.79 2037.04 1379.9 cv
2042.21 1377.83 2046.65 1376.66 2050.51 1376.05 cv
2055.22 1375.32 2059.39 1378.65 2059.88 1383.45 cv
2059.88 1383.45 li
2060.39 1388.42 2056.83 1393.03 2052 1393.66 cv
2048.38 1394.14 2044.07 1395.16 2039.19 1397.39 cv
2030.22 1401.49 2028.89 1406.78 2030.43 1410.69 cv
2032.25 1415.31 2038.18 1415.96 2051.5 1415.2 cv
2070 1413.78 2079.37 1418.85 2083.97 1431.57 cv
2088.51 1444.19 2083.95 1458.49 2069.9 1468.13 cv
2071.72 1472.91 2073.53 1477.69 2075.35 1482.47 cv
2071.09 1484.4 2066.84 1486.35 2062.6 1488.33 cv
cp
.929412 .992157 .988235 rgb
f
1953.61 1472.42 mo
1918.17 1490.93 1883.41 1511.09 1849.42 1532.84 cv
1845.99 1526.29 1842.55 1519.74 1839.11 1513.19 cv
1873.58 1491.14 1908.82 1470.7 1944.76 1451.93 cv
1947.71 1458.76 1950.66 1465.59 1953.61 1472.42 cv
cp
.313726 .74902 .647059 rgb
f
2251.97 1359.62 mo
2213.53 1369.03 2175.53 1380.19 2138.05 1393.06 cv
2135.96 1385.85 2133.87 1378.65 2131.78 1371.45 cv
2169.79 1358.41 2208.32 1347.09 2247.3 1337.55 cv
2248.86 1344.91 2250.42 1352.26 2251.97 1359.62 cv
cp
level3{
gsave
clp
[-11.0063 -121.07 121.07 -11.0063 2212.81 1595.75 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-11.0063 -121.07 121.07 -11.0063 2212.81 1595.75 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
2336.2 1592.2 mo
2163.97 1581.77 1991.49 1607.05 1827.84 1666.71 cv
1805.31 1592.73 1782.78 1518.76 1760.25 1444.78 cv
1949.46 1375.79 2148.89 1346.57 2348.02 1358.63 cv
2344.08 1436.49 2340.14 1514.35 2336.2 1592.2 cv
cp
level3{
gsave
clp
[587.769 0 0 587.769 1760.25 1511.35 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[587.769 0 0 587.769 1760.25 1511.35 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
1826.17 1621.04 mo
1812.45 1574.74 1798.74 1528.44 1785.02 1482.14 cv
1802.28 1476.02 1812.67 1457.82 1808.12 1441.01 cv
1967.84 1388.47 2134.2 1364.09 2300.93 1368.78 cv
2300.58 1386.31 2314.99 1400.88 2333.11 1401.82 cv
2331.01 1450.43 2328.92 1499.04 2326.83 1547.66 cv
2310.15 1546.79 2296.35 1560.67 2296.01 1578.18 cv
2149.59 1574.06 2003.5 1595.47 1863.24 1641.61 cv
1858.69 1624.81 1842.05 1615.4 1826.17 1621.04 cv
cp
level3{
gsave
clp
[106.396 624.612 -624.612 106.396 2031.46 1279.9 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.396 624.612 -624.612 106.396 2031.46 1279.9 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
2154.98 1472.92 mo
2157.47 1517.19 2125.97 1555.37 2084.91 1561.08 cv
2043.84 1566.68 2004.67 1538.23 1997.06 1494.67 cv
1989.45 1451.2 2020.39 1408.21 2066.59 1401.87 cv
2112.79 1395.48 2152.51 1428.74 2154.98 1472.92 cv
cp
level3{
gsave
clp
[-11.0063 -121.07 121.07 -11.0063 2087.13 1607.17 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-11.0063 -121.07 121.07 -11.0063 2087.13 1607.17 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
2079.25 1547.78 mo
2078.57 1543.03 2077.88 1538.28 2077.2 1533.53 cv
2070.98 1534.29 2064.74 1534.15 2059.48 1533.37 cv
2055.09 1532.72 2051.96 1528.64 2052.35 1524.02 cv
2052.36 1523.83 2052.38 1523.65 2052.4 1523.46 cv
2052.83 1518.37 2057.38 1514.63 2062.26 1515.43 cv
2067.24 1516.25 2072.78 1516.45 2078.48 1515.5 cv
2086.79 1514.13 2092.04 1509.95 2091.25 1503.94 cv
2090.49 1498.24 2085.3 1495.33 2073.83 1493.41 cv
2057.25 1490.66 2045.22 1485.28 2042.86 1470.77 cv
2040.71 1457.64 2048.41 1445.49 2064.32 1439.57 cv
2063.63 1434.82 2062.93 1430.08 2062.24 1425.33 cv
2067.27 1424.48 2072.31 1423.66 2077.35 1422.86 cv
2077.96 1427.26 2078.56 1431.67 2079.17 1436.07 cv
2084.77 1435.43 2089.45 1435.48 2093.41 1435.91 cv
2098.25 1436.45 2101.61 1440.78 2100.98 1445.56 cv
2100.98 1445.56 li
2100.33 1450.5 2095.72 1454.02 2090.79 1453.35 cv
2087.09 1452.85 2082.58 1452.7 2077.23 1453.56 cv
2067.37 1455.15 2064.82 1459.92 2065.44 1464.11 cv
2066.17 1469.06 2071.9 1471.26 2085.27 1474.06 cv
2103.94 1477.59 2112.05 1484.99 2113.65 1498.51 cv
2115.21 1511.93 2107.37 1524.56 2091.19 1530.17 cv
2091.88 1535.27 2092.56 1540.38 2093.25 1545.49 cv
2088.58 1546.22 2083.91 1546.99 2079.25 1547.78 cv
cp
.929412 .992157 .988235 rgb
f
1974.91 1503.48 mo
1935.46 1511.99 1896.31 1522.28 1857.55 1534.32 cv
1855.67 1527.07 1853.79 1519.82 1851.91 1512.57 cv
1891.21 1500.36 1930.91 1489.93 1970.91 1481.3 cv
1972.24 1488.69 1973.57 1496.09 1974.91 1503.48 cv
cp
.313726 .74902 .647059 rgb
f
2296.96 1473.44 mo
2256.66 1472.35 2216.38 1473.07 2176.23 1475.58 cv
2175.84 1468.06 2175.45 1460.54 2175.05 1453.01 cv
2215.76 1450.47 2256.6 1449.74 2297.47 1450.84 cv
2297.3 1458.37 2297.13 1465.91 2296.96 1473.44 cv
cp
f
1712.31 1450.3 mo
1712.31 1763.56 li
2424.1 1763.56 li
2424.1 1450.3 li
1712.31 1450.3 li
cp
level3{
gsave
clp
[711.787 0 0 711.787 1712.31 1606.93 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 .313726 .243137 ]
/C1 [.00784314 .196078 .133333 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[711.787 0 0 711.787 1712.31 1606.93 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E
3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E
3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~:esk_:JXb^:JOY[:/4PZ:/4MX9he>V9he;T9MA,R9MA,Q91qoN91qoM8kM]J8kM]J8P)KF8P)KF84Z9B
84Z9B84Q0?7n6'>7n,s;7Rfj:7Rfg877BX677BU46psF26psF16UO4.6UO4-6:+"*6:+"*5s[e&5s[e&
5X7S"5X7S"5X.It5<h@s5<h=q5!D.o5!D+m4Ztqk4Ztqj4?P_g4?P_f4$,Mc4$,Mc3]];_3]];_3B9)[
3B9)[3B/uX3&ilW3&`cT2`EZS2`EWQ2E!HO2E!EM2)R6K2)R6J1c.$G1c.$F1G^gC1G^gC1,:U?1,:U?
~>
<~5!;%l4Ztqk4Ztni4?P_g4?P_f4$,Mc4$,Mc3]];_3]];_3]T2\3B9)[3B9&Y3&ilW3&ilV2`EZS2`EZS
2`<QP2E!HO2E!EM2)R6K2)R6J1c.$G1c.$G1G^gC1G^gC1GU^@1,:U?1,:R=0ekC;0ekC:0JG170JG17
0J>(40/"t30/"q1/hSb//hSb./M/P+/M/P+/1`>'/1`>'/1W5$.k<,#.k<)!.Olnt.Olns.4H\p.4H\p
.4?Sm-n$Jl-n$Gj-RU8h-RU8g-71&d-71&d,pai`,pai`,pX`],U=W\,U=TZ,9nEX,9nEW+sJ3T+sJ3T
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
2386.49 1490.05 mo
1738.54 1490.05 li
1738.54 1465.72 li
2386.49 1465.72 li
2386.49 1490.05 li
cp
.517647 .490196 .239216 rgb
f
2048.89 1538.35 mo
1746.77 1538.35 li
1746.77 1530.28 li
2048.89 1530.28 li
2048.89 1538.35 li
cp
f
2340.37 1587.52 mo
2361.72 1617.94 2354.36 1659.9 2323.95 1681.25 cv
2293.53 1702.59 2251.57 1695.24 2230.22 1664.83 cv
2208.87 1634.41 2216.23 1592.45 2246.64 1571.1 cv
2277.06 1549.75 2319.02 1557.11 2340.37 1587.52 cv
cp
.929412 .992157 .988235 rgb
f
2331.51 1593.74 mo
2349.42 1619.26 2343.25 1654.48 2317.73 1672.39 cv
2292.21 1690.3 2256.99 1684.13 2239.08 1658.61 cv
2221.17 1633.09 2227.34 1597.87 2252.86 1579.96 cv
2278.38 1562.05 2313.6 1568.22 2331.51 1593.74 cv
cp
level3{
gsave
clp
[112.93 0 0 112.93 2228.83 1626.18 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[112.93 0 0 112.93 2228.83 1626.18 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
2291.81 1665.89 mo
2289.35 1656.79 li
2285.19 1657.72 2280.95 1658.04 2277.33 1657.85 cv
2274.31 1657.69 2271.93 1655.22 2271.89 1652.19 cv
2271.89 1651.83 li
2271.84 1648.5 2274.64 1645.81 2277.96 1646.03 cv
2281.35 1646.25 2285.09 1646.02 2288.84 1645.01 cv
2294.3 1643.53 2297.46 1640.41 2296.43 1636.58 cv
2295.44 1632.94 2291.76 1631.47 2284.02 1631 cv
2272.84 1630.32 2264.55 1627.42 2262.04 1618.13 cv
2259.76 1609.7 2263.91 1601.49 2273.62 1596.71 cv
2271.16 1587.61 li
2280.54 1585.07 li
2282.82 1593.5 li
2286.35 1592.71 2289.33 1592.4 2291.9 1592.39 cv
2295.04 1592.38 2297.59 1594.92 2297.63 1598.06 cv
2297.63 1598.06 li
2297.67 1601.3 2295.02 1603.94 2291.78 1603.87 cv
2289.35 1603.81 2286.42 1604.04 2283.04 1604.95 cv
2276.81 1606.63 2275.53 1609.86 2276.25 1612.54 cv
2277.11 1615.7 2281 1616.8 2289.98 1617.67 cv
2302.46 1618.61 2308.48 1622.63 2310.81 1631.25 cv
2313.12 1639.78 2309.05 1648.69 2298.56 1653.58 cv
2301.2 1663.35 li
2291.81 1665.89 li
cp
1 1 1 rgb
f
2221.81 1541.94 mo
2221.81 1579.1 2191.69 1609.22 2154.53 1609.22 cv
2117.37 1609.22 2087.24 1579.1 2087.24 1541.94 cv
2087.24 1504.78 2117.37 1474.66 2154.53 1474.66 cv
2191.69 1474.66 2221.81 1504.78 2221.81 1541.94 cv
cp
.929412 .992157 .988235 rgb
f
2210.99 1541.94 mo
2210.99 1573.12 2185.71 1598.4 2154.53 1598.4 cv
2123.35 1598.4 2098.07 1573.12 2098.07 1541.94 cv
2098.07 1510.76 2123.35 1485.48 2154.53 1485.48 cv
2185.71 1485.48 2210.99 1510.76 2210.99 1541.94 cv
cp
level3{
gsave
clp
[112.92 0 0 112.92 2098.07 1541.94 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[112.92 0 0 112.92 2098.07 1541.94 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
2137.05 1578.19 mo
2140.26 1569.33 li
2136.32 1567.7 2132.67 1565.52 2129.81 1563.29 cv
2127.43 1561.43 2126.91 1558.03 2128.61 1555.54 cv
2128.82 1555.24 li
2130.7 1552.48 2134.53 1551.89 2137.12 1553.98 cv
2139.77 1556.11 2142.96 1558.07 2146.61 1559.39 cv
2151.93 1561.32 2156.31 1560.58 2157.66 1556.85 cv
2158.95 1553.31 2156.77 1549.99 2150.71 1545.15 cv
2141.95 1538.18 2136.83 1531.04 2140.11 1522 cv
2143.09 1513.79 2151.21 1509.45 2161.9 1511.11 cv
2165.11 1502.25 li
2174.25 1505.56 li
2171.28 1513.77 li
2174.61 1515.15 2177.24 1516.62 2179.34 1518.08 cv
2181.92 1519.88 2182.55 1523.42 2180.78 1526.01 cv
2180.78 1526.01 li
2178.95 1528.69 2175.26 1529.33 2172.65 1527.4 cv
2170.69 1525.96 2168.17 1524.46 2164.88 1523.27 cv
2158.81 1521.07 2155.91 1522.97 2154.96 1525.58 cv
2153.84 1528.66 2156.4 1531.81 2163.25 1537.67 cv
2172.92 1545.61 2175.54 1552.36 2172.5 1560.75 cv
2169.49 1569.06 2161.04 1574.01 2149.64 1571.99 cv
2146.19 1581.51 li
2137.05 1578.19 li
cp
.929412 .992157 .988235 rgb
f
2386.49 1744.06 mo
2081.76 1744.06 li
2081.76 1580.74 li
2386.49 1580.74 li
2386.49 1744.06 li
cp
.517647 .490196 .239216 rgb
f
2424.1 1669.08 mo
2247.97 1669.08 li
2240.16 1669.08 2233.83 1676.91 2233.83 1686.57 cv
2233.83 1686.57 li
2233.83 1696.23 2240.16 1704.06 2247.97 1704.06 cv
2225.13 1704.06 li
2217.32 1704.06 2210.99 1711.89 2210.99 1721.55 cv
2210.99 1721.55 li
2210.99 1731.21 2217.32 1739.05 2225.13 1739.05 cv
2229.08 1739.05 li
2221.28 1739.05 2214.94 1746.88 2214.94 1756.54 cv
2214.94 1759.04 2215.37 1761.41 2216.13 1763.56 cv
2424.1 1763.56 li
2424.1 1669.08 li
cp
level3{
gsave
clp
[213.108 0 0 213.108 2210.99 1716.32 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[213.108 0 0 213.108 2210.99 1716.32 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
1394.62 1758.45 mo
1394.62 1758.45 li
1394.62 1761.62 1398.16 1764.19 1402.53 1764.19 cv
3376.03 1764.19 li
3380.4 1764.19 3383.94 1761.62 3383.94 1758.45 cv
3383.94 1758.45 li
3383.94 1755.27 3380.4 1752.7 3376.03 1752.7 cv
1402.53 1752.7 li
1398.16 1752.7 1394.62 1755.27 1394.62 1758.45 cv
cp
level3{
gsave
clp
[1989.33 0 0 1989.33 1394.62 1758.45 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1989.33 0 0 1989.33 1394.62 1758.45 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
2425.88 1752.7 mo
2244 1752.7 li
2236.7 1752.7 2230.78 1746.79 2230.78 1739.49 cv
2230.78 1739.49 li
2230.78 1732.19 2236.7 1726.27 2244 1726.27 cv
2425.88 1726.27 li
2433.18 1726.27 2439.1 1732.19 2439.1 1739.49 cv
2439.1 1739.49 li
2439.1 1746.79 2433.18 1752.7 2425.88 1752.7 cv
cp
level3{
gsave
clp
[208.314 0 0 208.314 2230.78 1739.49 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[208.314 0 0 208.314 2230.78 1739.49 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
2422.19 1726.27 mo
2240.3 1726.27 li
2233 1726.27 2227.08 1720.36 2227.08 1713.06 cv
2227.08 1713.06 li
2227.08 1705.76 2233 1699.84 2240.3 1699.84 cv
2422.19 1699.84 li
2429.48 1699.84 2435.4 1705.76 2435.4 1713.06 cv
2435.4 1713.06 li
2435.4 1720.36 2429.48 1726.27 2422.19 1726.27 cv
cp
.929412 .992157 .988235 rgb
f
2443.53 1699.84 mo
2261.64 1699.84 li
2254.34 1699.84 2248.43 1693.93 2248.43 1686.63 cv
2248.43 1686.63 li
2248.43 1679.33 2254.34 1673.42 2261.64 1673.42 cv
2443.53 1673.42 li
2450.83 1673.42 2456.74 1679.33 2456.74 1686.63 cv
2456.74 1686.63 li
2456.74 1693.93 2450.83 1699.84 2443.53 1699.84 cv
cp
level3{
gsave
clp
[208.315 0 0 208.315 2248.43 1686.63 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[208.315 0 0 208.315 2248.43 1686.63 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
1639.83 1740.89 mo
1639.83 1740.89 1423.22 1634.09 1385.97 1578.38 cv
1348.72 1522.68 1403.48 1519.52 1403.48 1519.52 cv
1403.48 1519.52 1306.81 1425.51 1320.41 1385.93 cv
1334.01 1346.35 1384.76 1384.17 1384.76 1384.17 cv
1384.76 1384.17 1321.93 1244.29 1351.24 1230.38 cv
1405.83 1204.47 1482.41 1353.34 1482.41 1353.34 cv
1482.41 1353.34 1465.95 1288.67 1503.54 1290.77 cv
1560.23 1293.94 1557.88 1440.23 1557.88 1440.23 cv
1557.88 1440.23 1564.29 1384.14 1598.45 1402.36 cv
1659.76 1435.05 1639.83 1740.89 1639.83 1740.89 cv
cp
level3{
gsave
clp
[323.824 0 0 323.824 1319.1 1484.12 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[323.824 0 0 323.824 1319.1 1484.12 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
1610.79 1379.73 mo
1584.11 1364.93 1557.53 1408.2 1557.53 1408.2 cv
1557.53 1408.2 1560.23 1293.94 1503.54 1290.77 cv
1465.95 1288.67 1482.4 1353.34 1482.4 1353.34 cv
1482.4 1353.34 1405.83 1204.47 1351.24 1230.38 cv
1640.08 1738.51 li
1642.13 1703.03 1663.64 1409.06 1610.79 1379.73 cv
cp
.717647 .85098 .447059 rgb
f
1634.24 1742.21 mo
1634.24 1742.21 1457.08 1764.22 1411.21 1744.61 cv
1365.34 1725 1398.21 1700.78 1398.21 1700.78 cv
1398.21 1700.78 1299.71 1681.42 1292.12 1651.21 cv
1284.52 1621 1331.54 1623.96 1331.54 1623.96 cv
1331.54 1623.96 1235.51 1562.25 1248.14 1541.66 cv
1271.66 1503.32 1379.91 1565.06 1379.91 1565.06 cv
1379.91 1565.06 1343.37 1531.41 1367.67 1517.45 cv
1404.32 1496.39 1462.3 1588.58 1462.3 1588.58 cv
1462.3 1588.58 1458.7 1565.86 1487.41 1563.34 cv
1538.93 1558.82 1634.24 1742.21 1634.24 1742.21 cv
cp
level3{
gsave
clp
[387.245 0 0 387.245 1246.99 1633.53 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[387.245 0 0 387.245 1246.99 1633.53 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
1484.39 1532.56 mo
1455.67 1535.08 1456.12 1562.98 1456.12 1562.98 cv
1456.12 1562.98 1403.27 1479.3 1366.62 1500.36 cv
1342.32 1514.32 1371.07 1560.18 1371.07 1560.18 cv
1371.07 1560.18 1271.66 1503.32 1248.14 1541.66 cv
1634.77 1741.23 li
1621.63 1718.27 1532.51 1528.34 1484.39 1532.56 cv
cp
level3{
gsave
clp
[-104.561 -254.522 254.522 -104.561 1558.2 1925.64 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-104.561 -254.522 254.522 -104.561 1558.2 1925.64 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
2194.5 570.901 mo
2192.41 556.495 li
2203.09 546.605 li
2204.3 545.479 2203.7 543.446 2202.07 543.165 cv
2187.72 540.703 li
2181.61 527.488 li
2180.92 525.983 2178.8 525.928 2178.03 527.396 cv
2171.25 540.28 li
2156.8 542.002 li
2155.15 542.199 2154.44 544.198 2155.6 545.385 cv
2165.76 555.81 li
2162.93 570.09 li
2162.61 571.716 2164.29 573.006 2165.78 572.272 cv
2178.83 565.832 li
2191.54 572.935 li
2192.99 573.744 2194.74 572.542 2194.5 570.901 cv
cp
level3{
gsave
clp
[-62.3697 414.573 -414.573 -62.3697 2209.75 342.686 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-62.3697 414.573 -414.573 -62.3697 2209.75 342.686 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
1936.4 586.057 mo
1934.31 571.651 li
1944.99 561.761 li
1946.21 560.635 1945.6 558.602 1943.97 558.322 cv
1929.62 555.859 li
1923.52 542.644 li
1922.82 541.139 1920.7 541.084 1919.93 542.552 cv
1913.16 555.436 li
1898.7 557.159 li
1897.06 557.355 1896.35 559.353 1897.51 560.541 cv
1907.67 570.967 li
1904.84 585.246 li
1904.51 586.872 1906.2 588.163 1907.68 587.429 cv
1920.74 580.988 li
1933.45 588.091 li
1934.89 588.9 1936.64 587.698 1936.4 586.057 cv
cp
level3{
gsave
clp
[33.0189 412.739 -412.739 33.0189 1908.77 403.245 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.984314 .603922 .168627 ]
/C1 [.901961 .34902 .145098 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[33.0189 412.739 -412.739 33.0189 1908.77 403.245 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~qtg0cqYL'bqYL'bqYBs_q>'j^q>'j^q=sa[q"XXZq"XXZq"OOWp\4FVp\4FVp\+=Sp@e4Rp@e4Rp@\+O
p%A"Np%A"Np%@tLo^qeJo^qeJo^qbHoCMSFoCMSFoCMPDo()ABo()ABo()>@naZ/>naZ/>naZ,<nF5r:
nF5r:nF5r9n*f`6n*f`6n*f`5mdBN2mdBN2mdBN1mHs<.mHs<.mHs<-m-O**m-O**m-O*)lg*m&lg*m&
lg*m&lK[["lK[["lK[["l07Hsl07Hsl07Hskih6okih6okih6okND$kkND$kkND$kk2tggk2tggk2tgg
~>
<~R[KS3R$a8.Q^=&*QBmi&Q'IW"Pa%DsPEV2oP*1ukOcbcgOH>QcO,o?_NfK-[NK&pWN/W^SMi3LOMMd:K
M2@(FLkpkBLPLY>L5(G:KnY56KS5#2K7ef.JqAT*JUrB&J:N0"It)rsIXZ`oI=6NkI!g<gH[C*cH?sm_
H$OXZG^+FVGB\4RG'8"NF`heJFEDSFF)uABEcQ/>EH,r:E,]`6Df9N2DJj<.D/F**Ci!m&CMR["C2.Hs
BkV0nBP1sjB4bafAn>ObARo=^A7K+Z@q&nV@UW\R@:3JN?sd8J?X@&F?<piB?!LW>>[(E:>?Y36>$5!2
~>
<~.k3"u.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olns.4H\p.4H\p.4H\p.4H\p.4H\p
.4H\p.4H\p.4H\p.4H\p.4H\p.4HYn-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
-mpAi-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8g-71&d-71&d-71&d-71&d-71&d
-71&d-71&d-71&d-71&d-71&d-71#b,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
2750.24 651.061 mo
2748.15 636.654 li
2758.83 626.765 li
2760.05 625.638 2759.45 623.605 2757.81 623.325 cv
2743.47 620.863 li
2737.36 607.648 li
2736.67 606.143 2734.55 606.088 2733.77 607.556 cv
2727 620.44 li
2712.54 622.162 li
2710.9 622.358 2710.19 624.357 2711.35 625.545 cv
2721.51 635.97 li
2718.68 650.249 li
2718.36 651.876 2720.04 653.166 2721.53 652.433 cv
2734.58 645.992 li
2747.29 653.094 li
2748.73 653.903 2750.48 652.701 2750.24 651.061 cv
cp
level3{
gsave
clp
[-62.3697 414.573 -414.573 -62.3697 2764.99 426.218 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-62.3697 414.573 -414.573 -62.3697 2764.99 426.218 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
2538.25 531.089 mo
2536.16 516.683 li
2546.84 506.793 li
2548.06 505.666 2547.45 503.634 2545.82 503.354 cv
2531.47 500.892 li
2525.37 487.676 li
2524.67 486.171 2522.55 486.117 2521.78 487.584 cv
2515 500.468 li
2500.55 502.19 li
2498.9 502.387 2498.2 504.386 2499.35 505.573 cv
2509.51 515.998 li
2506.69 530.278 li
2506.36 531.905 2508.05 533.194 2509.53 532.461 cv
2522.59 526.02 li
2535.29 533.122 li
2536.74 533.932 2538.49 532.73 2538.25 531.089 cv
cp
level3{
gsave
clp
[33.0189 412.739 -412.739 33.0189 2511.16 355.054 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[33.0189 412.739 -412.739 33.0189 2511.16 355.054 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
1844.17 1252.42 mo
1593.51 1252.42 li
1581.17 1252.42 1571.16 1262.43 1571.16 1274.77 cv
1571.16 1458.3 li
1571.16 1470.65 1581.17 1480.65 1593.51 1480.65 cv
1844.17 1480.65 li
1856.51 1480.65 1866.52 1470.65 1866.52 1458.3 cv
1866.52 1274.77 li
1866.52 1262.43 1856.51 1252.42 1844.17 1252.42 cv
cp
.313726 .74902 .647059 rgb
f
1583.48 1754.59 mo
1856.21 1754.59 li
1877.72 1754.59 1895.16 1737.15 1895.16 1715.64 cv
1895.16 1129.94 li
1895.16 1108.43 1877.72 1090.99 1856.21 1090.99 cv
1583.48 1090.99 li
1561.97 1090.99 1544.53 1108.43 1544.53 1129.94 cv
1544.53 1715.64 li
1544.53 1737.15 1561.97 1754.59 1583.48 1754.59 cv
cp
level3{
gsave
clp
[350.627 0 0 350.627 1544.53 1422.79 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[350.627 0 0 350.627 1544.53 1422.79 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
1878.2 1646.77 mo
1878.2 1156.18 li
1878.2 1135.62 1861.53 1118.95 1840.96 1118.95 cv
1603.91 1118.95 li
1583.35 1118.95 1566.68 1135.62 1566.68 1156.18 cv
1566.68 1646.77 li
1566.68 1667.33 1583.35 1684 1603.91 1684 cv
1840.96 1684 li
1861.53 1684 1878.2 1667.33 1878.2 1646.77 cv
cp
.929412 .992157 .988235 rgb
f
1608.26 1755.97 mo
1429.61 1755.97 li
1422.45 1755.97 1416.64 1750.16 1416.64 1743 cv
1416.64 1743 li
1416.64 1735.83 1422.45 1730.02 1429.61 1730.02 cv
1608.26 1730.02 li
1615.43 1730.02 1621.24 1735.83 1621.24 1743 cv
1621.24 1743 li
1621.24 1750.16 1615.43 1755.97 1608.26 1755.97 cv
cp
.717647 .85098 .447059 rgb
f
1604.63 1730.02 mo
1425.98 1730.02 li
1418.81 1730.02 1413 1724.21 1413 1717.04 cv
1413 1717.04 li
1413 1709.87 1418.81 1704.06 1425.98 1704.06 cv
1604.63 1704.06 li
1611.79 1704.06 1617.6 1709.87 1617.6 1717.04 cv
1617.6 1717.04 li
1617.6 1724.21 1611.79 1730.02 1604.63 1730.02 cv
cp
.929412 .992157 .988235 rgb
f
1625.59 1704.06 mo
1446.95 1704.06 li
1439.78 1704.06 1433.97 1698.25 1433.97 1691.08 cv
1433.97 1691.08 li
1433.97 1683.91 1439.78 1678.1 1446.95 1678.1 cv
1625.59 1678.1 li
1632.76 1678.1 1638.57 1683.91 1638.57 1691.08 cv
1638.57 1691.08 li
1638.57 1698.25 1632.76 1704.06 1625.59 1704.06 cv
cp
.717647 .85098 .447059 rgb
f
1603.95 1678.1 mo
1425.31 1678.1 li
1418.14 1678.1 1412.33 1672.29 1412.33 1665.12 cv
1412.33 1665.12 li
1412.33 1657.95 1418.14 1652.14 1425.31 1652.14 cv
1603.95 1652.14 li
1611.12 1652.14 1616.93 1657.95 1616.93 1665.12 cv
1616.93 1665.12 li
1616.93 1672.29 1611.12 1678.1 1603.95 1678.1 cv
cp
f
1600.32 1652.14 mo
1421.68 1652.14 li
1414.51 1652.14 1408.7 1646.33 1408.7 1639.16 cv
1408.7 1639.16 li
1408.7 1631.99 1414.51 1626.18 1421.68 1626.18 cv
1600.32 1626.18 li
1607.49 1626.18 1613.3 1631.99 1613.3 1639.16 cv
1613.3 1639.16 li
1613.3 1646.33 1607.49 1652.14 1600.32 1652.14 cv
cp
.929412 .992157 .988235 rgb
f
1621.28 1626.18 mo
1442.64 1626.18 li
1435.47 1626.18 1429.66 1620.37 1429.66 1613.2 cv
1429.66 1613.2 li
1429.66 1606.04 1435.47 1600.23 1442.64 1600.23 cv
1621.28 1600.23 li
1628.45 1600.23 1634.26 1606.04 1634.26 1613.2 cv
1634.26 1613.2 li
1634.26 1620.37 1628.45 1626.18 1621.28 1626.18 cv
cp
.717647 .85098 .447059 rgb
f
2656.25 1752.7 mo
2477.61 1752.7 li
2470.44 1752.7 2464.63 1746.89 2464.63 1739.72 cv
2464.63 1739.72 li
2464.63 1732.56 2470.44 1726.75 2477.61 1726.75 cv
2656.25 1726.75 li
2663.42 1726.75 2669.23 1732.56 2669.23 1739.72 cv
2669.23 1739.72 li
2669.23 1746.89 2663.42 1752.7 2656.25 1752.7 cv
cp
level3{
gsave
clp
[204.602 0 0 204.602 2464.63 1739.72 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[204.602 0 0 204.602 2464.63 1739.72 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
2652.62 1726.75 mo
2473.97 1726.75 li
2466.81 1726.75 2461 1720.93 2461 1713.77 cv
2461 1713.77 li
2461 1706.6 2466.81 1700.79 2473.97 1700.79 cv
2652.62 1700.79 li
2659.79 1700.79 2665.6 1706.6 2665.6 1713.77 cv
2665.6 1713.77 li
2665.6 1720.93 2659.79 1726.75 2652.62 1726.75 cv
cp
.929412 .992157 .988235 rgb
f
2673.58 1700.79 mo
2494.94 1700.79 li
2487.77 1700.79 2481.96 1694.98 2481.96 1687.81 cv
2481.96 1687.81 li
2481.96 1680.64 2487.77 1674.83 2494.94 1674.83 cv
2673.58 1674.83 li
2680.75 1674.83 2686.56 1680.64 2686.56 1687.81 cv
2686.56 1687.81 li
2686.56 1694.98 2680.75 1700.79 2673.58 1700.79 cv
cp
level3{
gsave
clp
[204.601 0 0 204.601 2481.96 1687.81 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[204.601 0 0 204.601 2481.96 1687.81 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
2651.94 1674.83 mo
2473.3 1674.83 li
2466.13 1674.83 2460.32 1669.02 2460.32 1661.85 cv
2460.32 1661.85 li
2460.32 1654.68 2466.13 1648.87 2473.3 1648.87 cv
2651.94 1648.87 li
2659.11 1648.87 2664.92 1654.68 2664.92 1661.85 cv
2664.92 1661.85 li
2664.92 1669.02 2659.11 1674.83 2651.94 1674.83 cv
cp
level3{
gsave
clp
[204.602 0 0 204.602 2460.32 1661.85 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[204.602 0 0 204.602 2460.32 1661.85 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
2648.31 1648.87 mo
2469.67 1648.87 li
2462.5 1648.87 2456.69 1643.06 2456.69 1635.89 cv
2456.69 1635.89 li
2456.69 1628.72 2462.5 1622.91 2469.67 1622.91 cv
2648.31 1622.91 li
2655.48 1622.91 2661.29 1628.72 2661.29 1635.89 cv
2661.29 1635.89 li
2661.29 1643.06 2655.48 1648.87 2648.31 1648.87 cv
cp
.929412 .992157 .988235 rgb
f
2669.27 1622.91 mo
2490.63 1622.91 li
2483.46 1622.91 2477.65 1617.1 2477.65 1609.93 cv
2477.65 1609.93 li
2477.65 1602.76 2483.46 1596.95 2490.63 1596.95 cv
2669.27 1596.95 li
2676.44 1596.95 2682.25 1602.76 2682.25 1609.93 cv
2682.25 1609.93 li
2682.25 1617.1 2676.44 1622.91 2669.27 1622.91 cv
cp
level3{
gsave
clp
[204.601 0 0 204.601 2477.65 1609.93 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[204.601 0 0 204.601 2477.65 1609.93 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
1814.09 1405.77 mo
1634.88 1405.77 li
1627.06 1405.77 1620.72 1399.43 1620.72 1391.6 cv
1620.72 1391.6 li
1620.72 1383.78 1627.06 1377.44 1634.88 1377.44 cv
1814.09 1377.44 li
1821.92 1377.44 1828.26 1383.78 1828.26 1391.6 cv
1828.26 1391.6 li
1828.26 1399.43 1821.92 1405.77 1814.09 1405.77 cv
cp
.517647 .490196 .239216 rgb
f
1803.49 1299.48 mo
1817.58 1340.46 1795.79 1385.11 1754.81 1399.2 cv
1713.83 1413.3 1669.18 1391.51 1655.09 1350.53 cv
1640.99 1309.55 1662.78 1264.9 1703.76 1250.8 cv
1744.74 1236.71 1789.39 1258.5 1803.49 1299.48 cv
cp
.717647 .85098 .447059 rgb
f
1791.55 1303.59 mo
1803.38 1337.97 1785.09 1375.44 1750.71 1387.27 cv
1716.32 1399.1 1678.85 1380.81 1667.02 1346.42 cv
1655.19 1312.03 1673.48 1274.57 1707.87 1262.74 cv
1742.26 1250.91 1779.72 1269.2 1791.55 1303.59 cv
cp
level3{
gsave
clp
[131.726 0 0 131.726 1663.42 1325 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[131.726 0 0 131.726 1663.42 1325 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
1723.76 1371.61 mo
1723.94 1360.62 li
1718.98 1360.32 1714.13 1359.3 1710.13 1357.92 cv
1706.8 1356.77 1704.93 1353.23 1705.87 1349.83 cv
1705.98 1349.42 li
1707 1345.67 1711.01 1343.56 1714.66 1344.88 cv
1718.39 1346.23 1722.65 1347.18 1727.17 1347.25 cv
1733.77 1347.36 1738.32 1344.89 1738.4 1340.26 cv
1738.47 1335.87 1734.82 1333.03 1726.3 1329.99 cv
1713.99 1325.63 1705.64 1319.7 1705.83 1308.48 cv
1706 1298.3 1713.3 1290.43 1725.72 1288.21 cv
1725.9 1277.22 li
1737.24 1277.41 li
1737.07 1287.59 li
1741.27 1287.84 1744.72 1288.46 1747.6 1289.28 cv
1751.12 1290.29 1753.16 1293.95 1752.19 1297.48 cv
1752.19 1297.48 li
1751.19 1301.13 1747.37 1303.23 1743.76 1302.1 cv
1741.05 1301.25 1737.7 1300.56 1733.62 1300.49 cv
1726.1 1300.37 1723.61 1303.57 1723.56 1306.8 cv
1723.5 1310.62 1727.51 1313.12 1737.28 1316.98 cv
1750.97 1322.07 1756.42 1328.53 1756.24 1338.94 cv
1756.07 1349.23 1748.64 1357.91 1735.3 1360 cv
1735.1 1371.8 li
1723.76 1371.61 li
cp
.929412 .992157 .988235 rgb
f
1834.55 1494.26 mo
1624.02 1494.26 li
1612.83 1494.26 1603.76 1485.19 1603.76 1474 cv
1603.76 1474 li
1603.76 1462.81 1612.83 1453.74 1624.02 1453.74 cv
1834.55 1453.74 li
1845.74 1453.74 1854.81 1462.81 1854.81 1474 cv
1854.81 1474 li
1854.81 1485.19 1845.74 1494.26 1834.55 1494.26 cv
cp
.0745098 .215686 .356863 rgb
f
1834.55 1494.26 mo
1624.02 1494.26 li
1612.83 1494.26 1603.76 1485.19 1603.76 1474 cv
1603.76 1474 li
1603.76 1462.81 1612.83 1453.74 1624.02 1453.74 cv
1834.55 1453.74 li
1845.74 1453.74 1854.81 1462.81 1854.81 1474 cv
1854.81 1474 li
1854.81 1485.19 1845.74 1494.26 1834.55 1494.26 cv
cp
.278431 .231373 .117647 rgb
f
1837.83 1474 mo
1837.83 1462.81 1828.76 1453.74 1817.57 1453.74 cv
1624.02 1453.74 li
1612.83 1453.74 1603.76 1462.81 1603.76 1474 cv
1603.76 1485.19 1612.83 1494.26 1624.02 1494.26 cv
1817.57 1494.26 li
1828.76 1494.26 1837.83 1485.19 1837.83 1474 cv
cp
level3{
gsave
clp
[234.07 0 0 234.07 1603.76 1474 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[234.07 0 0 234.07 1603.76 1474 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
2295 716.225 mo
2327.73 739.99 2334.99 785.782 2311.22 818.505 cv
2287.46 851.227 2241.67 858.488 2208.94 834.723 cv
2176.22 810.958 2168.96 765.166 2192.72 732.444 cv
2216.49 699.721 2262.28 692.46 2295 716.225 cv
cp
.929412 .992157 .988235 rgb
f
2288.08 725.756 mo
2315.54 745.699 2321.63 784.124 2301.69 811.582 cv
2281.75 839.041 2243.32 845.134 2215.86 825.192 cv
2188.41 805.25 2182.31 766.825 2202.25 739.366 cv
2222.2 711.907 2260.62 705.814 2288.08 725.756 cv
cp
level3{
gsave
clp
[122.902 0 0 122.902 2190.52 775.474 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.902 0 0 122.902 2190.52 775.474 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
2272.72 814.051 mo
2266.97 805.555 li
2263.01 807.98 2258.76 809.805 2254.97 810.891 cv
2251.8 811.797 2248.48 810.091 2247.37 806.992 cv
2247.24 806.619 li
2246.02 803.205 2247.94 799.45 2251.44 798.499 cv
2255.01 797.531 2258.78 795.976 2262.28 793.607 cv
2267.37 790.159 2269.53 785.831 2267.11 782.253 cv
2264.81 778.856 2260.5 778.645 2252.37 780.887 cv
2240.62 784.142 2231.06 784.087 2225.19 775.412 cv
2219.87 767.542 2221.24 757.62 2229.54 749.267 cv
2223.79 740.771 li
2232.55 734.841 li
2237.88 742.711 li
2241.23 740.657 2244.2 739.284 2246.84 738.368 cv
2250.06 737.248 2253.58 738.958 2254.73 742.173 cv
2254.73 742.173 li
2255.92 745.497 2254.13 749.15 2250.76 750.221 cv
2248.24 751.023 2245.31 752.287 2242.15 754.422 cv
2236.34 758.355 2236.15 762.13 2237.85 764.634 cv
2239.85 767.585 2244.25 767.346 2253.78 765.064 cv
2266.97 761.62 2274.59 763.635 2280.04 771.683 cv
2285.42 779.643 2284.38 790.252 2275.31 798.999 cv
2281.48 808.122 li
2272.72 814.051 li
cp
.929412 .992157 .988235 rgb
f
2115.05 965.14 mo
2106.08 1004.58 2066.84 1029.28 2027.41 1020.31 cv
1987.97 1011.34 1963.27 972.107 1972.24 932.673 cv
1981.2 893.237 2020.44 868.537 2059.88 877.502 cv
2099.31 886.468 2124.01 925.705 2115.05 965.14 cv
cp
f
2103.56 962.529 mo
2096.04 995.621 2063.11 1016.35 2030.02 1008.82 cv
1996.93 1001.3 1976.2 968.375 1983.72 935.284 cv
1991.25 902.193 2024.17 881.466 2057.26 888.988 cv
2090.36 896.512 2111.08 929.437 2103.56 962.529 cv
cp
level3{
gsave
clp
[122.92 0 0 122.92 1982.18 948.906 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.92 0 0 122.92 1982.18 948.906 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
2016.34 983.161 mo
2021.89 974.532 li
2018.11 971.851 2014.75 968.659 2012.26 965.602 cv
2010.19 963.049 2010.45 959.323 2012.86 957.083 cv
2013.15 956.813 li
2015.81 954.346 2020.02 954.64 2022.27 957.483 cv
2024.56 960.38 2027.47 963.229 2031.03 965.515 cv
2036.21 968.843 2041.03 969.122 2043.37 965.49 cv
2045.59 962.038 2044.08 957.989 2038.82 951.397 cv
2031.21 941.88 2027.49 933.075 2033.16 924.265 cv
2038.3 916.272 2047.96 913.626 2058.9 917.967 cv
2064.45 909.337 li
2073.35 915.061 li
2068.21 923.053 li
2071.42 925.325 2073.85 927.512 2075.73 929.578 cv
2078.03 932.102 2077.84 936.014 2075.34 938.336 cv
2075.34 938.336 li
2072.75 940.737 2068.69 940.523 2066.38 937.852 cv
2064.65 935.851 2062.33 933.652 2059.13 931.591 cv
2053.22 927.795 2049.68 929.112 2048.05 931.655 cv
2046.12 934.653 2048.07 938.604 2053.92 946.474 cv
2062.28 957.238 2063.43 965.036 2058.17 973.21 cv
2052.98 981.294 2042.82 984.518 2031.2 979.619 cv
2025.25 988.884 li
2016.34 983.161 li
cp
.929412 .992157 .988235 rgb
f
2653.16 734.379 mo
2652.2 774.81 2618.64 806.807 2578.21 805.846 cv
2537.78 804.886 2505.79 771.332 2506.75 730.901 cv
2507.71 690.472 2541.26 658.475 2581.69 659.435 cv
2622.12 660.396 2654.12 693.949 2653.16 734.379 cv
cp
f
2641.38 734.1 mo
2640.58 768.026 2612.42 794.876 2578.49 794.07 cv
2544.57 793.264 2517.72 765.108 2518.52 731.182 cv
2519.33 697.255 2547.49 670.406 2581.41 671.211 cv
2615.34 672.017 2642.19 700.173 2641.38 734.1 cv
cp
level3{
gsave
clp
[122.894 0 0 122.894 2518.5 732.641 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.894 0 0 122.894 2518.5 732.641 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
2560 771.631 mo
2563.72 762.074 li
2559.48 760.197 2555.56 757.734 2552.51 755.232 cv
2549.97 753.143 2549.48 749.438 2551.4 746.765 cv
2551.63 746.443 li
2553.75 743.497 2557.93 742.95 2560.7 745.289 cv
2563.53 747.673 2566.95 749.888 2570.88 751.422 cv
2576.62 753.657 2581.41 752.973 2582.97 748.949 cv
2584.46 745.125 2582.19 741.456 2575.72 736.039 cv
2566.37 728.222 2560.98 720.33 2564.79 710.57 cv
2568.24 701.717 2577.18 697.206 2588.77 699.288 cv
2592.49 689.73 li
2602.35 693.572 li
2598.9 702.426 li
2602.5 704.016 2605.31 705.677 2607.57 707.328 cv
2610.32 709.345 2610.92 713.217 2608.92 715.989 cv
2608.92 715.989 li
2606.86 718.856 2602.84 719.454 2600.04 717.294 cv
2597.95 715.675 2595.25 713.98 2591.69 712.596 cv
2585.15 710.048 2581.94 712.042 2580.85 714.859 cv
2579.55 718.179 2582.25 721.664 2589.55 728.216 cv
2599.87 737.107 2602.55 744.522 2599.02 753.577 cv
2595.53 762.532 2586.21 767.708 2573.86 765.211 cv
2569.86 775.474 li
2560 771.631 li
cp
.929412 .992157 .988235 rgb
f
2946.65 860 mo
2972.23 891.326 2967.57 937.455 2936.25 963.034 cv
2904.92 988.612 2858.79 983.953 2833.21 952.627 cv
2807.64 921.302 2812.3 875.172 2843.62 849.594 cv
2874.95 824.016 2921.08 828.675 2946.65 860 cv
cp
f
2937.53 867.45 mo
2958.99 893.737 2955.08 932.445 2928.8 953.909 cv
2902.51 975.372 2863.8 971.463 2842.34 945.178 cv
2820.88 918.891 2824.79 880.182 2851.07 858.718 cv
2877.36 837.255 2916.07 841.164 2937.53 867.45 cv
cp
level3{
gsave
clp
[122.897 0 0 122.897 2828.49 906.314 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.897 0 0 122.897 2828.49 906.314 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
2900.15 948.907 mo
2896.76 939.225 li
2892.32 940.561 2887.74 941.241 2883.8 941.323 cv
2880.51 941.393 2877.73 938.894 2877.45 935.616 cv
2877.41 935.221 li
2877.1 931.607 2879.92 928.469 2883.55 928.442 cv
2887.24 928.415 2891.28 927.872 2895.27 926.475 cv
2901.08 924.441 2904.27 920.806 2902.84 916.73 cv
2901.49 912.858 2897.37 911.554 2888.93 911.647 cv
2876.74 911.798 2867.52 909.308 2864.06 899.424 cv
2860.92 890.455 2864.77 881.211 2874.93 875.251 cv
2871.53 865.57 li
2881.52 862.072 li
2884.66 871.039 li
2888.43 869.908 2891.65 869.337 2894.43 869.124 cv
2897.84 868.865 2900.81 871.416 2901.1 874.818 cv
2901.1 874.818 li
2901.4 878.335 2898.73 881.41 2895.2 881.587 cv
2892.56 881.72 2889.4 882.193 2885.81 883.453 cv
2879.18 885.773 2878.04 889.376 2879.04 892.229 cv
2880.22 895.593 2884.54 896.483 2894.34 896.71 cv
2907.97 896.743 2914.82 900.635 2918.04 909.806 cv
2921.21 918.876 2917.5 928.871 2906.5 935.012 cv
2910.14 945.408 li
2900.15 948.907 li
cp
.929412 .992157 .988235 rgb
f
3073.34 1151.93 mo
3096.57 1185.03 3088.57 1230.7 3055.47 1253.93 cv
3022.36 1277.17 2976.7 1269.16 2953.46 1236.06 cv
2930.23 1202.96 2938.23 1157.29 2971.33 1134.06 cv
3004.44 1110.83 3050.11 1118.83 3073.34 1151.93 cv
cp
f
3063.7 1158.7 mo
3083.19 1186.47 3076.48 1224.8 3048.7 1244.29 cv
3020.92 1263.79 2982.6 1257.07 2963.11 1229.29 cv
2943.61 1201.52 2950.33 1163.19 2978.1 1143.7 cv
3005.88 1124.2 3044.2 1130.92 3063.7 1158.7 cv
cp
level3{
gsave
clp
[122.903 0 0 122.903 2951.95 1194 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.903 0 0 122.903 2951.95 1194 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
3020.49 1237.22 mo
3017.82 1227.32 li
3013.29 1228.33 3008.67 1228.67 3004.73 1228.47 cv
3001.45 1228.3 2998.86 1225.6 2998.82 1222.31 cv
2998.81 1221.92 li
2998.76 1218.29 3001.8 1215.36 3005.42 1215.6 cv
3009.11 1215.84 3013.18 1215.59 3017.26 1214.49 cv
3023.2 1212.88 3026.64 1209.49 3025.52 1205.32 cv
3024.44 1201.36 3020.43 1199.76 3012.01 1199.24 cv
2999.85 1198.51 2990.83 1195.35 2988.09 1185.24 cv
2985.61 1176.07 2990.13 1167.13 3000.69 1161.92 cv
2998.01 1152.02 li
3008.23 1149.26 li
3010.71 1158.43 li
3014.54 1157.58 3017.8 1157.24 3020.59 1157.23 cv
3024.01 1157.22 3026.78 1159.98 3026.83 1163.4 cv
3026.83 1163.4 li
3026.87 1166.93 3023.99 1169.8 3020.46 1169.72 cv
3017.81 1169.66 3014.63 1169.9 3010.95 1170.9 cv
3004.17 1172.73 3002.77 1176.24 3003.56 1179.16 cv
3004.49 1182.6 3008.73 1183.8 3018.5 1184.74 cv
3032.08 1185.76 3038.64 1190.14 3041.17 1199.52 cv
3043.68 1208.8 3039.26 1218.5 3027.83 1223.82 cv
3030.71 1234.46 li
3020.49 1237.22 li
cp
.929412 .992157 .988235 rgb
f
1737.08 960.563 mo
1777.81 977.322 1790.92 940.706 1789.9 941.674 cv
1790.67 940.844 1796.8 938.167 1800.72 936.247 cv
1817.04 928.247 1816.55 900.016 1816.18 881.295 cv
1839.6 867.039 1845.47 839.725 1829.41 823.039 cv
1834.35 804.487 1835.4 792.812 1818.83 783.408 cv
1806.28 761.536 1771.13 768.956 1754.07 786.114 cv
1745.42 794.812 1740.41 807.557 1740.55 820.261 cv
1720.47 828.571 1709.97 850.705 1714.53 873.03 cv
1687.45 895.33 1695.53 943.463 1737.08 960.563 cv
cp
0 .164706 .141176 rgb
f
1887.2 1023.69 mo
1883.93 1020.46 1878.18 1017.6 1878.51 1017.13 cv
1879.88 1015.2 1894.1 1029.92 1893.17 1025.77 cv
1892.65 1023.46 1882.47 1011.45 1878.86 1011 cv
1875.35 1010.56 1852.67 1006.98 1852.67 1006.98 cv
1800.25 972.144 li
1800.25 972.144 1797.66 930.937 1808.78 903.179 cv
1796.62 899.468 1794.24 898.673 1781.74 899.64 cv
1774.61 927.798 1766.94 975.228 1776.2 989.051 cv
1780.1 994.866 1848.23 1017.35 1848.23 1017.35 cv
1848.23 1017.35 1862.97 1022.9 1865.72 1023.08 cv
1867.8 1023.21 1873.54 1022.73 1876.34 1023.16 cv
1882.71 1024.15 1890.6 1033.62 1891.14 1032.53 cv
1891.53 1031.73 1890.54 1026.99 1887.2 1023.69 cv
cp
.956863 .54902 .498039 rgb
f
1815.16 899.881 mo
1810.23 890.775 1805.16 883.55 1805.16 883.55 cv
1800.06 874.442 1786.86 869.836 1786.86 869.836 cv
1786.86 869.836 1782.45 869.926 1777.39 870.175 cv
1777.07 871.019 1776.75 871.621 1776.43 871.864 cv
1774.53 873.296 1763.61 871.447 1756.56 876.248 cv
1732.94 896.567 1739.47 995.056 1741.33 1026.16 cv
1800.31 1026.42 li
1800.31 1026.42 1804.21 959.914 1818.83 942.718 cv
1829.01 930.742 1822.46 913.388 1815.16 899.881 cv
cp
level3{
gsave
clp
[-128.866 117.859 -117.859 -128.866 1883.86 854.91 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-128.866 117.859 -117.859 -128.866 1883.86 854.91 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
1831.33 1246.39 mo
1831.96 1245.22 1840.16 1225.45 1846.85 1216.65 cv
1856.58 1203.86 1940.66 1088.08 1937.2 1059.9 cv
1935.69 1047.59 1899.25 1037.16 1894.93 1036.41 cv
1871.74 1039.52 1896.1 1059.48 1878.68 1075.89 cv
1890.01 1079.76 1896.68 1084.6 1894.24 1087.78 cv
1884.44 1100.53 1832.39 1203.26 1830.13 1204.58 cv
1820.05 1210.49 1816.09 1207.75 1816.09 1207.75 cv
1816.09 1207.75 1818.42 1265.53 1823.22 1263.71 cv
1828.03 1261.89 1824.19 1259.52 1831.33 1246.39 cv
cp
.968627 .611765 .552941 rgb
f
1811.84 1208.12 mo
1821.56 1266.33 li
1823.75 1273.86 1827.43 1273.78 1828.37 1272.77 cv
1830.31 1270.69 1831.2 1255.15 1831.43 1246.31 cv
1827.04 1232.83 1827.46 1207.44 1830.16 1204.58 cv
1823.55 1204.7 1811.85 1206.83 1811.84 1208.12 cv
cp
level3{
gsave
clp
[19.5885 0 0 19.5885 1811.84 1238.92 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[19.5885 0 0 19.5885 1811.84 1238.92 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
1846.6 1065.49 mo
1859.65 1043.86 1858.95 1046.59 1881.65 1036.82 cv
1890.75 1040.48 1921.2 1059.56 1925.06 1063.09 cv
1876.64 1098.21 li
1878.22 1094.28 1861.35 1074.78 1846.6 1065.49 cv
cp
.968627 .643137 .568627 rgb
f
1782.72 836.517 mo
1782.72 836.517 1778.77 864.857 1776.01 871.744 cv
1773.24 878.631 1791.2 893.359 1806.13 897.83 cv
1821.07 902.3 1801.57 882.617 1802.19 875.255 cv
1802.8 867.893 1805.52 833.036 1805.52 833.036 cv
1782.72 836.517 li
cp
f
1804.77 843.032 mo
1805.2 837.266 1805.52 833.036 1805.52 833.036 cv
1782.72 836.517 li
1782.72 836.517 1782.15 839.846 1781.51 844.554 cv
1790.75 849.934 1799.06 848.236 1804.77 843.032 cv
cp
.956863 .454902 .345098 rgb
f
1789.87 784.752 mo
1789.87 784.752 1780.89 786.784 1775.34 795.279 cv
1769.79 803.773 1765.98 828.781 1784.26 840.454 cv
1802.53 852.127 1816.74 835.615 1816.98 819.51 cv
1817.21 803.405 1813.77 781.912 1789.87 784.752 cv
cp
.968627 .643137 .568627 rgb
f
1821.16 814.47 mo
1819.6 818.356 1816.51 820.768 1814.25 819.856 cv
1811.99 818.946 1811.43 815.057 1812.99 811.17 cv
1814.55 807.284 1817.64 804.872 1819.9 805.784 cv
1822.15 806.695 1822.72 810.584 1821.16 814.47 cv
cp
f
1775.05 817.664 mo
1776.37 821.851 1775.16 825.973 1772.34 826.872 cv
1769.52 827.769 1766.16 825.104 1764.83 820.918 cv
1763.51 816.731 1764.72 812.609 1767.54 811.711 cv
1770.36 810.812 1773.72 813.478 1775.05 817.664 cv
cp
f
1843.94 1028.08 mo
1833.85 1027.15 1800.46 1023.76 1800.46 1023.76 cv
1741.23 1015.8 li
1741.23 1015.8 1730.76 1040.81 1730.36 1056.5 cv
1729.64 1083.94 1754.9 1107.08 1776.5 1105.75 cv
1789.36 1104.96 1862.16 1103.37 1876.37 1098.1 cv
1879.3 1075.74 1882.68 1051.5 1897.75 1035.41 cv
1873.62 1032.1 1857.63 1029.33 1843.94 1028.08 cv
cp
.278431 .231373 .117647 rgb
f
1844.69 1235.1 mo
1846.32 1233.42 1859.31 1144.54 1867.15 1107.23 cv
1869.04 1098.25 1874.75 1090.54 1882.81 1086.14 cv
1925.06 1063.09 li
1939.7 1076.47 1871.4 1226.82 1865.15 1242.58 cv
1860.85 1253.43 1858.14 1275.84 1857.83 1277.21 cv
1854.31 1292.58 1858.89 1293.88 1854.52 1297.1 cv
1850.15 1300.33 1830.56 1244.21 1830.56 1244.21 cv
1830.56 1244.21 1836.12 1243.97 1844.69 1235.1 cv
cp
.968627 .643137 .568627 rgb
f
1831.97 1031.94 mo
1831.97 1031.94 li
1831.96 1034.18 1834.02 1036 1836.56 1036.01 cv
1908.32 1036.18 li
1910.87 1036.18 1913.42 1033.98 1914.24 1031.26 cv
1912.94 1032.14 li
1912.94 1029.9 1910.88 1028.08 1908.34 1028.07 cv
1836.58 1027.9 li
1834.04 1027.9 1831.97 1029.71 1831.97 1031.94 cv
cp
.517647 .490196 .239216 rgb
f
1907.6 1034.71 mo
1907.17 1034.71 1906.74 1034.69 1906.31 1034.63 cv
1902.59 1034.16 1900.15 1031.79 1900.87 1029.33 cv
1928.25 934.564 li
1928.96 932.108 1932.55 930.497 1936.26 930.967 cv
1939.98 931.436 1942.42 933.807 1941.71 936.262 cv
1914.32 1031.03 li
1913.69 1033.2 1910.82 1034.71 1907.6 1034.71 cv
cp
f
1886.46 1021.87 mo
1882.36 1019.81 1876 1018.88 1876.17 1018.32 cv
1876.87 1016.07 1895.12 1027.71 1892.95 1024.05 cv
1891.74 1022.02 1878.17 1011.7 1874.59 1012.39 cv
1871.13 1013.06 1848.45 1016.69 1848.45 1016.69 cv
1790.09 995.596 li
1790.09 995.596 1778.97 959.301 1780.94 929.462 cv
1768.22 929.704 1759.34 931.816 1747.75 936.609 cv
1749.7 965.591 1757.1 1013.06 1770.19 1023.33 cv
1775.7 1027.66 1847.45 1027.92 1847.45 1027.92 cv
1847.45 1027.92 1863.18 1028.63 1865.85 1027.94 cv
1867.87 1027.42 1873.17 1025.19 1875.97 1024.73 cv
1882.33 1023.7 1892.77 1030.26 1892.94 1029.05 cv
1893.07 1028.18 1890.66 1023.97 1886.46 1021.87 cv
cp
.968627 .643137 .568627 rgb
f
1785 897.807 mo
1784.18 888.635 1783.06 879.395 1773.71 875.43 cv
1767.92 872.973 1760.99 873.873 1755.74 877.245 cv
1749.49 881.255 1747.02 888.568 1746.22 895.668 cv
1744.41 911.79 1743.56 928.626 1744.65 944.833 cv
1756.23 940.039 1771.99 942.578 1784.71 942.335 cv
1787.55 928.131 1786.06 909.758 1785 897.807 cv
cp
level3{
gsave
clp
[42.191 -50.9044 50.9044 42.191 1711.77 979.68 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[42.191 -50.9044 50.9044 42.191 1711.77 979.68 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
1877.79 1013.21 mo
1887.77 1015.76 1887.21 1015.57 1887.61 1015.83 cv
1894.66 1020.27 1894.1 1022.19 1883.28 1017.56 cv
1883.01 1017.44 1882.71 1017.38 1882.42 1017.38 cv
1877.29 1017.44 li
1875.29 1017.46 1874.35 1015 1875.84 1013.68 cv
1875.84 1013.68 li
1876.38 1013.21 1877.11 1013.04 1877.79 1013.21 cv
cp
.968627 .643137 .568627 rgb
f
1858.27 1273.92 mo
1858.27 1273.92 1857.84 1280.97 1860.21 1286.62 cv
1862.58 1292.27 1871.63 1294.4 1869.45 1297.32 cv
1867.26 1300.24 1849.76 1297.32 1849.76 1297.32 cv
1829.51 1247.8 li
1828.68 1245.96 1829.15 1243.81 1830.67 1242.48 cv
1833.1 1240.34 1837.56 1237.31 1844.59 1235.21 cv
1844.59 1235.21 1843.5 1266.27 1858.27 1273.92 cv
cp
level3{
gsave
clp
[40.6782 0 0 40.6782 1829.11 1266.91 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[40.6782 0 0 40.6782 1829.11 1266.91 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
2976.17 1462.75 mo
2795.99 1487.59 li
2788.76 1488.59 2782.09 1483.54 2781.09 1476.31 cv
2781.09 1476.31 li
2780.1 1469.08 2785.15 1462.41 2792.38 1461.41 cv
2972.56 1436.57 li
2979.79 1435.57 2986.46 1440.63 2987.46 1447.86 cv
2987.46 1447.86 li
2988.45 1455.09 2983.4 1461.75 2976.17 1462.75 cv
cp
level3{
gsave
clp
[206.614 0 0 206.614 2780.97 1462.08 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[206.614 0 0 206.614 2780.97 1462.08 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
3071.9 1492.6 mo
2890.06 1488.51 li
2882.76 1488.34 2876.98 1482.29 2877.14 1475 cv
2877.14 1475 li
2877.31 1467.7 2883.35 1461.92 2890.65 1462.08 cv
3072.49 1466.18 li
3079.79 1466.34 3085.57 1472.39 3085.4 1479.69 cv
3085.4 1479.69 li
3085.24 1486.98 3079.19 1492.76 3071.9 1492.6 cv
cp
level3{
gsave
clp
[208.27 0 0 208.27 2877.14 1477.34 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[208.27 0 0 208.27 2877.14 1477.34 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
2956.2 1528.19 mo
2786.58 1462.52 li
2779.78 1459.89 2776.4 1452.23 2779.03 1445.43 cv
2779.03 1445.43 li
2781.67 1438.62 2789.32 1435.24 2796.12 1437.88 cv
2965.74 1503.54 li
2972.55 1506.18 2975.93 1513.83 2973.29 1520.64 cv
2973.29 1520.64 li
2970.66 1527.44 2963.01 1530.82 2956.2 1528.19 cv
cp
.929412 .992157 .988235 rgb
f
3045.18 1536.53 mo
2875.57 1470.87 li
2868.76 1468.23 2865.38 1460.58 2868.01 1453.77 cv
2868.01 1453.77 li
2870.65 1446.97 2878.3 1443.59 2885.11 1446.22 cv
3054.73 1511.89 li
3061.53 1514.52 3064.91 1522.18 3062.28 1528.98 cv
3062.28 1528.98 li
3059.64 1535.79 3051.99 1539.17 3045.18 1536.53 cv
cp
level3{
gsave
clp
[196.055 0 0 196.055 2867.12 1491.38 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[196.055 0 0 196.055 2867.12 1491.38 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
3189.27 1752.7 mo
3203.1 1728.76 3212.37 1690.53 3210.99 1670.33 cv
3207.83 1623.93 3126.51 1550.7 3125.72 1504.21 cv
3125.4 1485.34 3158.02 1435.73 3158.02 1435.73 cv
2920.3 1520.69 li
2683.86 1435.73 li
2683.86 1435.73 2716.48 1485.34 2716.16 1504.21 cv
2715.38 1550.7 2634.05 1623.93 2630.89 1670.33 cv
2629.52 1690.53 2638.78 1728.76 2652.61 1752.7 cv
3189.27 1752.7 li
cp
level3{
gsave
clp
[580.371 0 0 580.371 2630.76 1594.21 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[580.371 0 0 580.371 2630.76 1594.21 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
2920.3 1520.69 mo
2683.86 1435.73 li
2683.86 1435.73 2694.85 1452.45 2704.01 1470.16 cv
2920.3 1520.69 li
cp
level3{
gsave
clp
[-5.04454 -76.5859 76.5859 -5.04454 2808.83 1580.72 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-5.04454 -76.5859 76.5859 -5.04454 2808.83 1580.72 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
3210.99 1670.33 mo
3207.83 1623.93 3126.51 1550.7 3125.72 1504.21 cv
3125.4 1485.34 3158.02 1435.73 3158.02 1435.73 cv
3062.32 1469.93 li
3055.64 1482.81 3049.91 1496.25 3050.05 1504.21 cv
3050.83 1550.7 3132.16 1623.93 3135.32 1670.33 cv
3136.69 1690.53 3127.43 1728.76 3113.6 1752.7 cv
3189.27 1752.7 li
3203.1 1728.76 3212.37 1690.53 3210.99 1670.33 cv
cp
level3{
gsave
clp
[-184.357 181.606 -181.606 -184.357 3473.08 1269.22 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-184.357 181.606 -181.606 -184.357 3473.08 1269.22 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
2920.3 1533.64 mo
2660.44 1438.65 li
2654.91 1436.63 2652.07 1430.51 2654.09 1424.98 cv
2656.11 1419.45 2662.23 1416.6 2667.76 1418.63 cv
2920.29 1510.94 li
3181.1 1415.4 li
3186.64 1413.37 3192.76 1416.21 3194.78 1421.74 cv
3196.8 1427.27 3193.96 1433.39 3188.44 1435.42 cv
2920.3 1533.64 li
cp
.717647 .85098 .447059 rgb
f
2951.95 1524.89 mo
2951.95 1542.01 2938.07 1555.9 2920.94 1555.9 cv
2903.82 1555.9 2889.93 1542.01 2889.93 1524.89 cv
2889.93 1507.76 2903.82 1493.88 2920.94 1493.88 cv
2938.07 1493.88 2951.95 1507.76 2951.95 1524.89 cv
cp
f
2933.48 1524.89 mo
2933.48 1531.81 2927.87 1537.43 2920.94 1537.43 cv
2914.02 1537.43 2908.4 1531.81 2908.4 1524.89 cv
2908.4 1517.96 2914.02 1512.35 2920.94 1512.35 cv
2927.87 1512.35 2933.48 1517.96 2933.48 1524.89 cv
cp
.929412 .992157 .988235 rgb
f
2639.89 1447.01 mo
2637.28 1442.56 li
2638.13 1442.06 2658.37 1430.25 2670.24 1430.25 cv
2670.24 1435.42 li
2659.77 1435.42 2640.09 1446.9 2639.89 1447.01 cv
cp
.717647 .85098 .447059 rgb
f
3211.06 1447.94 mo
3210.86 1447.76 3190.86 1430.12 3178.31 1430.12 cv
3178.31 1424.95 li
3192.82 1424.95 3213.62 1443.29 3214.5 1444.07 cv
3211.06 1447.94 li
cp
.968627 .8 .498039 rgb
f
3227.11 1447.94 mo
3227.11 1456.76 3219.96 1463.92 3211.13 1463.92 cv
3202.3 1463.92 3195.14 1456.76 3195.14 1447.94 cv
3195.14 1439.11 3202.3 1431.95 3211.13 1431.95 cv
3219.96 1431.95 3227.11 1439.11 3227.11 1447.94 cv
cp
.980392 .878431 .698039 rgb
f
2653.26 1447.94 mo
2653.26 1456.76 2646.1 1463.92 2637.28 1463.92 cv
2628.45 1463.92 2621.29 1456.76 2621.29 1447.94 cv
2621.29 1439.11 2628.45 1431.95 2637.28 1431.95 cv
2646.1 1431.95 2653.26 1439.11 2653.26 1447.94 cv
cp
.717647 .85098 .447059 rgb
f
3245.22 1702.58 mo
3245.22 1702.58 3243.45 1724.69 3244.89 1731.87 cv
3245.66 1735.72 3249.96 1743.64 3247.99 1747.26 cv
3246.02 1750.88 3243.76 1751.79 3243.76 1751.79 cv
3192.7 1752.6 li
3189.91 1752.64 3191.75 1750.88 3194 1749.26 cv
3197.67 1746.6 3200.63 1744.85 3212.36 1739.27 cv
3213.12 1738.91 3215.91 1737.16 3216.91 1736.56 cv
3219.46 1735.03 3222.01 1732.62 3224.21 1730.21 cv
3227.88 1726.2 3228.2 1706.73 3228.2 1706.73 cv
3245.22 1702.58 li
cp
.968627 .643137 .568627 rgb
f
3205.31 1408.69 mo
3205.31 1408.69 3183.36 1397.87 3187.58 1421.41 cv
3191.81 1444.94 3223.97 1709.6 3223.97 1709.6 cv
3254.09 1711.27 li
3254.09 1711.27 3257.94 1623.03 3257.09 1610.36 cv
3256.25 1597.69 3251.26 1578.08 3251.26 1578.08 cv
3248.7 1499.81 li
3220.28 1403.16 li
3205.31 1408.69 li
cp
level3{
gsave
clp
[37.1466 -230.446 230.446 37.1466 3179.74 1816.17 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[37.1466 -230.446 230.446 37.1466 3179.74 1816.17 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
3216.92 1736.56 mo
3230.42 1739.96 3240.41 1737.65 3245.99 1735.43 cv
3247.43 1739.45 3249.34 1744.48 3248.33 1747.39 cv
3247.09 1750.94 3245.47 1752.52 3243.91 1752.56 cv
3231.58 1752.88 3198.58 1752.54 3189.17 1752.66 cv
3187.86 1752.68 3187.13 1751.17 3187.98 1750.17 cv
3190.31 1747.43 3215.91 1737.16 3216.92 1736.56 cv
cp
level3{
gsave
clp
[60.9996 0 0 60.9996 3187.61 1744.07 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[60.9996 0 0 60.9996 3187.61 1744.07 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
3187.58 1249.64 mo
3187.58 1249.64 3169.02 1213.93 3166.15 1200.82 cv
3163.27 1187.71 3153.3 1121.7 3154.14 1117.45 cv
3154.98 1113.2 3170.74 1102.97 3168.8 1099.36 cv
3166.85 1095.75 3151.83 1095.73 3148.4 1096.04 cv
3144.96 1096.35 3138.05 1098.36 3135.09 1100.8 cv
3132.13 1103.24 3138.42 1182.35 3140.29 1199.38 cv
3142.17 1216.41 3165.22 1268.87 3165.22 1268.87 cv
3187.58 1249.64 li
cp
.968627 .643137 .568627 rgb
f
3332.18 1527.94 mo
3332.18 1527.94 3347.49 1511.88 3350.89 1505.4 cv
3352.72 1501.92 3354.37 1493.07 3358.18 1491.5 cv
3362 1489.93 3364.32 1490.64 3364.32 1490.64 cv
3404.48 1522.19 li
3406.67 1523.91 3404.13 1524.11 3401.37 1523.96 cv
3396.85 1523.71 3393.44 1523.21 3380.82 1520.15 cv
3380 1519.95 3376.74 1519.55 3375.58 1519.38 cv
3372.63 1518.97 3369.13 1519.23 3365.91 1519.71 cv
3360.53 1520.52 3348.01 1535.44 3348.01 1535.44 cv
3332.18 1527.94 li
cp
f
3375.57 1519.38 mo
3367.23 1508.23 3358.01 1503.74 3352.28 1501.94 cv
3353.69 1497.91 3355.23 1492.65 3357.85 1491.04 cv
3361.05 1489.05 3363.26 1489.46 3364.5 1490.42 cv
3374.28 1497.94 3399.88 1518.53 3407.26 1524.36 cv
3408.29 1525.17 3407.9 1526.8 3406.62 1527.04 cv
3403.08 1527.7 3376.73 1519.55 3375.57 1519.38 cv
cp
level3{
gsave
clp
[55.5683 0 0 55.5683 3352.28 1508.35 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[55.5683 0 0 55.5683 3352.28 1508.35 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
3332.54 1238.77 mo
3323.01 1218.78 3301.9 1207.78 3281.45 1213.1 cv
3274.12 1203.18 3262.77 1196.23 3250.96 1194.56 cv
3227.67 1191.26 3197.62 1202.55 3200.69 1226.87 cv
3193.33 1243.87 3195.13 1267.3 3209.83 1278.79 cv
3207.13 1301.14 3229.54 1320.97 3256.07 1318.29 cv
3266.74 1333.02 3285.29 1341.67 3302.64 1338.3 cv
3306.81 1337.49 3313.13 1335.97 3314.22 1336.16 cv
3312.86 1336.01 3344.48 1356.71 3366.28 1319.85 cv
3388.53 1282.23 3366.62 1240.18 3332.54 1238.77 cv
cp
.278431 .231373 .117647 rgb
f
3196.47 1417.22 mo
3196.47 1417.22 3245.7 1395.34 3246.47 1397.83 cv
3252.65 1417.71 3271.85 1411.3 3283.25 1446.31 cv
3288.02 1460.97 3292.92 1558.5 3292.92 1558.5 cv
3292.92 1558.5 3312.33 1542.39 3340.07 1514.24 cv
3342.2 1512.08 3363.06 1531.91 3363.06 1531.91 cv
3308 1606.31 3284.24 1610.19 3275.05 1606.02 cv
3255.88 1597.33 3215.41 1475.71 3215.47 1475.72 cv
3210.62 1466.25 3196.47 1417.22 3196.47 1417.22 cv
cp
level3{
gsave
clp
[266.216 141.707 -141.707 266.216 3172.11 1454.71 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[266.216 141.707 -141.707 266.216 3172.11 1454.71 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
3278.08 1279.83 mo
3278.08 1279.83 3349.24 1279.74 3364.47 1278.86 cv
3378.26 1278.07 3432.94 1279.46 3435.08 1279.21 cv
3437.22 1278.96 3451.35 1255.03 3453.71 1257.59 cv
3456.05 1260.17 3445.84 1269.46 3449 1271.88 cv
3452.16 1274.29 3486.1 1268.89 3485.65 1271.4 cv
3484.8 1276.09 3465 1275.49 3465.02 1277.76 cv
3465.04 1280.03 3485.75 1276.49 3487.15 1280.25 cv
3488.55 1284.01 3467.24 1281.79 3466.38 1283.46 cv
3465.53 1285.14 3486.16 1288.22 3484.05 1291.72 cv
3482.9 1293.62 3465.77 1288.54 3465.86 1291.13 cv
3465.94 1293.72 3478.44 1299.62 3476.9 1301.68 cv
3475.37 1303.74 3467.1 1295.35 3459.85 1295.25 cv
3452.6 1295.14 3447.4 1291.36 3435.83 1294.53 cv
3430.11 1296.1 3386.49 1301.43 3349.62 1304.58 cv
3311.83 1307.81 3280.85 1308.84 3280.85 1308.84 cv
3278.08 1279.83 li
cp
.968627 .643137 .568627 rgb
f
3172.58 1330.13 mo
3171.63 1318.71 3173.88 1309.91 3174.4 1306.12 cv
3170.94 1294.25 3163.59 1268.94 3160.95 1263.96 cv
3160.95 1263.96 3173.33 1240.16 3186.02 1240.32 cv
3186.02 1240.32 3198.97 1269.51 3208.98 1274.74 cv
3209.13 1274.7 3212.52 1276.25 3214.02 1276.24 cv
3223.68 1276.17 3257.47 1275.14 3263.77 1275.03 cv
3260.23 1322.96 li
3235.75 1370.95 3242.38 1396.13 3251.69 1405.45 cv
3256.07 1409.83 3190.6 1427.61 3187.58 1421.41 cv
3184.03 1414.09 3174.49 1353.23 3172.58 1330.13 cv
cp
.929412 .992157 .988235 rgb
f
3246.61 1276.84 mo
3252.84 1273.87 3297.94 1275.36 3297.94 1275.36 cv
3297.94 1275.36 3304.24 1306.76 3299.15 1314.31 cv
3299.15 1314.31 3258.82 1320.31 3259.97 1323.62 cv
3246.61 1276.84 li
cp
f
3234.79 1256.66 mo
3234.79 1256.66 3234 1273.79 3234.8 1280.92 cv
3235.6 1288.06 3227.48 1304.78 3212.36 1305.07 cv
3197.24 1305.36 3210.14 1289.03 3211.47 1282 cv
3212.79 1274.99 3214.38 1247.51 3214.38 1247.51 cv
3234.79 1256.66 li
cp
.968627 .643137 .568627 rgb
f
3214.38 1247.51 mo
3214.38 1247.51 3214.01 1253.88 3213.48 1261.28 cv
3218.25 1266.97 3225.57 1269.87 3234.49 1266.41 cv
3234.58 1261.11 3234.79 1256.66 3234.79 1256.66 cv
3214.38 1247.51 li
cp
.956863 .454902 .345098 rgb
f
3236.04 1205.63 mo
3236.04 1205.63 3244.6 1208.19 3249.4 1216.75 cv
3254.21 1225.32 3256.23 1249.69 3237.77 1259.74 cv
3219.31 1269.78 3206.65 1252.9 3207.5 1237.35 cv
3208.34 1221.8 3213.1 1201.29 3236.04 1205.63 cv
cp
.968627 .643137 .568627 rgb
f
3203.78 1232.21 mo
3205.03 1236.06 3207.87 1238.59 3210.11 1237.87 cv
3212.36 1237.14 3213.16 1233.42 3211.91 1229.57 cv
3210.66 1225.72 3207.83 1223.19 3205.58 1223.91 cv
3203.34 1224.64 3202.53 1228.36 3203.78 1232.21 cv
cp
f
3233.46 1204.94 mo
3233.46 1204.94 3242.84 1230.57 3252.42 1233.46 cv
3262.01 1236.35 3261.01 1248.86 3261.01 1248.86 cv
3261.01 1248.86 3262.78 1219.95 3254.11 1212.69 cv
3245.44 1205.43 3233.46 1204.94 3233.46 1204.94 cv
cp
.278431 .231373 .117647 rgb
f
3248.2 1238.37 mo
3246.64 1242.31 3247.54 1246.37 3250.21 1247.43 cv
3252.88 1248.48 3256.31 1246.13 3257.87 1242.18 cv
3259.43 1238.24 3258.53 1234.18 3255.86 1233.12 cv
3253.19 1232.07 3249.76 1234.42 3248.2 1238.37 cv
cp
.968627 .643137 .568627 rgb
f
3132.41 1106.89 mo
3132.41 1106.89 3153.26 1107.8 3155.7 1107.8 cv
3158.15 1107.8 3165.27 1100.43 3165.27 1100.43 cv
3132.41 1106.89 li
cp
.956863 .454902 .345098 rgb
f
3202.31 994.87 mo
3225.06 1027.29 3217.23 1072.02 3184.8 1094.78 cv
3152.38 1117.53 3107.65 1109.69 3084.9 1077.27 cv
3062.14 1044.85 3069.98 1000.12 3102.4 977.365 cv
3134.82 954.61 3179.55 962.447 3202.31 994.87 cv
cp
.929412 .992157 .988235 rgb
f
3192.87 1001.5 mo
3211.96 1028.7 3205.38 1066.24 3178.17 1085.33 cv
3150.97 1104.43 3113.43 1097.85 3094.34 1070.64 cv
3075.25 1043.44 3081.82 1005.9 3109.03 986.809 cv
3136.24 967.714 3173.77 974.291 3192.87 1001.5 cv
cp
level3{
gsave
clp
[120.378 0 0 120.378 3083.41 1036.07 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[120.378 0 0 120.378 3083.41 1036.07 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
3150.55 1078.41 mo
3147.93 1068.71 li
3143.49 1069.7 3138.97 1070.03 3135.11 1069.83 cv
3131.9 1069.67 3129.36 1067.03 3129.32 1063.8 cv
3129.31 1063.42 li
3129.26 1059.86 3132.24 1057 3135.79 1057.23 cv
3139.4 1057.47 3143.38 1057.23 3147.38 1056.15 cv
3153.2 1054.57 3156.57 1051.25 3155.47 1047.17 cv
3154.42 1043.29 3150.49 1041.72 3142.24 1041.21 cv
3130.33 1040.49 3121.49 1037.4 3118.81 1027.5 cv
3116.39 1018.51 3120.81 1009.76 3131.15 1004.66 cv
3128.53 994.96 li
3138.54 992.253 li
3140.97 1001.24 li
3144.72 1000.4 3147.91 1000.07 3150.64 1000.06 cv
3153.99 1000.05 3156.71 1002.76 3156.75 1006.1 cv
3156.75 1006.1 li
3156.8 1009.56 3153.97 1012.37 3150.51 1012.29 cv
3147.92 1012.23 3144.8 1012.47 3141.2 1013.45 cv
3134.56 1015.24 3133.19 1018.68 3133.97 1021.54 cv
3134.88 1024.91 3139.03 1026.08 3148.59 1027 cv
3161.9 1028.01 3168.32 1032.3 3170.8 1041.48 cv
3173.26 1050.57 3168.93 1060.07 3157.74 1065.29 cv
3160.56 1075.7 li
3150.55 1078.41 li
cp
.929412 .992157 .988235 rgb
f
3155.7 1107.8 mo
3164.31 1100.06 li
3164.31 1100.06 3160.25 1095.21 3161.94 1094.28 cv
3164.68 1092.76 3169.38 1098.63 3168.96 1100.05 cv
3168.54 1101.47 3163.49 1106.07 3163.49 1106.07 cv
3155.7 1107.8 li
cp
.968627 .643137 .568627 rgb
f
2771.22 1184.69 mo
2774.99 1199.25 li
2790.07 1201.99 li
2793.14 1218.62 li
2810.12 1216.57 li
2814.42 1235.22 li
2830.27 1235.27 li
2837.34 1252.52 li
2830.81 1255.22 li
2825.53 1242.32 li
2808.8 1242.27 li
2804.66 1224.34 li
2787.4 1226.42 li
2784.01 1208.07 li
2769.29 1205.4 li
2765.79 1191.9 li
2755.75 1192.17 li
2755.58 1185.11 li
2771.22 1184.69 li
cp
level3{
gsave
clp
[81.7608 0 0 81.7608 2755.58 1219.95 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[81.7608 0 0 81.7608 2755.58 1219.95 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
2891.11 640.054 mo
2905.39 644.807 li
2915.88 633.64 li
2931.51 640.101 li
2939.02 624.743 li
2957.01 631.269 li
2965.67 617.987 li
2984 621.433 li
2982.71 628.38 li
2969.01 625.804 li
2959.87 639.82 li
2942.58 633.546 li
2934.94 649.161 li
2917.7 642.032 li
2907.45 652.936 li
2894.22 648.532 li
2888.99 657.108 li
2882.96 653.409 li
2891.11 640.054 li
cp
level3{
gsave
clp
[-62.3698 414.574 -414.574 -62.3698 2960.82 455.679 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-62.3698 414.574 -414.574 -62.3698 2960.82 455.679 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
2394.31 643.782 mo
2395.93 626.268 li
2383.22 623.421 li
2384.21 606.086 li
2372.35 601.459 li
2371.42 588.35 li
2366.2 589 li
2367.43 606.534 li
2378.68 610.918 li
2377.65 628.953 li
2390.14 631.753 li
2388.68 647.624 li
2394.31 643.782 li
cp
level3{
gsave
clp
[-62.3697 414.573 -414.573 -62.3697 2416.75 373.827 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-62.3697 414.573 -414.573 -62.3697 2416.75 373.827 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
1728.73 1662.75 mo
1691.38 1596.55 li
1699.84 1591.77 li
1727.67 1641.08 li
1773.3 1537.7 li
1782.19 1541.62 li
1728.73 1662.75 li
cp
level3{
gsave
clp
[90.8186 0 0 90.8186 1691.38 1600.23 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[90.8186 0 0 90.8186 1691.38 1600.23 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
2097.2 726.745 mo
2067.29 704.01 li
2070.41 699.895 li
2096.01 719.35 li
2124.59 677.741 li
2128.85 680.666 li
2097.2 726.745 li
cp
level3{
gsave
clp
[33.0189 412.739 -412.739 33.0189 2073.88 390.035 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[33.0189 412.739 -412.739 33.0189 2073.88 390.035 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 24.1.2
%%For: (\752\740\760\762\760\740\751\762 .) ()
%%Title: (Stylized people sending payment and receiving money.eps)
%%CreationDate: 8/8/2020 1:31 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3XB<qsa4R>hAc]+>uVA]mtfiJ>/tjfP?!;O[,#6HZico5PoNJU_"(kT&8rJ>]s/%a^jQ%/X'^V75k%FMVbATk!/B$PU&6j
%Ia]JWTGWChE!6(4?RmW3qRP1J0TqFC!lI(:R2AH"p`.7(pR>?eQg^;QXkQR<L=th2"0!AW.r_T@i.r;]d1!qj*fpi=gjjIA/Gk[Z
%%4u(5RVFLk`<b6j5N.eZ\o8EYJ3N"Br[HTTY(G6j!E_$7)SU7+070%=?JO-#cF'+tm<-pMDRLV'BW.0WXJlS2>I=sVAFTX+D&j)j
%'WnD/NLmOi?n_pOp;-he73lj+7Qk%)('b50\.Nnj^6+$%iNt"irXXasrId@5!BS"ulf@XE>(a*b!:^ZKToj7g)bdW!JOC2'C<a2\
%p,'uUNZhkJ+GtCk+Pr**G>806i8GBn`X!n&j]F,^U@BKp0ej4O?p>[l#A4HIY'nd,n+"2EVH1'abuq$p/*K3KK/?(0!K&!*qnRL7
%coMsp]a$s$E1^gKjk-YJ"s?'r+Ch@;d2nhJDgOlLmF8KaaJrtH&Qdrm_-Q/uhor&a[#Sd]e$dgWR[4l@-n01YN1jtD('1%@JYN97
%N8c:P'*BN)M?/8S*);YB:k<7B/9[=FF.sPC[<Nat0+W)Lg<j\^.o(Ye6j8aZ7<lSB<sB:2\dbDOUKBj9'k8cqi0!4*r,<@nM"$a$
%#AmFj0YO(/Eem.^:T7ib@M#g)!eMZQWhdici_^M?PsH^"TIkn$Z]>U1i+"H0^MRJ84.]2@3'hJVM?!S@`&]5-jc)GDh!^X/G.(C.
%s8He>WgG(aE2f+LAd>hP$(R;fi(H&6ISWnl4ikE%c+ji[>!FQHos#M/_f:u/`rjlnL:7\TK+f-pSV;OD)T2/#\%>s?e_B&,J-26_
%["*95cGa.]^OFH5lMuZS0YonH:_l/!/tNoq`f^T>`^U%/E\r/u+.`d@F/<*u1rF.)orVs,!0B.hQJ)Z'"97EX95lWtQ`"\\GW<Y5
%!K.'D$T\T8`+@=/XGd/,HIol=#-DP@Qh52+l!=)A*T/s=CFQ%lSQ6k=d6T0-X>Y2piOdeof5l8;lY!nqC)D9!UUKK73?WPBh0P`-
%R`>BQ)3XP%hdHNPd36N\+5U0$lP&C=*r<_d"4m#OigLZi$nd-T3hemBH<"m7;%FB;H;ClsRC'bRAnN+Z?nHp2O"l.s_em<:dh[t"
%[I1te&$Yc7L!KRl[&3&<\`"Ns&d-(LckH>@"cuMhIQ:B_Z[T%KgP2>uCkGMdOQ$Q_BM:gh:r\YUM?N07KZD<sn,,F\/VGP<!(P0r
%$"IduB\rI:/ELWO^#W5tdujr'CK7s\5Sb>,:"Xq9GVQgOi8:W$I*qCQZXau#[qUuL#/s4n$ir/?Q5okD,dfnGVK)qZn3gE>D5S@8
%:'Ln')kPTR5A`J2D!8,qn+?7XTbW#uH^Z=R@@n[foZ!$@khgl0!P.<O1\WtG7>EQS%S6+$RIC2=&&sP5^@SQ3cbjB\#63UFJ;XZq
%_?8j]K772>93<R95nM=?!5L7Y%UsN0+BSRAlgF5V[f?>b&>8R?"G4ON`Jl$SBI#F!oUrr_s1sX9rqH.o],6hJR3L^NS<ammQ6f[u
%"dt];R>&Z%ZqST;9Lp$mO]%>n8WkLlco?lEBShmCM%J.1,,Rb"'Lb=K7IKWZ6rmhd=sQO'a?W[WPTU?s+:>cs$*6B"PX#<HBjQ?;
%_fVUT9,]k?K&-3a`hh?FPGW=ETi(T?ZMutX.=Bq9"WYuZRSYc2QF>Q+Zh7+;RKLaR.Jipd"LrM2'eJ'p\4O3P\>=/N:pU(3:s0E[
%O`mL=U]:<D6UP@&@r^OJj)MtQbD<Z"\:K/iYco<%JT.DeKh]I!"@mJH#>lEcr>`k!![i"$-Z^_3!MD4kj<ROk@+9Fek<O@si4$q.
%JFdJWL_([<"aQaE"seg'#n]Et,`n?,aA!S'+@(r8O<t1-M?EYe5gCV[(5hcADG9*22IUESARIuIUe,'c4D5QI-F!%dGHcCgC`JOJ
%72e?4U_oVpMZQ80$qeYK>,5!6J-9%Q4P0g:/Kb<U"%p8!rq-CLV!:@,TL8h2QQYVWJbJ;$Jn8%`%fhG!)%QDn<<AU$#s8rTlN_Ya
%%j\o!1'ElD$k0^WYU:?/&fFFS$n15BYdf>X=BXLdYT3D?q*k6I+3UJ[Y/s0B4Le:\(2/hrknGrXFH'ZV#!=-J0g$[7+sSfk7Ua_Q
%pIQ-J+j7,Q.tDAC`Nn%:;CYKln9^HnGng[cPDGJ1W=fLH.FPF=9iN;jdul,3iE!aWA0_4M3<^b##/e`<Gt1=F#(XOV_=4?J`DqBh
%>E(JTNo3FBA\\JH#-<'.*W""]VC[B!J`!qd;[eL%noG]72k:.V+cEJ\QEl"8#/1>X!MD.fd;RNZ]5d7Ge:<(20/D*cR$")i570?t
%rf%iiYLimhQ6eqJ_KCNrh.TSoE+<nJg]f$"JV?^Qpd\$"\2jR'BOHa,`_7kW&.7Y[KH?nmG2qro9N!.J+W$r!>ZA^dFguuI!5a@-
%7*T`YK%gL45^%OFK,Ft>7WQ$/UgQ./dt%8^BBpu7roNN'XZ=aHTJ0t'+t3]?qG!(tBuMV@:J9`FfZj5V_G/#Zrrp;o5"g&4mGCYP
%L)R"@b;13L_#fC*i7fB98WABYhEWFT$"X5Zb-6M+#.,Ra#;kuoU]IRuPA:C[Bhpu=fHC^a"uR8<etfCO#+Q]!$@9jH;F!DN`$E.A
%VEp8AT[+7\8c`0D#?oE'(fN\3fB!*.K1:o9j89NMVV*5K)2UWm1LjX89N/qf/G)3.e52@L1hk;VbSWG0@+(XDGZnj\adtCY'Pqi`
%_2O]Q))Qf@ELt0rg@.=QcsT=XW0*Z@$lY\Ag7&Wr`dn;*;<aXi&O,cKP_d$ePQ9hf3D1De-0]R8'Z1T'cJ*U%Qcs%F#G@q<p>3k-
%;CIt6hZgM,bp<pqL^rqVRKLe<!=+U34q6qM@,=?X^LFVh#nP,7)'4m7iPEG\ILs\,-9Ut03GQKPSp22CgtnEfYX=(0e.$R09TgE?
%4*,qG<+*NN=C]d&I11:@Q@i]:-c'tK,/aNQ^qi$P^fiRP%WNnki'7DK+Zu,^#X:RN)).^CC547d@!jBL>n0Q3,c)jM>3(o;%C`%H
%,jbn/XDij#K+Ar<i8DHZ.g-hSYW,U$kEnBK$6F0%TE(ZrYdPb:$p<Sf/6E1HU>?dh&TeR7!s>+r#LD<N8.+T7#APcP3/ZiAY",KD
%EpsZh^p2'B1[o2BZO?kZ<U_t=)b#n/[Y:V&O@PKji5bB,9;L-$`F<>/Fn^jrpg7X$%E7L[UYbT\b!*T8hp@<_\VS+POfU<];9::A
%3TVU(<Eg%_i[=e$UGUbi3t)bkN1E%hUu,5(i8tG=SKZ:p)2"2--rL8d3>,dR)Vd5#-#jKQ#nRY=&=L'Ua+7euI'JSaUEuA9[tJ7F
%P]g$m'RPSW5[[ujDkpYm@W97J>#OpURV&hkK?>fi!QGJnXMTorUp17b<q40:W2sCF8o1#LNtm?.;G\9*2D,D`?&Rf`//Mj-,B*)]
%]SQa6:c-DoX*>JUiB]"'''LPY#3=3o.]#C`,h=O\HHRrT$8eMh*"e\+E=G#VbkSV;1p3A0.6"ptp]#<:AD#W9P3K3Us#9VHs03P$
%/*:.4NTOM3k+245GDKra")++<1cBpf1[$]L!mZgf0pJ4Gb`9P2])VkO(o4Y-:pIio^cX?=?!nchf9A>8%:&0`0aikD;#GqE1&-O?
%;%70):^$\@GR?#N]9M^"'gu_Y;'q9Pd^X+POrl%lU2X7n7N%G+cH22<$oLqVlo&i'_@#762-`[Dj.CEcZ&dhhcr0YZrTBVhgYKD7
%`'7:26,l-p?%tn\V$Z3aXE$=PI\<Ba\A[q3?R1UCG"O3r>p=:2-bs?44G8G.ThdLUXMBG_Yq5)p%CUp0'>"_u=42q20eXllVPB9Q
%CUTeP>f$[bR;c]TOVpZDSAc@&NQjJ;lT^&NeL$7b]7Q#(1@N<"K8KX*05Td5Tgtt$)1*.^gb^qb'Wr>df^QLU#"q[-j@:053;>s:
%DaS+T'd'O*X)&MXR1,%JE;>d<j]<$1@(dl=ES!*Z/'gPM(3X3[:nAud"^/\oaUV\4(r!R9.*^Hh(@Y#5S?e$Y<dC"L?>[27lggFM
%X.-UELON>VV[P30nQ8h_+5SX;3O10n_Oi-hNXX)bA'1'K/C>##V!Xc_7$nj^GTk&!n.16D+.NKXF26cW(;!5r\cr7[#ru2:]#oUN
%'Y/+GE[!l$@^Z^EEFm-gBH:uBgVc$FZL+DcMNnE20Vdg#Vc7G7&aSnqF?;:m.0QqKfM[jaV@c1LhP'Z%d#oZOB>A\C)(4UghOiar
%O#.(@i!(tm3,r>2"lek_K#^*gD-$rG=B#A%Kgf,5U*M?e%MrRRIF&99CH1gR*-SnQ.CN#<P([@<`)m@Kr]#ieMeeM5`gFVLS%s8]
%E'171lr2QK"-O3$M3nd/&r7=KeTF7l)Fq&'oa"6Z%$&:A9V3#Z,pZ/16mogbp'sAKd#3$>_bTIJ.I9*,>?mu3D=IH&R#a(kEEka,
%mi0JaI@BRUTY1fJJa3Au9+2dBmL9?E&>'<>A-sqU5]J9q!hX2-H3,8UTJ/)IpAQr@=d9b_Kt&/D`r^m:K>[$ikSGl&JDk-\q:7"G
%E$WPH\=uTXBKJ5GMa`hkK!um#bN?1T_?*<enhIs:*'T47BU>T9Y!IYt`e@ZKU@D,V^e];,91*:L?SL5NU^uI'9HV4#lB$?-euG]o
%*<"eFXIW<5F$[R?X]Plu$C`,..):oVFumGJQ$(+]F.G/)%aJd9+U25IjQqW);F5%M+M71PC*ffJ`T"In#^-_FD[<^aI&3"HJVZXi
%EJQp>@"Q:I"57pLJqXV.D,<jBg=P#k=5)+_5p:5O!bMdHEHeH#DHJe&bZGk)U8jQ(j%7t,I<i`:5n2&@K)sR<2b50t&U*q.#h9(U
%A#4q:oFQ'Wn^HSK,`3`<3*lHAor,@=FP73*/;J/SGgT6K:h#[*aUj..9,'pS%[T_J1Q,&3X0GTlOecU!,k"HEL(!UjaUKlJHP2k-
%ik),dNl+]q#H8%??"G#0$MO..('hkQ2/8cb\h^C4*.A7,qHjr\@/%mtgZ-:\:]=`U"-SS[))n\@\1ZX+G;-@Im_S8Hq$/G&CV]l4
%Te"`h)`2iW-;WR\%@m\\4&<-iEe"h[1!Z3kKgHiFi^%pr1E[N:!FMl=_.+TP@GfAKTW8s?^kJ9r1Y,Y-MWnqY%8r.f<FVlO$+*^s
%U@#Rk>Yi=ikG#o(Id^X7m`3_7]pFU%XFl5MrJYXdd+rbImcQhT^0MiD:<\TM5:_$th<1YYI_9_M&Qo(2Bscf+<:0?>HE#fN]&CFO
%%$WdnF`^<fXrEXdf"rZ1^fIno)]V8\H9]ci8oSa?=:#5@$8?%l2E^&iC@pmJs%F9X;Oc5C['U"]B:rYl>LP_/\%[o#(%VOb[-.V$
%U!]KdV&r2*n:AfEcU1"@5"S5UY!/!:US:h;i.;/](,B9jHuPmal*Yi`#:e$7fgb/:?Kp!g?t58PoEXoffu01ZkioeO,Xaffki-UG
%<bjpCA8(V5fb*_cmitk2]3;),^%Sj7foK,N)?3j\p%k4WhZ+M#pJJ<CH5AA]nkVQ-H682K^Nj#NWS`)[TQfm<1?j4o3a0"2pp$@7
%5bH&.'$TDnR,8E&[,QG,kCIn>j_'r0H>A[/%_6.-lEd8oh95g>)J34>W'.KI".-jNcU+R<p,ci&hn%4i%uYgTkgT2NAN&:T(Z0o6
%6X>-S'KE=H++Pq3Ws02p<,Ri@/Q0-A</t+WEhfQa;RtJcM-iB1o2/&HdnHpu;'A^i:/&@u<H:)AVK.gB/TSBj0"8p`(:i3BT$'R%
%09FHS6XoaF*Ei9:)25Y*0u&3t939?hb'/6,o4R,GQ@m#Qq6+ooZPkQBHPK!HVW6i#qo[[+_`nO4P0oo_WTH0ThH0U1Y-,4oak4j]
%h!C(R?U8HWINjQi-\`+[E:=N#<'E$W0WWa,esiBCF0+]*(q7'*EW\`\kdcsir.9LgouVL&OIu>WpaIrNj(@&Pbe+8RYsYABmo7iC
%<[b$JpbF](Zg^<-5<nO2d[U9a*dlDT"s9oJXS[b+8cR6t>?]2\>&R441^*d;QSMe$T)'W.#,f[Z_@]3I`UtAV5CF+)k9lQF=C51S
%HGP=-`shtoQd:UFntt:/jnoi:2Lcec"^=uJG2+d<6-ff%!fJQ21E.4UI-gQ2A"<A*at[ZIhua$=o@gBkoNo51p&&&^Rk$#I_fn$d
%"f,Hud%FO]@8_A`#RBM`E;5FEBkK;[C&$*P`[<7L*unrY37+:QK;&&1W]i.)>WBe"9S,K,l(+/(*QM?]VBJRWA[LK)dCpqlIOc+j
%>s?$)lEi>@25`\!QAqiH4XRMMPpp:5L>:1`T0=lQ/bUpta68VCI7u7F@Qs4-7Ls(pq_98>^sD"V77T"Ls'iBnYI2p)%h>p`%t3@i
%De\=<fkK'c47.I+eeq.K(1qCFc.H)O?@M>9R<@Q_"`GWTF5uBJ*jSr#N3@387eA4tL@rH@GuO2mh?EeqDiFE&FtITjT9UAUI2V9P
%pG>(B/C3/.r?WP#2"TSQ%heKrGino)"d:RfHbGHsIJoeMU#22kbl3?s04BE)5/_40Xd'DBk2te;ai>^6<*a@K1o$]]>1m9-kj9gk
%L#9G%X1'1kn*MQrltmHMgG[Qef$mm:A$nId/uP\cF?Zj%cUYe;a3r5F\c)qs%R_t.YZfu07rmhRqoIcXISp8\i%/qehBM5!\f(9f
%RZWtSqrUP@B&4g.8>9bR,l"oYF=nY=ie'8+9C$4bgO,*WBDMoZbaFdGC<(/efqF1VI23l(TA/&!\mbBgDJ4D=1-R7A#:4Ta'9'`=
%\;cII[%M,2OQ3IgUUOq4WQJH*4q!X9L,1%rXK#7lT)QtNQe\:,Kp?D#=+C!Q&m4[qg@8nGXc]60;TinPiDR5ADt^*qEZ*l#BCKQ-
%`VSLj`R!SSXAPUDL7u(5e]5ojA^r1NRssdVn-o9FbX-129jcneq7@dE$4gbG!kD&$9C,%Y^;*JX5Fe+Mo#5&cb*]8U-?c,2iOA3&
%_6#-"XRrU+)F)PYS%H?^jfbm)`=EUQk'H0;08bgHAkr&opsP8Whi%%O9Q9eXlp^Gs`*tCB@P>l50?V=;oqhAVpp+utDm$k9?52r@
%fSeaEF7U/Echh#_?eR@.-=O.qAK3V7Ynt@iF663_J)s\!H/)?Y9Ar'B2*R4joDS/@?eb&cS=%'H;p5asIOc,)$,MsSI\E!S;XcJN
%Spk[iCEEG@T46L58O&jH^p5Wfo&UBGAS,B&5%<-RKjF:9Jq[K7fX6E=RgZiomQf)B>l.^`RYI3@Y\FQHp1IU;7BlK^K!g;4>?J9t
%g8]G%#X/.G*=DCOgjG4AJ%_:2<u1iQC@lL'iYQ@jK*2Q>>,]i1bkr>sGlhK<fDj6W]V5=Lq?lt4Z:'69Z.mSKrjf3AJ"EodCB$=u
%e"$1UL3\,RLu,.F<P:9c`LB4VU=u'i;g^_<^bb\j:jYtf(Cri84:(%mn%W!f#fR=HB&Gs'U`Wm2K.!@S!AZqQ!Kr/o6i_ZKn/;3P
%i'?3.mG%*<d5,.d8*F_QnR^9<UTa>c^QQ>JEmK%Cru^=f1X)FTGoQd2>b[V]43AohWd2:8jO:?X\pZ3#c*l;ZeFg158\sTB&>U<4
%k1C%9NW`tN#,iQU=)Vh:5:16MCk7Z<?=Qk^du+MN1s7jP](e4;"#DUMD!#T@O6Ur,O4#sN;<Ro90PMKa&.\>KLt*;hDW*6iP4NoA
%ie+n7S'=3V48frHJ*6k.moObji8XV%(nrRas":JS0!>4,Y5e?t)D&&k0!>6RpDt8Z!N([+:[^G*f6eBQq07\eo2+\Bn[d91RdUAq
%(>!pMf6k@0"iZ@*XnM_+MdkiAho?D_])>A=,4:'?LXQbCs"(g3BSKrEIig[<YLRtR+Bh7\6M5odkR!jsL\cfn/LaD^/P$%KIa$T:
%1M.Icb9ZtMb+[3=D`7TZf@qo-AFiYAo493aA[4amCf)PV-q[jS9_Ln](i.*QM-<Eu=p`8VZilbA]k/V*l)(0I&fn*;0KX#bi[*MO
%rG5=qqaDt\po)T?5P8X'2sD?L6WV&Aq,pV8q*7G+i1&'0P@s50QY@-SVb];e21=cH'ZE[(Ed%49QX]t`8k.lCXgET`r5*$2DHeVY
%.+S-1G7Mj"0\Vnls(OiVlDo=)p68??d"cOZT`%-(m-Q6[_TS\CZ7*@:$87=SbG+L3.(oI]UQ3JJ<oM$#_Vk:6U@>H:]R5;ErW:^J
%(BpU'!U55e'^UKcXt*%Mm2#:HpR$dJ'j5._deDKh7\=C_k5/R#rqGg)^(pFK&"<!/2uV`%'E=?Pr%5+6Qs$$)qNE9(i%XImRP=A?
%?I^FSgDA.T*o`K>K:Hd'Y],]1AB8B>2_L]=1g@\6nH>_mo`V-&n9+9nV8^oM5"eTLR&;SPl>"<9ri9D>1QRjdCYb9Ej&oQDgY$3d
%,ZrjI4r[\cj*d8Z8ZlH7_oP'KNJ!:Y`o9:VKnEO1G-rC>L5o=)Bp.XRk>*gmIproWDn,[%PCZlsbZB3qp*)m$EZ&&FA67WS:d<8%
%'7KPGO_4H"Q(OH)'17pKY5B"U;bYVm&!k^&J,AZhJY.Z,is2.DHH"Kb:4(cjN\LVR)7QPSbY_-AW+4&+ed,WUNo:4u731F[Fad3.
%=O]';NAHJR`hJJJ-ZtA4UBH+QkFUsS#NAh"cJ1/_4hXpgP_]eq2J?>m2gjGe4#Hf?pe8VR4A_lMG-t"6HgPUNZC_D?AGg*!<pcjI
%Snad_\t9pSXRk;fc(4i4:b)M)D-/UkLmqG[Gm_dmk"CoNK0P>O?_PX+#Dk\,$-u#``u?@OVB;"1cFA;+G0HhU^]Y2F/5-fiIe'=V
%TDmar5Jb575PJm^Yb]7UP!8JG8RLO]8W1UnrPl.$<pY$&I08j*4;S/;:Ht7tbNId.kptqbP>^egDXpsF8q!KV.uWe$F&D8r_l28G
%lnra*:Qt43SYo?o8URWL?bXn_1H'W/nI#]Bf=dp*HS;%`\*F>ap?^"/,p"f*lg<D/jDo1Oo-0Ouca@AIbq66375hWrk5NP?c:9k)
%aQ@(HSOGGLc@7b8j66\fR`p2rm9r2G[7KHrl.dJR>GQ=uFRG2bkG%#]Tpq7!c6'*!5GbtIbt>+5qD#CaT?jcL/"cEecC^6FIC5D3
%pq/tCeht`CC9r/f`6>#9Ms!^VL@ThJk@9t0SlbF#9\A>*))G[5Ia%sM5,Y8l5`firE]m_ae8ccGYe&&e>1S$bik>c2h;/[[:U/@i
%pK=fco?Hh^D\mf\0lLfk6%V%^>4h9T'=0*-cD]aHI$E4$c`'Td&TdXnKF%2J^:Z+^h"Z@Hm]<IJO"E!?I]'33[6e$h(RbdBs"(gs
%f6uK6DV4DkO%qLp?L1-Wpal>j4H7;qdZiGMp=+q;g`&lS7aIH1ln!5E="&hncb.g';]^%4Q0Be]]nW>2fMV=>hX(-NN8]fp/:9E!
%cUlOnpu\p@m2>fCiKL!Ge!BTLH#3(r!eQCtcLrWDBPnCa/Rk@`-EeM:q=_SnWAFF13X>9K5Ada'q24RrShe4"SHJ3`@b8)eb]?Uf
%Lkum%d@V3g'l4n^l_%pr6$^IcpE'_]Aj1J<m6T*nf_t]J`3X@ce;iCd2`4s'AY1Jgi$0.W9H)s1":b2Y*.1.$NCfTmL2^Na%u7?s
%q:-!Or+LN=':%Db%[3K/21u)1GrQXe0<aXS;ojZ6S;4Uci?2df#V6tV//ba]pPjW2Y$(LYIW/Ea`jti'o2n:b]PMOfK:^t1_rlds
%^D2X:P__!k%%ja$5h7U`%%j`r3qtB(Y.&TshD<2,gRLKqW2[XU5+Vj3(T-+8E]3f\+@+RrgaBSoI8'0$5Gl:8pfSI&_qEipHe%92
%9&P&]Ni2-qCn$9bj^c-kZSB2f4_/X6N/ZXqg\@<%Cjh"mAOLt-H8GS_M:4]I%am@daMbi%cQ$1Or,Q$.4qN4h]Q$E-&s1$H^Z<jo
%kBdlYa*9E3U.5!)AboZOdp>N>\D_McZtSk0lE=g(YH(hSUN\o,r\81.m\qKsgmsAg,SffGgW'S,qQ8BZNW*I(P3KHukAt?,^64Ss
%p](p$l=.3:&@9[u1\0iN1\js.LYrjOh==h;W3'sfc^PV\;!'uiJ&J)H1#%9B>f>$Ue9u3[]dS;fissr:-5jfI_tge4]%CKfHa[&U
%-3ug1&u66k9+k%b<lKJ)'(07,f@,T0b/5e*+Z<30?e/t<bBr==^J<MXQs^rX)h%L0MVn=6!(dp3U]ogS^KV3gX"C`VFTSJ3$GcGn
%_16YbV&G(pZQ-P>ZtPoJ(B!TelXLECi=j*0J9ZLbl1[#'hU;m[:UBQ._.T'd^P)9NJ\O;XK36:m_UA,gHtI&-+R8,,X,l:Np1X@5
%VW6SjcYS:;0q19jdUD/5#!u*N(X[::]u'L"+,UAd"G)&!UT=nhe%u'NT\T-(HQHkH"0Hhk(([e8JY`'&OHi>CkCK)s$dd`+J^6T.
%4:q/fm;X5F4W]Tt_/qqhSnJ$=bl/&]7-g5iknVQtf=PGaN`tT>(B0&)hte@lSI466!AsEOZk8eIK&1;_RQH<2S>'B9"t\9,<Rc("
%^LABYng#=mirr39!0nBkMCa`NLciQ\]RAeIKMHO\DdEB.h[\Vo$hSiP;?W!^G7R*7ni%ON7ofjqW;nVsj#s[VKD21$ic*5-4Q74)
%S3pOi/G:4sEP0ONf&?kZbnHtAKtqjB"5fGu]P;,nSn9./07<uoot,:4U"enkb76cdKZ<[\7-!5.J,bceO/(5$'n1=oIFpd'<4k4Z
%/N<#pjV!Fh5V5RYi['6L#P")gfH'$<m24^.>n0GV=!&;a+'lk*qA\A1*l&#m$KW0m8X?VEpe;.r([)0tKq@e+TI51(HK'F+*npYn
%3V^G5rs=;<V]eS@//(`5'F/f;V-%Q#6rK[GA>p\j'!O``OW;7PBFN"5*TJ\$FhU3Gp3.?'+RdZ^?n``3s$Ssm7tOm%#n.siBL7_+
%6lmAAG_)QN0r/KGk%QY*bf]G#]K?K6ZQbj*n4_&F/;YO(p^NiJ:]sG=GTMIu(pp(r%u_50&d(GI,"9'SP@/D)G=[UF\N/(o2[#,1
%87Q0j:8AGgL]l"F!_\=NRMP)eJ2sqB1sADiQLYMW17m_9JL3C8Fp(P2Pk@nL7#&W,+(/R*]V6NF2!`@Ud6*kYV-uR+$tm;e4RdNs
%:]"80P670E0*6g#\EL%2[V#K)+W2OapgE&NZXatfWrM6VH:E3.X^L1gR,rcqC\8CL#II`]g2]5N0S@(LV=;jjam[7iSt%CM?oMHl
%YGV+aX%Z-$=.Z:T-!$Vg='OLYDec2>Gdf"#K@,6oC]#eAh;PPY:TB`6HG=J&is`9Ld,'0P-AKGV\iCE0QLkr=A+9@SS%r-fR=a!O
%_:\NJe3!S0$H<$?Pc9q?Pp_'Wd*Y96?^fr/e"85u+#aPsDuRu_)ESl>O74^p]03J\"6T']MJ0Z'U*9U.TqI2?-2#%"S&5%A^Ahtn
%^6U6mX5@PT^?<:pG7D7`Fj,)p,WR'QFfq^`1oC.[pl(U,-qT>5N#!9(?,YU5SHjf;@n%$)#i^8=eMTRP_8];26Y?H\8AX1Rm^leN
%s'b41#^bW+TE[kU2U,r\Q-:9P(ce_P4727>pFklB@,@J31U.'@P1I$Wg$H0tZOol]O.-G8RT`Lh5a:pLJ._fo?pYU?<8pR54JUdp
%DcsQ6.^136;VA.e.U!^h*?+bFkP!K<p(0XlrbpES+K(hHcQ<JF+$N=3BYF37/3lJcoE#gF=XA$_3G.))40kPoQ(lsGo[%7Gi&NQ[
%hSZLSff.-<C7K),^<q)k<#Ih<WN,^Rot+_9UA(..F003rIJZp+b69=fOo`%R"VGC^*QT(jdooE1"S*S8X7ZOcFI?[qjeSsp37b\6
%^q&1dBc[."^0Kc&a"b0Dcmbmk?G#*Amj,c9\T.-#e5i]Tf!I^!D"l\EOGm@J`h&l?)P+^?QAniQ]fXs"<4`Uk9fN-^eOjDGP1IEd
%gN4^)GDpR=XiCVI/7eo]^Lt,;3lL&\Q=aF@`.6S+Pt\Sa$/g"1"irrC^peO.G2.BQ9/2YbGpqdFp>)tqR'tSn[+6WC0uFt7%d:]/
%[AO$.)D:95R('QRN]9*WTSI]d[abk6PSL:!<s%1Y8NlBsJ[X8:U$_-i^7fj`l!73`5bud_b7,-G[am0=R3RL,@V+eOdfMu*T3`XG
%d<fV"2tW\O!_A=eBGV(IVGh6qS(]G&@H9sCoi(ooZQA7;<lUe+Ee16kXD4f6#=,TFmT@@L@o)MM%;uo6@F&6+N!$HmJEG(]C*4bJ
%`<4-WH$;)1YB@.ncrfc,,0FcMdUVbi4SSoa%DASAH9b6GQr-P9N-RAL2Pb/dD\rsA0=;:qN,WkIMoJKJm<-X-)nI^E.C#ut>32ih
%,!H3Og,I8qZpSfSRtjGe)NaNZ[L_BnKFN2&TAIA99c8oVp!?eo`-e6)Dmr$8\cI2\5B-Hnla/bM=P"Ct[;'dZ(LY428$2!@4Z*3R
%XV*&Sb]Y,`WbDEWI+BRs[2hOl*G?GhnH1Wf3hq<:@ItKi"ptT!9Z7N:R^u,Ed+b4eW*8g(=JZq?[6$s!!@RX,$lmtfn*fQ"%K96A
%**@E8;ZcK_Cj%:Yo\6nX>:4$$pc)nrPQMUFgMg\gESceQ!ate/g8_94m2i/d7-gooP!p'CTX1m$G]VI*>%AbH078.%lSK]aIG"S6
%+(ntLVo9FhL(-.?AC2Z5d0?a`GS%`(gaLT\7+"]+UQXo-3]nU?`%>PYg\Hr@H)2F?[J]mPV'XFX,]OS%/T[R0!PO3+g"oI%"rReD
%gFO'E2K.6i+G?:OKd#44-dY4n:ZK6;b2>h0efa53H8/'tP29uSa=Ot9,"qL>j4gtR,?@,PafJNQ<dkp0F`#"jVV5a+hi&r'J29<9
%^T2qT@fP$h:WB*aN>X!NNnTsdWhn6FA@fH8q.ADHm9&`b/a*MaH<eTpFLj_B`/j/%!?[HcCk8LO4qJlor5jbG(l(KA%1_H$rcDWp
%97'@X.%#.bU33h%!QnpW)W2[7@>"io_%u:;Wp*lJr61%N_iia<qO\OnW;j[S:L20L+U3!`KG`-N(g`UgB=Urt+cBm0mFXA4"7,E=
%W\YAL1fk23@FmONXO<T;^maofShV,l^DYWlHUHX/KSek#MG`_..T`u,ZDcW+h@pg/.s4j?.KH,,A[;OSm.H*Lq,lp(bN2e!*Rb+s
%p$dZb/#!a2(c<)$FslFkA#rOY0bnKIc*T?:P_JC%P&u&*4fmJB9N`'hZPOVj'GrSP:;gY@G"dtK.2\p@_#V-Ge%cL#?0P,c&9/,1
%JG81SS,S](X5fD0["QB?6f&L?Nb;_g<:(]kJosM_Jq-o(V&o`7!tNP%PK5.84k2NC@&NM7,5dNqAm',Z>[$1F214LE]UseOBg8P3
%)UhMpXM+ucheJn5ES1A<pG>['L,K8cq06);aJ^s1hN"/IN=\a-:UXO/i?qc+Z\'HNF\Jn)*Ed7P@blKIW_l&l.Rq$K22C2N$0+/3
%^(Y7A;#_OK@&<-`V^/Pg?o/E#L1e(HK+U8SNb@_*bnoD8"+QAp@DKidmX3':=j'KK0G78g_4!+b#tdYPlF#2iCdfT=U8H!0:t#W7
%lq8SlWS>%2jNa]IX`4<rn=`eP&S&U!a%3HK,T`jWe*2I=JI?DJc-B+?FlT5nbMB1Qjt?Q!5R3/?4OE^3c'khQPatXB+,;L__f0m3
%gf0h:#D2AmX#qsd[g(O-hUJp*gl+6>*OAi!3`BSH1UPs8d?l,.0G<WiTN&>U4l;S.flW)r7?3:(0liF$U,BUS4an6f:MmMp@f2I!
%6Xe1A]UD2&f'tR=Nj'17i>8?bOu##SWGT@DhP\j@hTNXR!C"k&_f4npdqlR=r&`'XD<PhU8Zfuoj#W:=G.O-!n(aEs'\QTrpV,6I
%)'.ARgA<*8S@t\Qq/U/7ZB-&P\`,4)=Bp-LU,+q,9ehKl=JD3[`u1oM%$tth@>1$$^8cf$*1Pgcor#7PX%sd9!)#1KrYe!m=0&#]
%hW/sHNr"/Xc[-;8I[;pN5)r0bCqn-/+p-kkb`d1G&7&%Ep%"D;5\K4R6_A6a5>ZbL?i<6;6kC?-/[J^NQq^:0^UL;HMf0!0;^QId
%$$jUF/dqbt;JOst4JZcAo[TAN]!eY8<CV10d%9Ts*\u<Y%F&+IlF<@X)'It)<k?egmlj3nBfee\%c9OAHfG"s@NFYJ:chh\*)aS4
%[K7#5+OYB7hs4GrcrH3!#LlcS;)`=e(g@]:X9@$*3b[?0%*Q-so4!9//tNo/GHLIk-N7HI")SU4JCt9C(:Pt7etb0'D[#d!F^Dl$
%fZaCIlqYn/PQEu]9iT[F3\LH4!CO9?qgg@GWpM]8Z?62\MsejpJ?pg2#D.TMXHi2GJ:`3"g8kbad^t'ZX+>0:ND3538"X2OE^t'F
%']#!Z.?lklZ`kSob3r>C*Dd)+[8d76m6ctm*PM8'8]hJl!>AjK0KJL:n8oKq$O5OS2QaRL!&/_MDAm-^_QH#"0MYV3bF0//f>;sO
%%<@K"?r8l>?5jckbW[eLi1Z)%I^@O%Fi./VS:"4)rK/#JQ&kRgHUYD@hHkJkrTQXb3JE^NWd&T:G6K(Q=T*d9nXM>pDPeomY]J_M
%4CjfhSUIj=%hE>`'+J$]E2Jp%Y6:m$h<ZuTQZpT+088^2h,1hPYno1.DK(,.(*u%?ao"%K>TPjiS09+((Hn6&fa1jKDb&1[l45-9
%"37OE?Gj^QcI;<h4b;*H04BpVEobcL.1sV@`8gdQl;k=pc;Lk2;_u9^Pd:$W3#Nnt+\iu/mMkt2Hpq]jimLYB-C$Z)8aYWh+.?u'
%VZT&Ul>IgE(kW%OQQPq6M2-MX^-+O3.RUT&e#'gn>@sl[)>4BSddT!^$jRMGok&k1dl'RPg)Y[t&uVEc/m7[7,/q93B[E4s4ZgL"
%>r)+CB)pu=#."W#H"Tq'HX%PK$op1^.eHAiKk@B0Np&GC]W#,fV@sDi2aT=ArS`QDj&9j43@7O7#J411qELF2f/cq!D;AfG],"#'
%hp_hJd2auZ[H1`Fs#59S+O;jT]i`tS]7HbVeB#':!HcM2@/LMGK)/2'L0R:TIRtdW+O;a!n;%!r#pmK.[Z3@#H&uW@`(*mL9q6!@
%8%/L>R\dg!Fi_2jK]bemhT)<u?EG=f`]J!eLLoPZA#JbQ%L.RM^6h-LT7T#6]<nkdH6=Oil:P\Z/l[m!3BD-m%!Je0i$reeSrB9g
%H_R)l^AfXPhXp-%ebrbMkKfd:@/*k2"uk,!K#.,t-(%_@F6V/GK7@Qe30ij#AP)[$gd,;*')tcai5<\Tr)sa,jeT>'6*sfc"5)\r
%_eU)QXKCHbl0!*\&:I:2Y;.[Tp<_DiCN/gP*(OAZpo>[1d;AZ_^4[ijQA#0/'g@=qd+9HmZbI9>2W;g`)RX\$^X>*8iR?oq3^'%^
%]>ZAo'naXYZ1DWF5"%ti1m??KYNY9UqAN'mn%Ps"%k@Ji=dc:V3r#b0N<lb.Ci_9QPH$h5r8_b+G!0+\&keX0V(]gOgti5eDaj7q
%n[5ul8]r%ed!P^7?!<9G.FkhY($2Ai5@UX$HI=K1k!2<A"m_D9V2m':q(>E)?]sS:J$-5H4%YGoe8&;DH?2`UK2HophV=)M4S]r`
%huEKc1E*OfU2%#RUN('lHB'V%J3'AM7-ho-mR3s?run&HG4Z(=%G_o7'Ls]8I=`]so)ZWh()m"MYU@fl-S]XK^:?Cnc7=7BEdB7S
%@#3BD[F`HTZJ4#'YF=&^qsloE/2uRRc/e2M/pejY0^U<P2`.jr"I7NWX4/tArQKF3Hcg=uji`n&EtFD.O)nk&Fg'"Zd^dR.7kaV[
%5C[Q.%Zc4(h-PlGWRNtf981W$/#CiIkeS3co6rV&l-LKD^9)#.AGkMbZ#s$*0RWJP]GQ4_30ESLS>JrtAm[U1#uuPK0+g2oT%tjK
%8p1Z@PDuA(b6GRViq]]oQ'OJm//`/X%nKQ`c44:MS1,3L_0SLE;q6;QlpN)?e65EVU9Q#@)SN$`q=o2YPd*,:Ipujc)%;5@BJ?en
%D?cFW#;<odElERuG#H07hI-p\\n!TJ]^`3?%%ge>"ukQ$"r;B?].h1ShK=358LUo_$H,a..V_A7h/H(RLS@>\K<)hbeVAB'[&KPu
%Q`3M)\AEk6YO7pd8.4#.`-uZRcaX@;dfhP;EKl7_,A0YiE:`Yj1)R]#^BA&CBK3M%ds$C31Og/c]=\oT6bVS(h7qm"m-=:QOP:1,
%#'od=',6VMFAU18#Jp1(n1g:Yj%%Z(G?1pBi9p$lBlNN]V\Vt7a@K-fD^`HO?0E`)?L99K1\oX5n6i)@+3^=b6c#O2?OGrFQ)EQ^
%?6gN7YB&=S=\7%oL$UN-]HF@1JsZG&V;SblR1A(;mF9N=pX^4/nF=`4%mCf_c!]f,]F_/L\!M`tb&/h62q;6=Yt>u=S+3!"TQqI1
%&&+@5?A#pcl<l'.<VoF_[X>`p.Yh&kf'Cp(99I^FYnZT.4>.;eC1<#HO.3At')N;+>S9f_es@$>f)=%bR_$1sm+f6+V<[5tV9Is3
%Z]omZ)G@X<K@?[Gat^5EDOe,#/p`l'V&KI_\sJAPV5HZLBrTU8V5oG([A70F"O0d?@B#e6Z=oZ_g'&9r.WgtDX3=m5'\5oYTkK!=
%#a+b=&7S`*84[Eoh9bk:U)HXq^YFR.PJbkr6%R+1E`\6k;#^HQ#o-fjU7n&QGV/P1[[0<q?L<EQ>+lg[ToNGeR8E33<=a4RV:tLg
%l!ALXD)50rN]ca]Q\iZ.b;($LBJ,5;:TqsR8+#5T8g2fP%qmE'HlT\+Qd7V&43L^1q#9j_en';5NJHqfX2da'ji2AN^YJ8Ea&[eK
%rXLKcZ?gq^>D`"(mT7IC[C*mEUr^^Pam/;O9N2BMqt7;lb43kSGbr3rOt/Ia^$CqRU[bonH-s0fQ`'$E9"S8EXp-C+Zb"_dS?9e3
%S*a41?V7E>oAn_B;O>sCRFQ`Rnn@^k]$X\5Y&<[/hOa,$<`MJ!<biV#\(X`_@]TH@phFZRHPKhEC0T;*biM3./TI)d?^$OEAhA@5
%W3#+LGPB[ko_%q3A&!K*<on3CCX$,XBs#uXmNHAU[_!2XO&a0bF\_#WlT6adD`sX_>d#6%NEe-F$ENLepM+ueEnJ[>)`#73pZ/*G
%n=$GD_cs*250W21]A^HDDCiI#WcZ/S=JHMC5"o79T?Z:k=Pk^)A\tX*^i$5%YE=gsl<S(UHVe$-p(!J0`W<cSD4I_slGeg_4`6Jm
%omW[05MU,Jbbr'D3*^fd:kJKW8K9:H,0D]=NLXf77c`k0\e@r-\gro0@j)WP/Y2L;bi\b#8D^-tfos\JW-Pk?mUl+9drICSH1R,q
%2p9NhHF$ah>Xau_`C;\qZ5\YknYd.e:0t,u7n2$f?F'<Io_JLO3801Zf;&;u/J3o^GK2FU[:I4=oeou#G'(9D't_\,0?;S;Mh@C:
%fJ9n$%dEA_kkTL<9;mNrX]5>YEU,I<UUP+o%Ni/F*8.IGr*tRc?^J2-qBFE3p/j1>*;8qHij,Fd&Z%:P-!IN,\WU7E_(m9]'&FgV
%$K4%6<Jb5V_W3/O7&EY`FcaA6<aKp*U3>*3e?52tW2%l&%<]>rgSZN)JYugqTf"m4'O!?6KV.KCqg:]mH23PN&=8UQ9<KTq938"o
%/Al;s;A!MRRpT_:D^%iuou;$5d;G8^9UB)RZB<-rNtnkn-$DM<>%'(m:;^m.=sM\Obmg9!fT>heJUBZ>1@eIs/"RQK\<=+7E3J9G
%._fuLE4d$jA<;T$Ilt=)06aB"?g3psI(+]tc11%`Y^LK;(629J,M_]6:'CMDq'(PgPE\UP7sRs<]kiU>l2%j`X=](e$eq0@%K5E?
%*mZA@_0kY;a)A>240BBD'Nc]eHt8TN-FKI;.*>^P;,eTWM9=B->,%o-=51Z>Ltth'?M*W4]q!nZL&:B5C\@CH-b=Mcg=b;\KQg2@
%H?n]<EqsCHIE9jKS,5^Hh&W?aY^:DtOkkGs4[pX"gXb,[HdQN,Z+#).H.Y2qkONt7AlICKZrJikFh5>QP^%L+=]f#;-7d>1>7*PX
%1aH8<e"q0JVC#U!Y,]pnRTc'0[Mpm*Gh-fU7r=tF5K`jH\_S])@$t!\A:mWK<,OWpkk,Eae^FGnZ@(K3./`=$=#iC&`KZ.Y\tl^*
%Nsk3SeQk<i$QJ's`I1QTlPn*<bhCT?2j;moMjY6\EKM]@p:C.;G^*knN=(aDg$f;OB)c;9I(]It$$QjbnL/OQj?&?Rl[!mOTXeL\
%ZCAh.h5h;#^LT"cb,O`c\DK:TpSj@o>qHaN//7C\L\4;WpLsNtY'[NsqfmAhahJ,$;t&i!L!ED1kD;M950F\lUlAXXo'YU!9Em/2
%GBGog>eJF_itj]f4GiR8qME.emnU%<d)ek#qd):B*G6"_as03ChC\CZ:LDS1[6.Gj6i$**I6[b]HgI:,+0,8q+_*-qSVl_`Yfp6-
%_M-=f\+7K5*rWsJ?OC"akKT3K_nq_JH;W>P3\M3h:W)R/E9TPa'T.7l`I*(3ZrlWo9,AQ/bKtrjG8.g%/L8Xp3lOMIP'u+/09>G2
%a-Y?,oZL6:/hjNRPuOej>ho`;937\LDYfe`G^-b_NN=M1CQ7BF:#pSf^JQ%)8iI9)P].R@p$-D,T%gk/DT9rUAicHo,HKX[]-Fo\
%GZT/AmG<VBb/*u)MLKo%?Y]$n"<V*RYfoJo,[Pf,3%O&2bbDp<1+F)d4:U.J+*E%mi[K%jOabHUPPeAT\fQ,,1YMbKW^Sh;+7FMe
%FZE[;=8.lE=6aWX?VpXQr)kIgT$N`U/!p'0B;9QT(/B1BYY;US-1B"=;-'f<S$eU*=deJQR[85,NB&7d/\c?WCITdn?DS0=bLP(B
%l[H6=:!tnfU9h8V_Wk(%d5?Q!qQ,s\kI6nHFed@KkfeH7Tq>W/n+>1&%L&^_>eZ_V.GRF^0C;qdV]i2]Q,]XEnVus0>;`k<B7b-P
%-ai*bF`Y$[gb(FQO&Y8G[C.]j[F/jOIB1"Lm$O8iXCiRqcrXhm[(G.kLso0^?[-m7RuuVP/Ft>Rn$9,u=`p\WUgmRU)1/m[4DjTb
%h=+$:FD`@qOP),YIdZqd>A!>Goe*Ou[Bl/qY;[!Ve^LIem-H[snQIGfQjIZ5YGH=uem7Dj%anT1T"N_54_FEI\biepA>`es1MQ,V
%=Fik%6kEYc7B(,:bK7\4Ca6L(g$U3!8(8;*P>(%h*G<l1:Tb_.jc\AW<e,R-\#dMWCUH*:jXN3n+Ko<Vir&1m:O.5IRG6pP,V6L/
%PV)OmO^0ThcR@$.Q2G*m?,89gPrL=SSSac2X8M)4h7Zc]`@`OAl5^[j88^@A&'9&Ter2#H/,d]gI\dCp@!ZCUT2,8Up#1cuM99tR
%.bB$H3e'd4;<3"&.?h<oj>KC[ejKL[2t^:"1uZpK.nXu:E`@9dQ3u#9b6$[,Xn6$>nRXj]:7'Y?oi.K-8o.-NoP-cXfmH7lc3:#q
%rJfXV_b_B5HF8;fl&g'F=1=JBM(P"]kf_:lrUI*9)_68Nd8&c:0BEPAY6]\u13$DdfeJi'Hq6l3nldiTF.Cm7/8ds"b.-H,4(VPT
%ls9bTpbe&GU5;KI:Mm)HAFatX4h@W7#+og;38ERqP,[ekkUO7pZ7&RJZ?KPeQVX$1OmU?7?(<Bu*q6hSXVF*8QeMch[bPk(gfY#I
%C0,;+\Yq*QQ^&OV5(nr]/TlCt'9(^icnZS%n;(_n6XUe+[$5.kQcO&Vg]"R.Ps2LnV`*#MenihFPm%K.-6g(6ktOe'X6nOQ?0uGU
%.PE01R%#_H0]/kR3m5;eq9T<(@/pA>^2o<(BajE>K<k'$ac-pCL:cPRb#2)^M($oVUXulQXt@h%l/HOV5^D(KMY2!catK*BV'8>Q
%&V,9)-3P\rDU[4`H[V5QQLGAUlXOEYRpa/q#7f4#9Vko`="m3S?8W_U%4//./tn\ARIh.1\WiNJ_b@AbWF%@Lj/Y>e-%XT.*,ok,
%1Er=Jj!Zd?;>671+dL#O1_km`,!5brN+.l(EQH/Yf05m4'CBfd1RTZbQDEMKYQ'oW,M_pQhVnHV-]%Uqd>E4/l-^uZqWFT==^Q$$
%;g%O+2I.N82\`CCfd+?b,[<kkMR_`gm7U61,aQ".k]6s-lqpHu^@8.>"Y?e`L"GILFS[C-B2[8IJKU"GPt\4+]YTnU$m51SKA3pT
%9[<<Oi0t46Tq)c<:`4qsekVM/`ejt9SSdDe#Z6RgR;_%)*ERtkS%\do;FqQI$0GcO-AcQjXJYWmc=,0>]us@5;"e:I=$hhK2F47e
%_aqk/,<L[iLX)p-Ha%3@**p['m.[)$9r[W0W,1][lPXJilIl7d'p$UCo!4W_1MPh7)OB':&F"P.,45$"GsZ(C\bJ$9^+ZA,NRq0C
%"fs,,C74>:]<rX2b+1ESgh:VNa.917?jbL&rk,rWPE'Mf/JN79/@mXq.9Y_5:K+gU,!"^N2HH*C[.ZK?'$`;$Vf8l#&HN!hdQk4m
%d`>9U"OM\=OQZ/(^&`+ohb7r(b<%u1ZR\lBlfH4U%S,QSG5Y*!X!$JTBLku\3]`(/[aT%0+2um^2Hn],ic0!-2@bQ\in*!O;0cSG
%hdDV6V(Fl\E-tEH*\Sdb27T0R_TRuhE^,g^U//BDl/W>JQ/[/Ok'Cdgm6f:>n4D2-gkWVda?lcnRJ8:6aAHU6kRKf4>p4puA8<Z/
%4.>-]W,bWrh6tdGa>U?NBKYQWgpLZLl=;T2[1$5XG`JR-riUT;!Y7TTj=s=F#_WX\,[%o*9J)bH=GT42e<dtW%@4hON)Br_4`49t
%eKGj"Z7nsKHr:"d`JEjiW+c]1crl$<eIlLI&IOo$mP<O'C^(m7S]Y<sbS]:A/2P-OlQem%_;lFF9WDNYlsRI1?h%+`dea+h:`_d<
%d+r\n2jGs1d.if_QaQ,:X"A$q`P[IITYWW)YCX?F9!4/u7!e6&\7,nf.'bYE)@\kN8(S?<Kk4LEmYkQ=OsN:Sa5/L0WPQ.?kfBb6
%D[$R4OddNFmLFmd%n=L!`i)SJ"YoJ7&PH)?CbhBDG[A/Gp&HgIBJ@u!#U!<^POFO<L);pP7mA>ZQmXf>[bVZPPinQ%L/7=eMZk`9
%4Eh[DJiS=SD+?!H/a9oO4+`"SW'0-)UuLK5/!D7##-)[ElotMRfQGIQZ1Q@C[PL^mi^P[hjF`Tejn42bgS2l_(rI"9N2BJ/ECca"
%hI$LEi0>OYjGaisTfJ:H22DRVG8&FW5&m(889AA;&8)<e-q/+OJ1a?[LBO60DH7Y:B^_5V/gESpdWqm4+Vf=VAic+0=s#qCA<PqE
%gW;J$_h7U*=s85oI$IH*EZR_/G1>%^U(*ot-or<eeJ!N'M=SWr`8;Z..u0[TkA_/+m(l%i3k@@>0shDE`CaXTH`D5TQnZS&i6(Lu
%DJBcQSm"h6.r`SgU_[W%T"fNsNg/g3\$2^lmi\E$^S\)?S>MV?VIrO8;^GPcRk5'P'd739in)Um7X;Oj9'J"a<he;QWBoa[5lt24
%T6^FK@Nt$1K<WIXE!s\'?n*GKp2"(dn_c=\_SNBQMh^u-(!c%!B*dEjf2D:_9km>Yh20na)CF!2WmUn3O(AOK19tV#53*5.$Xcsq
%KW5G@9D33?oft8]k?-QJ`-n9`q#^^F*eX)m3&g>W.Q4Z/'VJE^A=fE:7:lLRY<pg3V?gq/3?Fac//Z)Ca^K!W903MGT./<Ka?E_n
%N'`4KBhK1\3f@6pBGn(qmFB3%rSfVo%i_39]%);-<lClnLqr`Ho%'AIQZIrQ=[!/Egb_gn69tQ_763LZ>\94>`AoW6H#o8/)uW[+
%a;pQ"K1pTu3'l@Y&8tJ>qd;Ol]DqNaaO`cffGH]5)oiNrr:AHio#=O,k#$"m42J`6[pVJ>.ntX]532nZr,tmQ5tU%&eUR8?FoZ[E
%<T82g/@'K!^,dbYq./LKAdMAZH>n-";lR!.GlcdgFK"7h:rIas9\<M:;]6:].R&B!g0VJIa.*pk^r4)FO"/@Nm&$E/A1<qV=GqH^
%C(tG7-*$qAMc@>cDd\:/6"KDI1k9WYF`$ebW<:]"N/Uo1,WDM\[-4HnG;c(.9Fhj]Ve\%RERLjb@^O"aC@$KSWGr@RF=*M:&fHD:
%V'<N1%i]GboMH(eba\4&Z(-0@A!/%mluIl0-$EUOir'k"cRNs.R9%J5-@uLmgTRKWCgAEO%S>9ZXh+6$N(D[1U"`XlCiap1_]mE&
%aj&:?jOT(&OV:2JmF/O0mdk<WZGBO(/o2YY8>*KSd&W7e?bP`]l9VD8N*g51;d&hK9(Bk5W^A!a^:eg0*T5%&rnJPeX@#&+.g$<#
%'8k@)c/BLl$g!`elD'T=ipkH)IK%[9'uBM//Z54seq6jP.]>V&hDC;j&t>-RdcJ+R*f6WXC1_=Z!S17Uik&DBQVoQ)7/A<$hh&VV
%T'Ska^6Ck>HALmJ65@"Z[=NS_M0^`Q['KpVPM:Vljo-IqPc/M[Y"J)q2M'>b+PP\I%1XM0od-<]Y/SJ7b>#SZfSngsippkAZYkZZ
%O^hoNQ_an-\1SQuI1hg)-;ar?C#!a@n^Et<U+MOHOgE):hS;ro3&<K?Nl"0CPtL<6m?$)$6AW*dR?Y]KUnXTHZ6=l(K%bV&PO[*X
%"#J2;Cu35G^:LRJ^:j^2;3%LE@e02oJ:tK_IHS,0N+Z0jDNDEd:S":6pY<!8F8QK^XdAL@D#$1H1KRQE%JLr36#\0h=_@VO0..gr
%B6n`OCbmgNic`6dNg?NA;@>WAI(UIm6'.m\%&U>I5r;eG1Qh%[D24HZSrf%PVb:7'mGY;)Jk[Yr/f-9=U"'3P(qEF,^@]RXD#'Bm
%qn7)ChEX._il;Z-:+@#\K0pihQZ_K9fgRJs2KG*TG.ug/OHP5m-7(f?m$Q"kl<m*7/@'/]d=PG98ElkeMrus[H'XqMVG'Z'K)C4X
%EiF#b[97Uh2TX@)Q[=_Qp29a7mjr5dX(1;=jMkBl:hFU2/e3'mR5J?]g@=(I/F0Qf]M'Ps!pN;1oI:uM1m*8M`1%K-PN`Wh&@^Y,
%N]8Hj:GUmuHquf7+Y0-aGE,EJ8u3tS%UJT)f[dn&T/LEdCM]DLo=<.m<7\bV@@?#oM><lF`C!!AD<NKZm^]ZpOc7j(Y+^j]%2&\`
%5qmbNg:C@GNjcEu(lgX-6o/P_\t4aOk=Z:dYL^N%'XtTCN3k*V.rA>/WlE1#;e4t,5b3[OA6<?a;0E6\\jeMjHaB?ZaWu`"'/7.#
%aojX]8]Ys+cq,Db)FQfB54/`KH0L=]Ya'b07K1]Fr0:M)\V+VE+d#pR2C5VWIhKmPq;XeRV9OO]\^G4a>/"PP8ngdcn7`GXi<t2L
%?O3JRpc1l_7q:NJbFh_5ql%S`&#7SF>@e1",\C>r8?[51&'1W0U\#bAS%"akTY]$FaibB=1)6r-a3HuR*EH!GI3b6Rdg^512,.Ye
%oXd]R<!@7,p369=!ob#mW.k3IrK[<d!JI>tpC-KO1(PK/a^lHai(KV#L?=Z>9'iq!m1J2\DUZgGKJtoINgLR&1m/'WAsq#antgaT
%O#t#Dip*XGlqs1hk0bBuIk,5>=5L)Z1[@R.U6j>2AC'[2k^Xfk9'rXD:f?(H9l;Qi0:i.nH-h"_eT9Yen1n);[`TuC:@hAWImLbj
%0Pj8$2YA]t0t@T5)I2G#GX\,B'qE:Q;5#L_>fh]>o@sX/"OZ!SVb?/<oUU!@eZ4J4qOCiSRup^3cZUVZ'9hdR>Q_T\cTZlAffTW:
%#$9knW_^FOK8iq<a0R.rPK(W7V6b?9=m`[URH_nV$:.#H8_rouk.1QT1mU&\Q^<(ta]?]5b2N2C#$k$L>$%:@6Z(h=.G\4Q#+_S$
%dH/n5EG]SuE,.tRSPTJ]hkkM(nH;%^ga'SQq68a$Z?Q3#,AQ1F"(=j5(dE9soeXpT<"hhAm9Z9soa93/-@<B+dWgZ_.n&D-I)Yci
%;I+-p\DC)$-hCle[YC-r+#duNOmWDqIuG)g'rAu"Ds2.uL*2%E-"_#='ZmDN/P4U`p<Yu+#kYFfFg;t#?;cdn+'o\!qf->c1b0eq
%B#&7bgL*V@\%$\IFOfjEkZe_*YChJO;stlu8ZldHi@B3oeed)n3-dk4]QGu5(LY)(rV]roGb6T'V(8C^Y3I6tbV`jirGipfA[6-\
%UbOsXmK[h_1KD3EIa(FZA357qm@2#D7#lU?`H.lG;B*c5^/a=)l*QbjX_-%"8J;U`JF44/aB,@d%eRA]Cr%Zsj_stSo>+HsktCgB
%jr&gqCJcD,P)dAR(;k/;YoU6iQB<V3@-e7!@V)b]`3P?qUh<=U)pY+)2X*h=WHh184eNXt.;b:;697&HceRr(\D^/`&Xhagm9Fu/
%5n:cB<-(ma`Uj4MI'4chmCmHX.]$qJ*7Sm#@/oAgrJV2_X%!c$mkVte/FJ$KO(L^`kNlRe!hqh3fLN,#L<2$H;J5;Y,ZWUS7D?&2
%.XSFg=WuB?]08=6<"=O\_Ma%(\4q"1Y>kmULs/JOO,m!&%RuVI=hUrFPcFNj_1ebkKl>`:b6"[n(\dg3p7l_O)\rW%J@6/nV9Ah6
%8)a)j/rK;`@3Y<MGo7^C`gs&q2Fh$Jn3kU%>!93HY+Z4j5e@]:\UDSIm;AUL,H&\:IM3X2oK=l3nO*!?GX-kSAGZdEj5\A;r^u=G
%l/k^%6!Z(_Pf$%Joe(+RQIFsDAd**G\>&]`mcMqIir0SujL0hYj:?VnnJLXd`>&=TR:ug;nZA`>R?EjR5\J>.Y=j^_io*5d>M14"
%4ObE#<#6r"aXq-`0HKrr.&+Eb3"JHWBmbib@&m3W\11h!\ZMc0;4#8U<<n%;5YntXacmjZ6X0E8OcAq467bW2f]BHUe-64.6ZWQs
%JW%r?.^uRBo^JG6mnIGdm<4=@2strt)*d\,fG4%!=`bnHhjtY6inKBn(XN\!`CpIaQ4<=-qG.5re<qh\G;@V]Gu(b'r,D--_npt0
%$ZGs,3k]Mdpd2/'M$Mn-p]MsJ\.MMUk(W]rEWl=SH3^g1IU.I'ql`3_:BmUQl8]mZ`d-b7d;Zr5o^*2R]g1KL!(d<R"*Y8DT^k#]
%K\1uf(a@m`931ZQ^T@0[H2;PV+%J">Nb!,?54M@fn6$;D?Wcf'K@k3qol/jc$MTD&B+'>//IJ6NdUe:[)+)+\=nh%!kiL"_4jV^&
%S.Uq>)o0KZn-2LJL:Ou<gc25=9\h*CnDe6#o8M42N$4PXp.PS7C2n-ds1c3^4"?%kN+=q45Z0pBA-`Np-#e6jVE&88S+H>/>`@ZN
%#2Det0JbrAa2J;r-po^DL84*1B;Ml(hLts=N=--#-r0rj,k-t,&T/iucg>8A)"<am$Gu?j6dl'nM?+EiLBi>4MK4'dBK6-K+UYct
%"HnZt4@9;i)SOjop%6%W"NT7E3h6>B8C7hS,PW+lL]Zc?THKC;>*=kBS3RRqd&B,0dQn26GG#&Q!2L/CDi]N_)3]U[-tig9NsRA-
%#R;MK[j9#]A;$=8P;LK,cnQ-G`uI6J(Z`C6La>L@mD88l(O6?94W)2d0`_lI&HO2DoCThU5[PHBVc*TkiqWSGM4rn,^]>AS6bK)5
%M3QbIcNC\%QL]uT5_k3CHeJR?0e<i,!F_)kQj3&3i<1m2"PP&Pdj_$#[^-5Y[mpQ`)8YTH3>QUbM6R1[2[*i78=LG=SD0ON]hD*6
%#nTXZN%sNrlaVkNaaf2Sh#8qQ@(Je&;_Z(WNJ`;0_'m)e!"s;R$f%UEL![_Z72kY"@>ZcjYhSQ^B0*`=#Z)/@"bn.MW\LGJ,RMk%
%PicD'TJ44Q[&8Zo@c1!$V!Lj[P.;8EgZ_OU7.E5T8LlHel$8`+'G#><FL"G83/0^qcno^#Z\4A%JD)!E_U8kSp)k728.ZO2jr$W4
%nq2o%bp=6$B9E9/6K-%3T![_(Jn0ChLi+SlSJ@9@"7jfdN+2knkQ0ZT@.=4IJS031#&AeToO'@T:_?0m4Ms-$Qma]q0M^[k*Ujm3
%,]0+8FFq@2@hIQK",9J04^*gV#F[?alAm%?/HQoEJLkI95_eq9N"POC!Vp@6k=i>u(*uBG7%b/7@"J4iO;R`],cp6L.5d-.3KGm\
%<$jV%6h!*DE&`cZcj>^6FHco.KeoA,Q6J:C!;%'fK!N`:=R^?+%jh^hT)jrE$j0-L&>XiRU6$SX*`3%jjK+^e#=`Ti`e0f%-lRmM
%C&e6j(fn*Z>_bRrIE"E,N@c[u!JY'c/d@9nYfa;n95lFHXR[K!!'A;1Pnu`!"1X8%_4$0HN+J.>U)o?VkQ%hc6mgZWO,T2HSe&3#
%VU<7;#Q[_IjamXHaWoCm//KQH@jo4[(0L>WTU/\&4MYDM5R9b)TIVcj+HG$YE#<s;KuYo!&kA$tUibI))6g7PM+;iWAWVOQ8[$kM
%irc<8OQAd(.;oaL##'6JWnZdG+q466MVuSGS\SG6`+ldq^`ip"2Ge1^*g.5a&-=j95RP.Gnr%Z%L)@_#"UKY6@0h>gL+N@U!jFs$
%DhUM1R;f&?2Gc?.3b/$e>VP!X:nN9T7KP@]bsl0pJ?!9[,jEAe3'EY2&<\^Umi@-.#Pg2Q#Z<oGe*Z,0\oX)\Rs*s+A<*aPm<#^E
%`,a=W#O'r68E][VEJa`R@7T#6F:JJ(DeC(r((l?+JYiuZJeb,lSP]U3:%hgCO/?;3oE(^oIVuY/"Ip$::^PVr+MS@4+7t=Y4T^;+
%PVB3*BPF(0RXgpa$h2N/b+a+tGL6OeNKft6^^!\gZ82o!cNb*!ZJatT?-!rbGY#E])_dk.0+-,5l;-oe8k5T55icY*5`,g$/:_^V
%Bd?*JV[#&C-R_X_h+mH]'L\6@'sI]Bd>e=(_2_=n9+C\W"<!2hl<kGo:I7q^R4$XI^ft]Q4?e@OfTmk7`8Gn`c4qm23h686aJ68&
%-:r/Q'\5rD'G,1Ri!F6l5OPe,!Lf)uG'8YgTF.3k&L`fa3fohB"Y8YWqG:#2A!#)#ONjGs*tno5a.kW:l+uN`<&F/EK4,8N0GVK7
%!(IP?(N31[1,p[Y[R6*&mK?r"R0^T8,ZE%j!l[D]#_0[lJU2r66UV#OeEOf.7)7:.;8<I+a&%Wr&js,1S,gNbp/tE<9?%5E`L[dJ
%Ma9W\$YDlDldI&NMo%_53"0Rk9b`9G+?GUQOso&e?9qm!-\?8h^Y$U:HGIJh"DaDY[hH]CTM[[C6*.n+b2pbu(d:8s7tmIdTT#b'
%KH(s]7t^%q6;AX^8g+]sco='/.,K!>'VpX8DfPVoFs"3qll:N\HiR)Ai6a5hJ$?om*#o-XGBtq[%'n=^ggCs7"J?LJ-mXL?nt:b-
%\2botSOAFr/A__o%>_V*3rf9.JVZX3aBL5j".+b<N's6BHn-n("T(IBYRP[b78SUX&0skU/2;9/Bp?ME!?dMii95a?,"]YYpZaX?
%p(+4Q?l8YN$Iq3\(^#8FQj1ofMtI;&DkqZsHpaijqQ[bs!\;pb$+gkkrBNBm!HB=Y:U!J?f#9enqUc8\/O]^K+R:%k]Ds[fO"qAV
%/BZ.U%jV.&J9K^-l<su?,=4)C1E/`V$p"tE(P5&/&;]>^D@?e9,&sNk@60P/*X,=2cjA!KR6WLSoGl"ph&[>u9^DqRc6:4/_*0!\
%:$Q:e>"5a6SWK:Ep'kJ!?mN\BaD.C#LBNTKGa(*h*>i/gcQN]$!BGC(JO&f,lCK'dGcXHB2M(5?@E9G>NUM#"4<aq?CI*cq%0bN^
%T,V^D30C!?:Ugis'^);%Jr<-a-A!2]Y>IlKp;G\3"0iS(#dp?.W)!jkg;m$IGV1r%L9-a#3,]e[UF^m?rPGNF.h&t%</tBL5rQ5B
%&QN&K0fFh?L"(AZ@REIMUFaWq+<huF%5!Bp+R_1>i/&<UALhqCm<nY]ekXgnO9`9/UTplUk7+J_4u]L]jTh$l3RKTSm0JFbMQ&&c
%=s<-N#>qFA`-<J@Vo'HM4+0IMOgs%)[VmRc[ei2W2#'5Z)^g9ZThNKG9lj]ci87oRa9Ko\bTN3p3kV/ne)uG,&`ReYDrYML8_L5N
%nf5rZ&;*PF?-rmD5kYSm!#uK&$He$XIDsqO\C`8D\C?/RNo6E=]5Y"i^0kU@p>X4Cp`0FT6>eGu+fn,.DnpP7V*PWT2iaZ7Yeed_
%6D-]?HIVt-n*PELac.geG6.ONos0)NCs0q=;Yt"T$nqm#B4p<HN!:tDoTX[g`cebKG&%onpWIV%Jdged.usg[N!0>gh:8EJ1J&o2
%N6fBjLSbp,i=I2F1\6%A<cPW%m,QL<"b1jb^%X%mP<8GP8F^r@9<lK+AUU6l)a&o_S);TG]m5W]2Ok/`:$I.83+]G[Bb#kE?D*.!
%nK^k?RP(`,d&+/g)u=f$da1dN?%6lai6noVo&8)c)J4b?nB294OppYi@WV.MVXrLc^[3kM'==6gEA1<a\5J2Sdu&&]oT:0;qS446
%9@BFcGY6X>?#0jH#o^bsW>A>C]_mZ>Fp@KW)+S]?mIjqb&QhfH7dXL1I4CUEEpE/G[1/*;Cj8Q``!g6"qWqtVWg^tU.RX&$<I&*&
%YrS!c;Vj:%SK0QrH0!b3n\jSELIsK1cZM%//A*!a9V!Dt#*Z\\Afe8]pqte(%QE9[[)W36D;\$7*V,Eed,FZ_ILgks.%K6M]=@jg
%78<@k4SI_!;f;ncLXUkceoR*;GcaksXess"/A6SLaQW@u3qpTM2tG?14UA#/X41R,Q#:iMdeUtI+FEhIK1i:k87FJU/P:iLm"TjD
%[S1%`I4Wi$F>AnW]$[oV"*C"FO-MZ9<Q9S]^S]^=W($-OZ`hm'r??BO?_eXtMj09Ucd^P'I!$GDP^ANZUmL"?nf#MSUG(YU%&aR_
%'%2JJd_m9R?k5cK/;.gDcV<hd$Q<#FXOkB$1H2aWI=8,6I:JlX]<Xuo"FiRr'F3M-@-E:XK2\T3oB)S4/QB^Il^esC_(=S^b%sE6
%M*d6V.ZkelMFYrl1pfJ,5H,VsGUf]QHoi<%nt(PD%D[=)6WD_,9fI!/@%68)N,u!_4k`5mg8;pu^u=QGNhq8#fa<=kD9/13oGb0:
%8_$o_,Z.&[6o<S?b@sJ2XCq(1l[sroVJQJ7nNs.-NBf7k2\!JJkAt3"\kNc?MO`Ak33?923$D<3-QN\kMOhZ;@?oN"jUq*@:"-8F
%Vo6LEm-.b-n7..6K`te3olN:DVNNVD3c)dk0LO1lh*Y,G5^+t_=c,CjD"t4ulF8o7nq'*j>R(&g+MInDT_%gm>ZFpQ3ORWd>tS14
%%V)-n8"6A^4e'<h;!jph`XOH(.coh4T'$1XW-G$V>n%0E=2>XCO9rX!-nG)Jkl;(>1)Y11@.:Ll;*N_K;XMC@r4Map"]$X0EafVq
%+5tR`nFF-6rCJ2?'$_Oqr`7K^ai-Zg5t&YUgJ"]\i7@qKkABaP*.[f+%XL2s,s,N&eQg.?So/Ygq2pG%6.ZdA;>5bDIPt9tG/!GW
%H4)mT_0X$=fKJ73CZKIKDQf'[s&-JBHDC),_gtO(DXi+jrV6Zj:Z0&&mmC8,[M#-ck9Jj"3"47aG8OeF*nl>Q4mN]L"#Td2AIh.d
%)rmY"Lq`V'2P&S_kt+#;/diBPK-;#*#2;:'Xo6h6p'EKXf5qMt$uO_q=1?MBYmB",7+6Wom*^:!S=4g^?(W7`5=N\7f[u^H2U<6)
%dtWqJ>9EbPr+;YP"qPiPU6gS4R\te3XtXT#/EJD(Co#c!$d;1&Cr3/=+<)ZbQ7_%I6nt4XB8?U+dm@U/po9"Y]t@.1=<>Tr-1u-!
%6%hfkNuJ3u%tgfU*MCc,3TNi(7bg+a_pNS[E`lJ\1bl=(!e##jIqmnX<\o4B9_5sU3NgTb^q,E>@Jk,sE6ciFU!%moaQP%is4jL"
%@(=]Cr8lltQ*opVUSrZ=Vm.jiLR1VTBuQlD93H4.LC*tg"(C''^_?O[TImT3<\d>W@5uoF@="Vf!QQ-T9Ot_.Z.A.3)]e5[I@=AS
%S7chYE.94B6dqli9,HOjO)'\%<cLr>>0P/F5118dh1f371[+76F?rXGXDX7E/&lTrF0S`6QO:hCG.?tOD`H?:XPu`9"='-E6P)g"
%Gn2,`aLRo6De9)/T(u*1O]j=UqJ;_"<kKB_d6Vm:H=HAnLTsq00bI4,MlD0L"cu]ma@0Tb*hL\GK%ki^(pm^j(E]Z+Kqk@'gX/lr
%Xu6Jp+I)i@>b;>q(0%,g"d:-4dA9j;D2tSOe/\,J;cCL&RMo#&L\=e`]jE]sYni_+d<d_4hO]5.Uc0MbDlM(q&bP+QCC''3/s7M-
%-4U*:':Z=K[GugPN]#DBM\Fmb/KF.1a_$^4I`6D<D6'3;5%Nudoj]r4ckCdM8M%Nk"fE'#;*n;o9\tr5)7k=b%c[hlU*sn-f5dI5
%XYtSO4E;J]@c,AY/bnNY_Nt.C>T:DgKQQX$;-ajf(mfB'[RMiI5in:O-Js8qW.]=NF_e'$hK!((,L3RJ>$g^Gf=`'Y^p]g%Vf70_
%bG`nFQ9>IG[$ks4=Z5tYW^TgfHFOH'=+r0#4+ou>FK&$?)U=&T1cKF@'HCM'b0_cRK/2>RIO4?o0tMut(4PaG?T(C[=T\c%Ku;f#
%0%G&WoB[0?PYQRU.=h>2!C>"M+ABDoFM*=Q'/.cO;W2>)^%e-$\X$a?D7M+"l;6r%2InpBr5FKXQNL]A=uA2K:F/oe3ZStnNXAHr
%*W(X7T>0c51r5f*75`%^$fZ"I9[UoRc1;0IoI<4&6Y=liE7G8oQt0%=<Kcq+Eb^_*:<kVs5G"`3/:0&<jWC,loU'SVk;$B>An2V>
%=Y\cl%#6lbU>Q^p/\X[P'0:.UDDmPC&&!0OiZ7BF$jSF1"0&(`S3b>=.(u]QKJP@`Da0.;L$`6[OYQ#?G3Ri(n?=](n:582[29cP
%hjiEQ@:Z%#Q2[5iaI&D>cEG.,fUlOj)%Q7-L4bQO>9EbPr5Qf+85.;ciY'3'Pr1M,U!,bZndBHYM*]\;=[#9:i%:,`6W.QGBU/bP
%k-NQ&;YZHm(8c\$$QT[JE(l4\fMoa<56hfW`-l-dqY8jtqe2'*`[(c>7MXaXbf3>tP;U.gG[u#!$*5^eLEt6HCW4E7!iM0`^t#ec
%`O"%@&Q,>*l/f.[nLrAlnE1b)i-N@(n]8eB^I0,LSjL)8_$[MhUK9r>`#_>^R"@-5qI'mRIO4&BE4/Yaed5c6!sI$afOfUGo=mn4
%P"]8TB_3X,m@'>d^dkBA2<mg`JPb@=D@@$@X@fmUkGq)&eD/p!AqV2J&!+AcZ49?31(Ej<UQhNfWb]1S*T=VMaJ*t4!r2Pt.dj>A
%hE4BZn=^U.>Gq^n]s1n!-`k,H&?^7b2fO\/Eh'%+4%;PrFdf!>O1A)FK3,"*O(@<g0*e:[?g5"8(dkJ*luds.8B\oLIAE]IVQX`A
%dR#N,[TH1RI*-(%"oV>7c"fN))PV>cQE7jCW_#d\`FCOMintPdOXGmfQR22J`,sdM2^$HfgtLT%=L"0I&O-G'14m^c"\:<n^RSth
%kUR`;F<P&G'cQUSIcYi!KTsr2Hih"6*L^>4e#GpLe1WtHn>;S@?Yp-MH0-qd#ErouFuIG55\e8BpIs_@9CjKR13-PfpNG9?e)tpg
%lBV\ZSa]aRCHY</PCpQKS`+f+c/fC^@2Z&^_Sbl,5UBk`I*'oC#08r/c^-R71,9e`mmg;8;lC&5qLQJbSu[:%"Wr.u?h>5D"`]_Z
%RIsVZ*Ynes1i04$U&"\5f_-QB1Q<$r2I'?4,OMA[>K^^JO;/RPQk'UNfHN\-A<SsSaA>?T>)W-r:p.#mo+;k_[@-W97><qe,"!E[
%a:RVS69<`RI!N6mI<!-:1afspSB":(nV@TJ[3"&p4Yh\ApJUIB+cJQjonX$M:*MREh^.'10$PX8*Z;h=CDsci9p%=`;3)G0nsG=D
%Guu:YI%iS//M`P.1G&:A&-b?pOs;`8_9[!?OWfdraH2$UA1/6FJ"Jg<QhO>Eb0e]DBCFi"*_quD/jAQR.l%6D9%eQ%k[A,ZpWbnt
%A"lWQS)8lPMpI=WSWQ?'q@W;E;tgrddr>fXWG6%%)t0Xp?5<oX);lBHgG.o+[g_bbrRtIq0Gb=;#M'o3"$B)LQ_1EtFD:u>p/E@u
%@`DiVB8#[KcibO2i#ZnS\:^+SN[H1'27f>6?QITYIjh(po#Moq8B<aS9*9PdhYq\sRGSK0lPn4#f'hbq_mf=$2l;VGU8RerGiYeb
%=Nk]24*)^9;9bg.(*"[MN6)OrChb/;RG[5_e[R3Dq>J[<-hBF9[B@^/=X"0oC;\P*YsbJZ!'Rb3T,dtX*K*B6)]D",2]I?a)J(Wr
%`*qL8EU^8%nAl^YGO*^b&;B96[jAnSp#sj[3(T>d3_RC#gtO#e@!>u76t$N8Sjd(uD36Z:4rSWG%/Q/?1O/R;_Wr-;DA+W17P@]Y
%@GV^gYaH\_>e:LCK#LZ6\aIZUa`(kd>('<X_rf]I&WXAXlctnB%h%E(IFVI-F#n4$G+7&k.&Vg`;!4QE#W5m]Z[,+>'9Ic-Y4`>g
%HjTZ^mpPUoEU\#(,_S-N5`7EF9i[CR*/E8q[;!FPg<Puf7Bl("&\edZ.iYqp2BI$j)a#u)bAIm3%Gouhf!A,a1$E4Oc@P)e8Vf8.
%Zi.8qq?5Pmj"Tr3EUYu:qRrNK2f>+<FA^F+rNSog$Ip5VdmTBD+*Z9^'K/q^GHG@pl3-^\VLD]I<.S+DMrh42TIGW`*RGcLZAn_Z
%<(n\p^T'L4'8iAR4hNH3dKg)t/ks;.KfY6kNS7EPVkSt%WT`8_.ONLheDq@h`%p\&$[X465s>!Q&L._3e3omd%e9k"L[AXEQlV1%
%=A<iXN=Xpu+-$$qF"5&oBEW.kO<'>UVX!2Jk8hSnW<*!3`(HFR)NL[0`_@r^C]pW@c(Bt+SU*C;o@uHV[$u`lG.&ESBVSn"+a95P
%"E.-:KOh+:1OAK#on[h]+lP>l,ohM\Xa>=O0bfB((E#0jPUncIRKfS1ZpVj,r&#G%AXnCdN(YDu3LnRi/TY8'0@(ubRZ;WZE='%_
%m:_osf!.Wu`XWTiiFDl<(OlP%'6;a3c!kL'jJ;IL)b+]jc5:"G`R'7D61M21fuFIFZnU)eiW3i;+"Boc&PB,]2.SaXo>EI#%NaB#
%,7e2G8X_gVQk,=HU6H,m?j__\[<q6LA\NS_);GPR41&]V,UlYM"=[&!jnWXYNs-T01Wk,-/JK!"5l&tOmN;NJ;N]^(ck@U'$JBqC
%\7CB"o0J:rI+(5QJV>=-Cs)bifCojKkiqr`cfeOD[j;]c2Jm`j/ecsV()7)*@ahj$A3pq[?I/Jh?O-?bDn6V/b&E'r63EV_Tk=*k
%0!rZB/p'MPNWa]1/p'K]CXMMl\^1rF\^I$lc6"_3aG$4D"tVZ$@*+,rDmrtbL\Y1g#Q&r.B'p-+-5S^0)+\A;/e*MR#gmE90iM^L
%XRV*S9RDVd7mnhmM60M$4H=GV?:0j4igt',au"P0_QtMnV4p?rjQ4`c:pMUkoA5Yo<0%:(:)1!se\d&uKi.7*F;,6G*Q>if7u>T\
%R)640&%oNMFu.==7Aeg]2k4BB15i!(36:D6*]>%XA#?"$,JV9uUHEp4YG:"hOM'`*;#mfT&8EWgVQo2,,0nT=XgBo!Y*@T9fsL]e
%OQpFn.-TAaf@*G]H0E\?L(^V#FKbKn#OKp%,NA?S?Tt7J[X!;lIG;Q0g3a>A?]@Gb##:5G/C`iFmjC5m[nLJego4fOd9blcoGlD-
%`#JKrq$pGV5sa[@*FLn*>;!_rS]3UL=k02%T`+t&>e4Q<DtMCMp*8G1?4V/IdK9T3N,'EU>sPeh.3AB15'4<jj4SOs`k&Mcl@H`%
%Q,i-?*d2iPSslZ>Ajm4=F.06C^!=ZYDYn25Jb(jkZdd^^<569#"#o;k^lA3DgL'ger+;4IBm*SJcM7m&cr$!GWOl+b'S+I.[1=lW
%!UKh3%\JWo4uRAr3KTHUMWNWpr.NEH.^4_3IR7FsDtJkl+.mn++3QKglZ*uK8.\;p1g4IQTRa>?b8f+HhZ890.FcX>:rnG6PZq'a
%mi3W?%eHA:%pLFfO0"\LF:/8+gm79KKn9Bi8p\oQ6pa32-oLIu7=lN?!^R=(3"S%mjsp)0CQ*V%UV\+$!ONo]GWUAWaXMZi(+aHu
%0XV!U#Bt0\5ao4BiD2M$=-fq&MZ_4RcK3p5\LbQ;9Lbrn96>0H!;[#p&$2WSBJ=nUJNW)S5T\K9&>,=8N+IP_n4T_+ap3M"FX'Iu
%ZTo'k02@cI#BGn6")W-KJM=o=Hlkfa3BW20bE`?cO4NlilOU!(M088@&?o[;Isg)epMD^1hUThj=Lod:XIE<k8JWtTjrIYUPq?-c
%WKJs0,RMLKKiup,\@+qcA[[fXCQb4`=M9=.oeU7[b"[T^V4k$Tio)pYE7UAB>U*'cWG92;-@CoXM4q5d*TT%K#;8da:Q/BF$6n=i
%D7j)u#Z\YWI9;b;]s[YaOFt1ml!`$d4_C-.YaUbW)*^<7?a!%AmDe*`+W%%N&";&h=#@P^HFU1-;rc]e`Ka?)Ejf3SG,^Y?7_#@)
%5'6$\P6@;oM__b,XrQMVHob)G(K9CVBr<\^),R^*mH)b]+c-oB*#7VT1/^s^7-9:,"&gGX).[92qT?k#H@U356WEf*W0%!WGIb:b
%%EZI,ai]s2-%%.YP@)1_mVE=]*s`Ve@Rp"L"f'G@;ZWFuT"a?p/m5[C="8ZVSC$&>HjVE9PmDd%3",FnO[1#,!O9G8B`J(jr-AM)
%;sm[*hj%$^TcG3d-Wl'YbnN>KA.Zg6D`FH:1>u[&j;[*RG#>BgKlJ5k49abo0GK@;M*8Sm8q1Sp>"p$@93mE@puSHt0t\F-0jMr<
%C`a]&qihe[ReWQR3]HD-jpSOr^&_I!M;u9jRDAH4(*;,=2tOPn/C9S+i/W2piYOTt90-?o*&Q&?Z8ui^_mm?*^mE6@p$U>D#4:i7
%l.5pdm(QQr#5eP[kZZk?Ja*hL"hWU@ijld#s#YV=$AR(WA(9*()Q6lsLABAJs&skkQX[MUIW7I!(,rb81lK3$/2Ce?Ea.:s]O>--
%CBp->8%5oIin!fmF`$;PEP8bj1COdeoNH%"Tnj;._``[\[U7)O['i7XHZb5k>BZr4/NIpEM#Am45h]X@pZ3'h3Y&i1Gcih_.kNF(
%5qXa2UFRi/M4t8$]7[_JijRYRpph`3SDua89aQ4gWQtj(T=J9o05:fe%^g[\R"o0RJZ:,!pdtc:VT2YB`Y"WWk8.HhPmlq#QOCCP
%PmY[Sjdd+dca,Z`/9([?WN#7FK&-<h#5UC)Va]"r/5@XP-Zu>M'!>3l]'6#]-*$)B:js"H",SY<i?kALLKhpK'YF"s0Y/^0^b2=#
%ktWZ2H]j[iFf1Jt%^'[VL1*\g#P3[h4,cT21SRm@%C]RI&kH1)\XO(27jY-9K1`+uS5SY1AkM<\N^0A:Y1";#&`T7]r`JUpC%=@S
%VOJ!iWF"k_mdsBfRpPA7dn>6,0u1EM9-6@'(R6!u-XmKAVj@I&F@%f_97,i2VX)$^:!E;WU`7SCV-GURd.C&EAXGF*97_5Boer_8
%54n):0a.l&&4T$jRY&FQNf`8.Tab)d;fiOq"..Kgk^VMQIfAl_3To>Zp"KA+2fO1g,]sepZHO2u@tbRZCuIckL&5Xf4HUJa=]k,-
%jVu]rj5-81KZ>VPM^B&LpW0RP,-g!IB<GnlGcrs44"Qg+hQ&'3Umm3W$<lsYq>K$`ZqUG72+<4;U];GS9ls3UiC!nm*s8-uSDs"q
%mNRN0[YSBGA.;Qo-t0u!&6Ug2Zm(AJhN]FO\si&dl5!7hfT%@@o]YT>c>VY?*)cuk=-UXum[SIL5XNhR?UUH.*GM@e[l;MEf9$'5
%9>NXU^m`7>*ILea$^h4Q0W1JZ\oZSNfUR,0AB50'GB;KsmA&#2l-=!%KtNhWh4/X/V9d!YdEHCh1$?":YkdZI@V@Ke1**'1$2bl#
%*GuoQ=Ed^=))FA.b]VN?a\c()/_;"&Yp'PW(Apb_3G!N`M!GOLU+,KSr,Lq"'7Y7JY.G0A@.?[sVXmMJ0QZ&qbdm.(XKFX1,55M%
%f,ZKs+X\`eH+E?h.%7lsc#_LU@@-*!M<iGsc?JI0@EprtMqu^'7%^W$5Ms'uar]_-^2T@ihD"+5.-olkg$OEQceIKoJM*b]o,)>)
%ZbXJu=l;$p/-(t]gT7ubHq/dcLq."[,@*.R@8i/oTJNF0qm%)VJRDb"gnHCaE!E_O*>$qV"p=2&r%akrg^c!mQZg8Y(1hSH7GLD'
%)V(bo)T6)sX`ed8"`6lk/q2\ie-4c$bN.<"O$lg>N;Ld;DB?=)fb28be0pfk(O40/(HC%hA[m5ho)>/'E-(@L*]E_DL2s$.r0"L5
%kTG*GkRQVa+O+X]>9[-uW'3ZD!Y7<b!XBf1A^9]/\2N+^H\$s3]qF?.Pg.^ZR](ce\R3HeT6:+N:9VfTlBdsE(HAKXp&YI@lGVNp
%DrC?5?I1r90D8k!`iFm>H>PW"9/na:n::mQ[20Z&EDqYhDHU[Qb6,_6Fc\Ce2qlK+jn$W?FPtD0C/Bp:cMLjM3h#KQ1pLO47dUXf
%d$^$7>Q3>-=V$uN$\Gh45Ac#]>uU"nDnCRA:@)rO'`>53lNuCk=cYRif"oT>>'Zn`<A[eIl7=[>AgT*CjXs,Zf1(*,c&CA3+[9,;
%huucEZgQ'>#C#@SF7<"ESqkO^7nb26=.I+C'ba='@p@sNW^V&;](?!ab,H9@dj*GUc*hoj^e(Cs;T%:9@.d.PZsR$jR:Je*?J,XO
%^4^J_9m%J1inAHEGJ63F2fnEGJb7@#jU1s]^;t2HC%Ee8iG34N$WhE>\T,+GjE%9/gE&PV[pNA!"WP$=c.1uRF7me70YW]Y5.j>d
%DHlPPgP7s/de(&HpsRrVlL!>VF7q2iM6B_=jf/Yin_rH'UnZb69HG0[f/T5%@5N'"]oMj7h)C3H:EDtTppNf'&%"ok*:/hbE+th%
%.c6ou&IenBl#'Zb\@I!DrJYBr]?HM!%SKIr_q3D=e[1KU'/HuGb@C0E;c:]RhbBf:g/jWZ'QT\bMB4B)`PX;_V:#rC(\k5Q'_$@$
%A^X5[#s(,4r9Q-%'^r)Y8(7DGL1R5AXLlsr#9VF(^\JiDNDH7r<abKOG68IQW[TGY&@><_lL!U4\'^2_lKohtL!_dr[4*Uam(aB[
%TIKY+$$oopG+a+M9^Ua7#!%u9\j\ciPT:%+`VkmA'kOoN^t9s'XEgV:B`mc%cnf%]JK3b8JMt/gJ9=WZ)"g^+0d"(MW\/d-(<OX8
%MF4n0VJHr4)tH0X%kie_LFnB+S?4&M4+)Ph?eEOuHj"";oKL&?Fjp;AErpq*XU*\Io'C?"csc6gJ6XT;>2:bRmTWNhW>n4.^88il
%qZ%`7o]-)WI9OnFm^u]biC,'UYXKiCN3i_C=]TP>:;=HLp;p_=_7!JN9_/IT=[oKnVS1+4^lBUFi+81uUK0tPgo<oul9LC6P^&2)
%d1Vi_@aZhh\HiqpAAb:.Mq(ASQ;'9hK8+^G"2Q:KNh]n^IZSt)goW#C/lj2m$0=)+q;`=V2'cG:3VnZ%j'ZeeH$I`YKk<X,AS-Ls
%CXeRh`r73n:?_CW;r$,hbf1m"S:`qrgkLlmVQdG7B@pF!*aX57.9b0l1:'6/=#JFaq;eD-:tLlYVL+R[3k5E>HYfHI8,%1O"2?S2
%5f]+B!ZKqqOHc'Sd-+$a8;riq?N(/++D?'5[tgkl`O/;CL:b9Hf!;IO\o1gF+g33Z\A>a]_8:V`EJXKXJED^.Y/__gba!Hd<$Nr.
%\3YggA#T&5VHc3W^h?F%DXA0F3.)b3F!4Ct;JRqIJ(S2>:Bpf=$.COEpWQ*O"MroZGi?k1aD_OSe?8E1bX4lX/(6@m3$,CS2:i"o
%o_MELqKVjaTb]b4fHE_g[:/:2ABFq0fI3*_%cS=Q35g8fctAnNeZrIRUuNiYk`t:t_`BZ<VE`rlmV?_<K%4#8R9(Kjjn$,Y%[53?
%4oRL3\m[KCKRF^6PJUVJAXQ0I8)`Dq^P$(G'b\qj;POtc+(&q=\5[>2C=AJM4E&V#3R#r*D0Yk*n47[2mH"V6r)2rl*uuB2,KC6a
%r=fbepO7u$X05&ndShh[GYp/Ga)W06#P9RVH\AqoFaMJQ=m4KqlTlAT*9J-+2S?[:o#P@";;SqgY&;2cA)GR4[TS5b:5Xhs5->\U
%S;R?C\Jd+3gIXh-Eh&TKGS-uHG_i)OA/XnYpB%Ghr`..S#d%L;P^.OjQ[+-`Ximc6Q$Iq+XtBNXlF]AYQJ/U"jQ?ngY0[P-B2'RN
%bmM/^qlS5g@GMZE3S5E[DYi5*mCCROpE(2CRJ&fhE-:D*j'<9-p+^(OO>lY\PjEnX)(sb*rE%eD0t@1D2t.cm0-_oC1@!RZ!k.(4
%!k,@."#d7Ueh=ju""2qmfS#`1m^eh%E8drg1lM_lCGL>06t"r2]TT;?8d%VM=Zc9-N(_<gf;=se"d<X?Yd/o7qDTn.N?(u+$hb6-
%f!4bNef<I-'psV4'q!PK[`npZGL_WJLC:MZE's#iH_r\5QpL]/!AjB3kPh8qi:_m2$rfs'Rk)]r@5>$2$$Mo'(']Fk=71j8P,A>+
%?.CGN*+9$$83Ise)6:V2+(^./;"pb>$Z1e8VLi0)*"#jR@mE+,*r[)Jqcc_MYp,'bZ,4"j2oc7m%^XM&b%W-[7+CQE+bc=_JqThG
%I%W^HfWrd>E)?cfl-Mm7=1V"*(+[VK\n?_:n7%+1%4Bue0Z"/aQAScb-M)c!iLJ5kg#h$[@6!0r'%rDa4=lDWK`atq`1)]#P+q=%
%:FGL_WI)]*pa0ML&"JUOO8!*u_oJq4%s\8lPHgc[Q?@/*H,Df]iF%R4GfX>+@/:bsonE!uU4Ze@#5(*^ENLL9Doos@ljjlgd-P4L
%8^_I'I^.Zr;EhT]7&JdgW2/>[S&W?/-D)N#6GLh5O7Ee>f?cd96[U#n_(-&t`j9BmSK]-ih4`YI=7AU,YJkC:CD2B!B8%Pb^g/A*
%TuWULrL2T&L@/?6GYDBo_S[.JaNW8EbSa,'7d>oep?$u>p]fm)gptH;gihes%S(d-a?Eq7L*Z9$X&s=Bo8c1]VVVUqP!CZX$$J8`
%UKK=.LOh\S]V(h<^"id3AEE+H*qs[DZ.&G7hS==9i-sUp>28.$42Zf6D6tDU#(@csk1@$]M.=aKp&`%G-3-08M[OL96MHUaXP+r^
%_*&VA36AHb&HKo3&gd[9j`1l$P'omh-s@epgfg[^7kc\UE1H*<0Tq)dj)iV"(TIlU<?_MbiamXmQOLY3jh@V"Y<dZgio,USY?Nb$
%_)4*M\1Id;^mtaMkclUE^S_kK$(`"rR$RqpW!RtWSQ(!GCKG!cHC(NG!9eKioJbCoZMQs_!-lQk!!fP)_"1Gua0*F_YL1!ZO:QkX
%RWcUppL)SOIi\42p.qX4eC6\.K]D"0KEEb\G-FkGJS>p]71Zu$<piI6?otV0'b2jE:R5Ie<&h[NKb?<Z%VphOm\a#D\JU+u?HQ(Y
%e)coTk7+8`E_u/#n1Y.J[q2a(aCh\;p^g/-I6CNMDQqGnp$gtYJYoKY[Ys2NrnbhYQd(;<.M\pKF\UImXmB&K3Bism*aRToq@3?L
%HSlsi09J>7Wd<;k<KEQI$EQkIWAdgUS@X,t8I&#'!A0eMKViKnb+n*!MPWonS#NhieV&f3Ym8KN"Z;Dtqee]QAB@g>c=0U(`A:(=
%JZhC=#g?3>R'Ta4I-_$$R=t(875jKa<=bRqR\3)K1X!c:9Xk-LYFpc@WaLD#)B`9Zh,KfEl7d.X3r%q)ri0np2qD`TU0b]YSGnZD
%6fIb#*U47Y,(tYfa#C5P#,j*LFZ1ikm"=ot+`Cb\$K9p.$NVg$[0J4u+[V9Fk-<8!_m!*Nf<jS^;>X11+X5g3e.>lq&0?#*&9u(I
%,Pl+"(BW)_AXQDYhuIXA2%Y0g"A"osYX"j=[I:=t+ZAC;+ZAUuc[GCDn/GpJ/3G6!gB$D44.cdm/s2]#_"&AjA/@NF=keAd!\Wjk
%XoMKIIF.;-,*q]*'qebDVR:P-`I_dGRG8>cXH2n#3^oi7<6HSqVIS^`lfmIQIl]Ub=Q"-TK^18F*UHQL&)6=_5p]m<YG7J[)R^:6
%iA?U]\S+Jq>M;KIZcPN1B\MClc1R'gd5U5dKUO$r+bt._Z$1G<M1`Ja8I885p]k4,&.lADf6Q6B+\;;ohS=nog$k:\M:\Dm6A&NH
%h.-@6-mje:6`!LsoNKq@MAP%cR]O;8M\cVFnIgU(+)^<Ef#X/j,[iX0U0@$6"gi$2q95u*q@$T@D![6:)a:-;J+bhj3rq^?^r)6*
%jb1=L&OCrp?T_g.4s\;:ZYsb0$W+ODhJqAjlJQ)pYl^t;fo3<fQ:LNQ".1<f7GG?LQYD-FVD:d3@KiX\_$n#8Pn)$]?G>i:`K"e,
%E`h]]<X96G)(i*^[q,%r%pqKX9G*SYh/_Gc7QhFH1000QG9*`>m6XiCb"#Ej95[^_=H$D*/DPr\k\%H%.UY2(g=:>`GRpYN\]q%g
%mQsqbgP)_RC;&\TfeofIaZKro_dlGK7Tm^"8u4C^D7Nf_fo<)Kbi3\&Z@WOd`1.kG8`='B%WW^C-E;2cG3qb"o]bZ6mW`B-b0HSO
%QS(%!N6Ud$opE@TojKk-;d<Sf8TWbT:0(+mNa\^R]i%'<>jG?J,#\asjdLQY/5F<rYo?gdj=XtcW85M:oq#tcMI(m]ili+C$X'=H
%m:`puB(rQVbh^>93XJSRFKfiY*bt/>$A_.?,X(4LKAdLM`ZS?XnH9t/VKULb9/ja]lhXIF=l\?/$+utU6J'5F<Qk_;Z@Ufa\hOJ^
%X;kIT*Um3p@;=Fp,?kL?9<-C?55][0%rjQt$f$ZZQ?:XKBO"'@K[lnUC`Ar.VhX+#;Q$2EM*4,mgKd,+jH#W?!r#D[[pg6IMID_s
%:f2%3p*7oPH0bqNK#m`o0,.#[^RR"O\EmX;9;<K@,4Js]"^Ztf#kM'!I/&RYA@\ESc6>h1gDIRle\8eN)fi)=`7'=7In5S0hO_kf
%1+\t$*SlL<2;R;/.-N-&T#UcjWr`H'(ZJDdcK!kPR"6I6E%9]eXNK)=ik<Q\D-]>gYl`'qY%47m@KI$\kr]G^kra3$N2LRpDqEpa
%Z,9C..^ti5VL(RscLW`1T?\)_mj0k@AEc2t[WEQEH0L#3.nbXk?N%[8CM=-i'$dAj88qTrO2jAB`eIP]O$(i!mO59iMWtpn%8_:j
%fPU=9<^P-MLn@`W#eH2LC03f`LFo3TR'=l;KH=U)Gip,l177`fB#SQ_AG4Hg1/6sU'Y5VJ8j\TZG!Z]m3g!LGKH:\2na`3@cN>2f
%8&&6sj,NnO*`>E;3MA$oa1pE8GoYtQGoV3f^ccm[i&B=On7cRtJu:KjFq<kM2(>S,I5.!0>Hm!$-rN<fjUc00>X^QDb$lf35^Boq
%1ZiHj0Zb6#F/9:el46&VV31jVQ#IEeU,Oau?&/nH1MIV_=d=l=7:`\9cXX9-<PgG>TNBUR13T!Ql\`<]jDh)J%gbV,g'.HDUN"&R
%<OH4bPq51'.&FJ8p$qPcq@efVlZ0):H3KtZ]SoakJ/_nX2Qb4k&kq%A(e]akbNsuQ_J:KudZrbI[!&WPGjW_=NeM7)KR_"F8YF$p
%/+j+N1;D3rEZ9;+l7*HP(S0J,2#U;?3N3d5n,&Oe9DnO"&dH#<=nsq3$A1)DMOcR7RW&Yn1NN.$m%9&74%"U?O[jVrdNNL.DKN#'
%N/Per\QpV5#^:$SH,e(%+3QU'-2<H\Hm*rQ3ckshDeSZq,Fu0"g[]ajRR\&G"7*GX$$9^m3`@mkOgXBiU?Zqd*NY)dl_"]VX,kfs
%^?,jBFskaamEF&M'GaU8bSIX+BZmm&B7le[]%LXSDbtq0"lia67_MT/5N*LQm]2="mhN#T[lpIme6/ts5C?O'%I'2YU(+"`dk)S4
%l)TrEDU<"!hP_g*:'dqjk=H*M@b&lL))XLCe*sLk/kn$K>c1BQApsQX$opFN"s/f(ol6VOG?dKEH^Z!;:Tq.PigE"I>)i?!,E)@2
%:^hG)HhJUBG"DG?i(j\91EffZre(Zi#dhZ;Jak4KlH)8!%[!e$5F/ASn<.o0'&tjh('\nMIdYlW`_\SAh38me]Zg^L`8Yf.EENYZ
%cBbkg#?L!\^nk^T@1ahjEZ!\n,u(S+CJ%&&_%mRF)L-EfTF6_(@Xn?<?<RXA(].6<dXm6+CB;(S6</lq<fTspT&KTROGj7JKNC6=
%dXd1k,Sm-WFcbbgh/HC]:j?MQH35h$=I5S=4C/V_SKWkcMLWK%?%^7b[I>m<-cM[I<@#OLZXjJifM"SM=cphC/[-/cb0b9]JJKek
%E\o*&cd4%s-0R'r#s(&8--/T^d`8I/m"t&D7+o[i>=_954e=3ji5<@D-.mJ^.ecJRQCs#X&tJY@%%aPi<:oO7Nu*tsUh`^#93kJL
%H[,')*\!DJa.+I>i,"]%+3C_if7U_>XoK)"50-^d4*9l?BT47+.JPUXk7s1[6X''Ib6]8['DKA-]]pMb#fYD.hkg%sF:fS;Fe``[
%P0nRq6EW+EiFTD@1daGMf.rIos&c?AnnWBAH`82D1nMRG[pVdLk?ut0!A-OdDRtR3$h\)La#`=A#I_nO3d'pqV_P5:h(:f%NV<O=
%NYQ-YG"nYbOQ=il;ht0k]&C=tq8g5LGs?4#a"#'QX]1QeUG[qB8m_i$\4V$Z78b#8*#9SRLBTD1ElMo*$fRI&H;#oG72qKXdD;Fh
%m\DMP!ChhJ+]5MN3@m;$*>Y<Ib4;QK%LXs1#qH;<,9@4h-]K2G@c>WlS=RuXHq:mR(U3Zcr;4`OiNV<h((NP%kFTCHE.7L`1b_X#
%=28U;JOl/"q,gR)+bGTOjaJc0WHChedBQ:_l<VR^9cH2W]GQm-5TCTJ_)/*je1K"ce?WOm(q4bA7@boAl2!1.>sQ>8,C:#R5*\1W
%9q!oMI7HAf$H\'pIC'_PjGZM4B<rBD7!e=2OMJIQ/,0X#dOH[(no=5O\Oh$onO+:S%P#b5oWXaB*a:6+*;ZMA:\jPV$QhPA<'SNZ
%BA#@(=;70FLT=JYk7B($Y][l*`.1d$fjWmM6HX[<>7QmglWP"O&UfjI4kIkA554<`G\jn!4.<ah8/OI*,Rb_M&dDes^5.s%Q-n\-
%,rc`g8Ld>757]:\0%=\_%)f/NUub\q)L964G!NV.:sLJYCp/_LC?q2S$Rd4_a?t#--#G^k3A#,2gik``9(1#aLF[Yk.8!/]gj&GS
%b9NX?%.K(mG(2UAX!m5Zn_/[n4XFuPjEM1+jEMX;_J,T@i:7rXiU"\V*5'A_6Bi+hI:c/eU:4Ya9]kfl>Ba@OUeHrZJPROOSqB-c
%hM.)_K!MbtNbcPcPN+ZJOlJl."DFul)in'iAd>U@C$LPSkHj8VBu\*LYi;Su*.7C#mts&CIcb)>^Ja.kO-#h]V8L.";EB=7IgtdZ
%VKC&T2ck(3)s!YIC=s#`9ari9;6jBdP0sAcUC\hdX/9tMWqQ"KdK(Deq<'4Z-)IC-]#a1s2(HJ6_`m30mfBm"pPV*j/nFQH;p4EE
%=E->A*k%T!$C9tOlW\Bb^s"VoCN:8!hX1:nhmDUd(`p"u]7nAR2saF'4DZGePm2UiJZ[-o\Cil&81"Hua7O>XA?&?8JL_$IPs-XG
%[-SDdlEI<d(]6k`,3Dt8N/gNA#TiBT1-3dYbkh_Xq#h<_M<tsg7Yb3+fePTNjt\t=<jP"63FA6,BDENP<FXo:b)\E_HpSihZYdcq
%OE7e`%0V>FgK?jua';)hLFo?t1)n]n,?<"r:O4biLui`_fAa_Q%G0MhV.1`&U#S<A:WIIo=^B"RSgPV3j^1b"PU@?@Bpo@<U)c&8
%]H6VF6).jfFCFNWj/l/<B\K3/fA_qW_Jom`X""I9[;!Zse'%M%bQS4\6`pffc_%6&&3d'_QBoU.Hg=Z!Zk!UUVf:<Nl&K#tK)9aQ
%O#,W7(etM+Le4"S*./pS;>Ps$b%dosKb\&K=;aQ(kFa*"PrHJ`LTsWRl'BL/>Z7TaQ\Z_3h=t383IBGq&H>mXf=J7PmW0I+1;q^_
%CdE;-Y,`O:;8mn0s"_&ki`C(dcW\b)1Eod1eB`eU/aLs.:i?Cq;i's%eO*oc'&-U!j3>HSe6,e9`7V1rN>^>EE=Y%1if;EkSpFVe
%LKIs*R]7,kqaekPk[<2i,qI1,OiR4!A1,8W7Rm%d[T8\To2a>WChjr!'oZ8T`/k8(#/5_rnpBtj2-f9fU19?CH#6^Vk/0SWCGIEq
%R]Z\-B-?8ZY@E'fog(a<gH<+E)%TsMN5r#K#+0^/O0=Q<'bd%]YDp^4`B6gp5=8U)VT,dhVO3Bke^%3"H<fP?ZN?SQ]AHcCimr2s
%f@,0@UO8kj_mKVFZRSR:[K7A.\H3ZS+,UT]:3i&?4#jhR)@p$Q%JeVY6bf_4UmP3k*XX7HhklYMc_bKTXF+VI`Dt6#o]YK;Ui52h
%>WbsG/sUV//fhU3941[9C0nLTo?mo"?1IH__Y_idfP]LG/(GB;k-[i;<Rp5r9-B@MU5*aq18qu-6_&1Bfp.Ch\\oe@ji&6I;=h`u
%<nB0=XespsV8Krdl/AID??WZ,;\(PZm@c9jr[lNplC26JF"$FoRKaZ@mF&mI]C`=AQ[#N`Ln2h9:&D:,YAnSV(WsA\WJFkTaWI(&
%adW"*ht9W%3-._&rhQc/Kff6r2/f"aX^>C3X'(JM?(c;%O_X3KDDa'FdUQ%eHs"_o+Q88NI?2i23G12[V^CteM.^:3NhB&f?4XG8
%Zm1#W6q*"rDQ0!5o.$ViQ\p&G^!pV/Nn6=MSVelP*Y(?QB1f&AS=977'i0^!Tbf8>]6r9#Q4G:CNORt96/(01mdd&*qt0<:.%j?R
%f/VhY_=`<-5F6mKR.=eJ?310A.jE@$_sEBFj6fWK.L7\bQPl;e1(WLl<)VXnCSc:Oi%Qf+4DaS^+QtF5@rLk9C%U3YVWZ85;ks6;
%Zo"nKoGDI(cX)WZe;6!6b6J8*q(SFU2Q^im6>,H%+&;V3ZF3CoVJBA#fRD!KP,<qKguLh:][AIjj?it&5jcD2#;E/(hN>J4"$0H$
%M1*I#![#>NcA?r$X)Z;fLO&^b\t0H.J/QP\)2qpEA^)s>XWej'Q(TS8*UF.]0k:b%mZ5FZ4*]p]nD_8o:-<dR_um`(X^BiUfGWNm
%rG8#g>.Lmig#+P;)d]E#;)TPIPDA&N?V]6D4%njB)>"D&7)A2qn!XV^fd[(B5'Nj]?G'2%rA>NhT"&W%j:-L6;]J$kHuABBT$M8k
%a5HYYhSAA9?"Y(@F7EI&4i9-&CiWAfj_D2t;o:J>E/V%14JRZ=`.`e(oodAC'L?3U/7?.Z(^:I;(^+PTr:u*3bJ_QA,GeFNlf\Lr
%.`Zd8kK>_IFDBiP3^lFblG*q,J++\<V4tLSJl]9?7mPS%9V$,n]keU5]bE1:#9;;h7]oD!mU%QP[`n+#aP1cl,n\Mb%`g#P'UEH4
%fM`N.oX]JSDd`I<LHr^M?5AS?,q?C$K5h,6)+$V"Fd\C8q)Fc6l\[lqkHccX\HL)77I=%&8(P969sOLcMUB"Q(tK$7XE`fHY:J)f
%<+L<8a^ML3O=W<Td<(ESDLjl]6[pk=6&?q)KG9tXdd:JDkm#^o6nka?Roh2tEoKRlSU.hnlcDJ+(6DL;B3YNc]rY8^9e8`@SlSF,
%DL?0mq_TP4I2iGb"uGr&^!_LH"-m7C+WX;9bAIrMerjnU'j&iNi+&b\V"?b;i8RA?4_uG#?p-'o%N6eGc62g][EI*BA,LAFK5\>u
%W`W--a*(Il6]\D<n,*ABc\:0mSus6!Dl;8LG\OUZN"^+"Xk<dA8!o1)KVOHll^[8F\l,mg08aU9Xpb^$Q=:4MVutR![M^f)[J<P'
%c+&'R?:V_)L0.bJ^:eLJ`(G0(CKeW5jdTlJ0X'/UfJHh%#YK7=<_^C?=F.J]^)78lY3g%/E9#^_bBfr5U"ObEBso'@br4#c'+T."
%/<=A<HXI![LTU3d8-TUa<&gW(Crq[(oA/u^b_HOLb87B0VO:n_+e9n[CFQ^UPONQ3#@YV8faFW_ldk(DCH^hPg5"5FNtJOrIQ8qO
%Mk\+)XR`c&3KUsQ"LhQm$'^q!G/LTopSHGebc.uk2RPHl"[0NK$eA(`f#6m^luZ%@2ftfNc.6B"Z[JC#a%?gq+r'L[qJr8(WnA40
%O^qaEILdN`i8r()Z#g.DE<i\a4Csf%El1FL61)sq)r,QZ-feo_bM<I6TtUY=3?``'%!.h5LKV[FZD2r+DVP<b'm&UoIJHD4HGS04
%QC,%^f;-*4&MCiP*CV:f95q^)-@)%6SnKT#eu[Ki0Wp,q>-8KRRc2e33mp<Dc%ZRar#r$P)ti$7R/bnW8eSi--][]pFhItX3/B]`
%asQ85W^N+jiI_,Hg4>T%W]\,NZf(2*]RbtkWGlgaRL3G2FA)"5X[JoH,(#8A#X9df+&1^;.@5@"V60lJXjsXU=Q*[i=b.sm@MY,k
%<[;9<>=,`^9I/h,Ua9<6F:+pU4'SlV:p%CI@Drs`3;AlUrS?AHDlbjYT=&9k_j0sdR(#QO]YB]:nkJIe^(c@A:OV6[['\b?m:Xn,
%,24@4%s2#S(K7THbJS9$>tW#N;BLX&.+?SN5V,C<E-!N@$)*>n4)_Ib0qkWf.3)`QPJF'WrAhfmrG?Xfr?WGPiQ+=CF9jW"EI<A&
%9W4:`dlBn.s*(=<3QS,sH.^RE4D&;W^uY(.,Ob*[$Qm>sUmC&Xn\ns&qbSk2bJiU6bsRq'1*6_U`Ne[VrjYqm8e-u\W'4Q38]gi3
%2XTqthZ!&M:JV3==Q)lXeATVSkMX>%kHMqJa&p.5lqU+6Ne]Lk8`;e-ociK"(8DCK.qY[@B'#d45+!![B_fH=6^ED=.&LuE`Qr\Q
%]8KAL\Am4odK8>I<qMae.lu<)pCV\qU\k/FLD;sg@7?9UbsU.(&Eg8MXa*"fM@%o'<%F9>VL,Ta0AjcsAC86-YO9$:J_u+r,;Y$u
%@!Do^7(Oioe)?s@YkQ)HLV/1V%QaUl?fpPnmgC-pI!hRbO>lYJ;3)-PTZO\r:"I4J-L3BZP6D`^\8N4++pIS#3T@H@(Q@f>=n\1%
%]fSqhYb<-4PpVE1Y]o]E8X_345tR*k])Zi,I\b80_n_"a\%RJ,O>q;_ROm%B`:%EG=SU@^4jmkLdAV0CO3DdZj8&BOHG3l*PM9p=
%%$jt68bLQP>ahaHNt7bld[Rq&I@@6m/PR#@SeCM5PGQ;rno]>O/?.eXT'i$WQO]I)4s?7?lenP=`U9IM#Q$Vd%pPWA`76lB(b@+&
%RrTL3jg2*4%>sVODR!?AXM]F_XFlSJmZ$`@IZl2g(7ce8h0X5`]KA5#g/\Z&Oe8?(U`:KVj%k@/COXgG/-)2?rEA8p"%9cd?52f`
%+A;%Vgh4.LC4sL"';n[YD!IiXiBfE4]C=1Q@L*a>hG"*p*o`=*i%XWInZ[:\5V4oOYLHf4dh]`DmiEKk1s(b_:!';V?1#R<AV>C_
%K82VcR=c=O)&%VJ!9@DUF4&Ka/ji%R]SCSem<UM(p?2M**+SHbRJ)/;[s!"<!)J72aCU/ud*GV4?nNJDeB%=NdK)pFZMH!r5MM*9
%\TBsraj4:[ZWAV:@9:%:12pfMpP+'ue&rCX<_)"%)'[NqlM92.pIoLtNlRYca2@&g_+1clX0*?p)jY<cM+)s7?<<c@i.ncYclD0c
%csC>D8X0J.<##pH4;cE\m#0[?Ct7qpZ>t.uq'C=e?G'0BC&e7c[f"3OijDp+dAhBqB%^+ci#OpFiB$8["#!\lLLhh!IGl52+Pl%F
%(+$oi-#!FVnBNW(f=O+he[q#b2')NKGq/[6/jS!kGf"XIMU]AC'g>O_mY:,Oh&Ye2`J:XBC_!a3Ft9T$Jp.`0_)n#%kC?N"9.ULY
%,'#^1&N3"[Ha#h6D-BZr>J[p=>eU#([G2c5RqA!UbaPf3A1>:_WM1Z!XK-;>RdQlNEqb>d5=NctA/Vp6%jfcDVPJO^PZ2+m6>?$n
%V7*a.chW]bhcH.E7m;#/BVhEVSLCJUE`+2t.B0!&g1m?1WM&l5>HTG!g(Zaa1cs:F[&5e9dkskP52%5Y;F?Dcc#kG6jAS^;=<^@P
%fPZ9=aE^OfEGPin*AT@76_=MoQ<`sgPuNf)-.The'U]2f-G[?H]oqYh;c3_nhlidT(o2+2g)=0fl9+Ze;3#fSR"rg@<"Ctue\Oa?
%OXDYsY;`];:d&V5lC8qA"W[?E!P&l\^>UqK/>"qUH8aS0bqrCTGn&<?7pl"nGQY_.:^7']j.<Q.F'e"N9=Tt-_fn?()801jY.6?C
%h4re$h5DFFI_mo;`XqQ,fr#=pO[IB1j<4%4!?/CZQ[D)5D$kJ+(e(Q.2W964Ca)pXBc\KalDee5,8A=,:!I&8(P-J4KL;sd%mV\A
%,72'K<I[2:ID2gs_60Z.DocRa0D)?Y6_`XgoLM4(kfQ(2VJs&6`F!<PTJ(1Nb%NqQ)r9kJLM0'36+#%7mX9N!BCoKhH+>_B81)e!
%;8u(d,d$`mBCqe+[@86SENVeRpM`;.F6k8:UMmRB0:IshG1o",%U01k=dt\=n+<51,8rPsVp,iIf/]=>C!map0h]S%N-39p6@G4u
%,)7_^bEBrNh<CTS(`j;;!"PKn(b)=.*L7KI9Y3d@ZCO7:(mX-'SXN<Qa4&,lFW@,r[[J)DG9ALP.MaV&qs$-$n#KgZH%86?]fT1O
%HCh,E?&'nE>(c2n3@g4^Ft\n'kJo(O&?cV3,>*/MW^FGFB;()j"F$3I*(Cl1*'P<IrgnkhF%?F=A3UPI62,Cs)L'ePY9l>&2rkLt
%N?5q*[G[\)2lA&-I)!=hk0"(C5l@/!+sk?lTRZLLF8)0es,R[TqtZ$)r0O&TjS(>arph/8q-cDT(-rWCPW&@^:udN>$iLP`#j)du
%@2Adk\>m"(Lji_fCoBd:L"Y?s5ce\Frc\Tn0nm5gE,WjH8B]h]"arQq^L0/;fu/MWSGN=XS(;S^(HK^N,^IE<[f1c#_J>tE9m]2J
%Aop60=8r_.rj0@R=888NbPY`ES(?$F9Kde&HiCPiq&cm2@5aL&W7Ur+r\kd]97D[d;f'CEJ%59'@K)ns)uoidhu30pM=m!Pf`@a\
%hjJ2cjuS./%E&.hr7:HnD+pA.[?gBfeauq8s-O&kl46"%:ZV'8rsnA_=24Ur:]?]qrJSGgiQ$HBmH5S+rS@3Ts6rf+IS&mu"b-.e
%J+pjIYJ9u1LVNWM++O(ZqnN$tZ`h.BjY),^c0$1`rr2B#qrX6[r:mlG^Am>Ns6H<V@K&:cr58Pl+4VEP8aeJrs5MYfI/VmeDnc&H
%a)?G%NOGFJqFrb0qU]*Sp=nL)j"Gm"[/'Bloj?]cg'/l>kN08=J,&0\^\dmM[I#%n6L.$83"f(Xs+a)=?iRVJ7dL#.^\H@JIeV4c
%]AJ&9^]320s7)RCm]k@cfA&Q!qX>;Np&0q)NW8;@Dh%]YlgOi!hgbUZ+27`':#]OZ[t">3GJF1JS+kD,leh[?qqo]631%c0rPSE.
%I(&?:I9ZJFhI^%u48X<Ws3%mdrUK@Ve;i4<r\nQcl.c7$S%nt"YOOROl0BG*rpl-DguBQeLV"Z,LTeJmm<@Icn/oFEo$*X/)iT:9
%X:rnlc9!G)$!PrF8[&A;Bb:8'iW-/4'CS;&pd=MK!WUEr3;528%[M_j]qHr<)pC+858a7]7-C(@GWuJ/i0IGLhVa!Q5Drb(`>eN4
%otiZWIcFkD#,K.&>qLlW>sk_p^a'REE/LsRY>;9BNYRE>df:d&0nLH!c15/mkFW)7hm=N\dIa`6/doOp$tT&>b$XKZi^ZeepPHBk
%RI:qCL+cfL<BG0)GcIN4YfTi&%YHYn2:\a"H(I:f;LfujB%\(hO@Q;`ZU^-8M%2nO"u\Jk]jX;jREgU9VMbUi$!H+2b'Z$8*Yp*o
%JSQc=$+67/d#'L%4DLbH,DW7Aq,umui/6t9527jSh[l!Sl_j[Ur.Vi=(_\kaX/r10SLtAO&12f=H7-ZRS^A)&f-MRQLfcD:gmRoF
%0UZci&Z;sLe_j2bo*&0=BR9R>HMbbG:-HQT)VF>CBT3OiOKncG"rI%?TUW<gSE/<EJb8_sf.+!l[V+eLknpW=%_AbF\?Y**E$S9u
%Yca7a(^Q:5J.8f>i9dX*HYQC>"VtrU;FD[tPViJW9fB;^LNG0*L.iUCG3jsYl=GWn9hfhJm[MDPdPdVX`#bs5%8%6_b0C2E:2c&5
%Ams[`8P4ctS!&EoL0_q[^G)-PK9<N@_O=5R'6no"5.+u4'<?kMK#ZORP/j@s6[=8gdr?OSg?"HZ"kg\E*Z8m/#Y?"EE;`\#)>m'7
%Z1me<8lF0YlR=LCk)GdDkZ$k*gpT4&kThWJQt6_E1#c(Eq>&#a-!+%aXk2\$GA<<\7?_QK$Zp5mFCA1T[P(`H=h8*G,:*`(M3Pjl
%f5q//mAdr(^qchb&4)BN*?72$0Wn[)3W1@.R1_f&bdoFW@@pWY7E+.Yf.[Sc/fYqqck.i-pcK^\;?E,l9P).Y?d\"Q_semV6:!Sq
%8Ym\j0G3?q1%Q@u`s5r]3Zf-Y0)1XIEX`>HE)AA'@koLiFR`KT_mMtUW!Uq!=VXu`M-ZR[JQ4R<WO#cN7(30lEsL`3OKOOXQ'VP`
%JL)>TFb"UfI&b*HpKHTVm#ZsKp>3SCf/JDYZ+d3j_1HLX0.2^M-TJ(g#3)/UfK9herG0XV%XQULYE@(Dc`]Xs6=@[I:!(3_Q=*kY
%/LCqF2OplH#4)?h^*0PC50&)72]QJ3]g%1d\m`Xe`-mXsNl;*)i#/gT1:A)Mi.d:!`p`3YiO!%a%VbU)LM%_%IGN0]XEtum3@K*K
%5o]m![^Gk)iL2,F)DZS_%*irp3uiWiFFVauYcWf[\j9X0'8?n$8<aY,_-#F@#sD=c&<9k#QJ]5jY5+jD?Zn0^X4]*HEhc9/AmIO,
%UV]m5X?2o:'CsYMZk*orN?l0Ho;K_MYN9_WFZ-ap")>Dr/huk$8WFg_=?9U17TRZ(%%Uj]SmLp$OTMRS+?:rZ)`_]i,E^nLI[9Te
%*?<@[A5NQCbK_fA9Fc^LZDdtIYlDE[=mUIA4i:e6X5sLSS;JjtW/qTDN$YVmJ="6d0hg`U\/&B!OYj#^"i_Lf4GI,:T%=)pI.S/A
%=m:'>)eRB*C+h8$&kJfW:jQ[.jb?);Q09B?kCM$F2po3kCSg,cXXB/E0U.:!VA2;'f\R?]@,"blSQEu\f1&)R/>-hWEhKo`JB9_q
%AF%d8=I%M$NIIn6i0#>Xj)0W5fhp65,Ce!.1AG-r=?LU2,NcmZkP2Q5mMAi'`VQmMVj<J+c+E3Y#g-A*NojokT+>Nl1>uB^683#[
%"W(K@M,dV-DOj#Y@!!usEAs:O`@%"E\YeEg'U&VFf=;n=hJVRM*Y)R>l,)jIeTkG*Q!]:4I`Z[D@e)tM5p=/jY3?uT1(D;apcA,H
%FIQum:U*ML`iE>ShA[-;!*s&:S'"/ne.j@3_<`J%rJ.JW3/LUpRDoDHNZi\-b@=<-WanfE?K!*YS*j3R\E61(mHg]g3Rk$4'iR(c
%$WEYNrV!(*H-FbiLE09)ceKK7NOi-MCb^ZJ!mA>G\>Au:q00V0([H2rehHNP*%mS.Nu%$6'I6%G\$/E%)K8tjd)a?"msn\ZLd(,&
%4(*g.h4.'rh]]C.&2hO>"dl-iGVbI41M"Gj[Y>)Cm43[*rZ-c>s,M_uIg>=`2:ljSMtue&?;GA?8&`*ERmMl9VL+/La(*E0j'hQJ
%S='(qLikN4QA=Y^)gf1/+!IY9jubbVRG+kc4SZ!u&*!<:E5Z4[Gm=irMqEHiBuL!Tg*Rh&^k>GSE:?!^krJ0VMa@@!8K$;124#@h
%YOh[C_$R;R7n29&5r&TZ-GJMTT@Z<S:Rc.L?m6p@>359@P6Sfc<)q!NC0C6/;)Qd^qY/4@ncaM@345GHX]hQK/2WTRNBhsp1"P>m
%?JD<C7=]gEC1`i2b@!V^mp.fY`4Ke@A*7>]$ssB"mcga\VNbq#*\"]'"o1MK..ci9qiYm<<>M^;Ls<TY%+Y*7X2[:XJUtkM_1"I`
%[L['l9u/gHP"L/.[r3\dH<t1Q==CU8j<eLq_.&OjnJTX1LV!<i$l9N:=f1C@AZYB)^5UCb;K/#I*n&/?31A,VW^b7f4'FkR/8>)=
%HOE%6MJ_0ZIh1R;*7UhAiCd(q8VkdDb\0P9mQr$mWZC0=3/#/3ic$e]98ti2DC8KG27B@s55MiK`A;7Ul?4MNC#><TX%Hp_b6c(O
%`'9qP]gbW,H@b9#ZjB8XXhkIC(l&rma2,0B!UNMFS4X5_^V`lnOAqf3(pjp0a[lMd.bD5LYG$Uok7YP(da7H[DELHniZfP"mSuom
%EK2s@?OtE?Ftc[,St$ZgCGL<XoWFaCiY47D3]C,M/b*Y7Rq?4(79n3.%Lc8LEa<02R#r-M<BftO-\@`<G^J^f[1JPjP*@uF20Irl
%6q0A"rCOCj]J%"_Wh!=>e&AZO[7?&g;_>C(*`sqigR6Cm/&[U394fQ=a:annb[utDYu(*=BUSPU%R[pR1U7:bYsmPW)]!)'^%]Js
%OPEt.gSXOdXtrWlg2Mg5X*pGo4^Mm,7&KUdpVStTZ>,0&]osK'pT0ju2m?$MI4p4p4c&-Q--l?Ig84F-=C1!Y#KK(Qp"3T*$)CJQ
%*OfLoYb4J%DG"B]DW63W&lL/`;)^u2eJK(o`k$kE0FX^7MdK@K,b3$Jcm:Qr-f-b,LmQU89$HSJP'&-OD@/!"\kW[==/\[\o**$L
%V+uS3$C?G[)E$h\ieMnQR"f1%BN$=eZ03DMmI;#e".X;%F[?Lk-@h.r@Y8f:`$B_E?h<=L8+m9:3B9Jr"H<FWh(K,Y71_SeW57K2
%MDgM6#mLYi@e3YM-;1#T"`(7em[WG4%!\E^/\inKV=4EYgngpq5_<ebV(<f*>SC*XN!4n5o]ZQi.<4f;XP-8M(5LQo6-31nUbLsb
%J%4mN!1L2d4m@rOggmG3E(RH5$`nR,5"ZEQE04?[J$:P?>aJ(_K3PA'0!739F\5i;igQUA7A<lf0ogKD==[O4K,fh;;a*b3AJs`7
%W=e*p&akPq\ZiX;UFD/6]KEBgqdba-$5ukfRnnb*j*c7QVT3.?cq]2G<S.Xc:)K<f"J->?&nfjUM\%+;7<];5!X]OiO&eo$DU!C@
%4n9k2fGO<jYFCEei(ISb+0!Eb"r<7j]KGgk*@CAkf5A0sDO?dC\PGSB4CKmJ]%5#0UgH^X*h5bK/#(WS8D_^G-#"oe*_/!KNGBGK
%=Y,C>m(/p.4d5+$&":FdM"HL54&a'KOWGAXk#9lp-DQ6=H&gF)bpDMgM;ZB!F(2(9hq0+"2nUFt8j0A!7H<43Qi#d'#kYS;Ni#Q[
%0T#3O0@;q!')fa:U(cQmnY\d)rPj;MJD.m\%8NW"Xt4SF&j;tj>e\Dpe/34!_[CCN0mq_t1el&M.HZ([&TY]"e`ol+5BQ0^VG@4"
%Di6QtKoZ;`,,C]ckMV.IM5Vh5#TY)7kjaJ?(W%-$:##'80+W>_ToUF@i!sC]FYeAm:/<\-82;Q;pW[7gJJ_Gp:<Y8%bA)pGR2.>9
%T7o5*K7D@58W5@F_pbn.eN,Rs91bRn76?&@R-'@)Z8B*6&U3@G9>i#$S\h6]He=dic[_2>/)7?SAHO#m+4<rXqs87ZrG`>H&icOR
%="e"$'olX=0M"WjefG,f(lrFjiW,mQMBI,q9C\1id5pWJ(-nrZ>Z+Uugqb!1:!%a5KkrE'=ZI0m?Z<7M),9u^[d#Bm6SCl6DWf!*
%LU\R5/%K%n;mM*S@UYX^K?g\MCbI;b=X^S3L=B5@H4un[S5H'fR'ScSl0L,'S8>cVS4tXUk/MX1F6sI$q:mZe_2XLd_sl\Z%<uIg
%NenVsAB?H!)jC\kN34oX]A\k23Z<#qF\+*L/IZYgojOU>h1V$0ZKm\^kfn".lGG6.VPpC)JKDf&E[W&;@@0?Rb@@Zl<(-EM(iDE<
%LZIbn5(ks4'o@,Xo3$G47H%+4LZN#;NeG:].'1<p15S_*JDHBin7"!mrZNS:$feWkW]58@oYNu]e>N:(FR]b!)T#_<gfN^GFhNO9
%jW5]OC$6XV,9NdJ5"s&XJWb9*;YY2L#q3WRQ05PNL\A^'HT^9sI&O(EDiR2$4oI?S(4(e*rJ3E%4+S66MfSdabCL_PjTX8#IW+0)
%h(MR<^RCLd>j=6*ro:V1l\n;qE=-._i6mo>IUPsq!RF5/eNmFb(S&eui09o>=^JuU<Fi0N=;5Tm^\7/N$7`dQJd7kdJ[[gQQQj%o
%(I)<L`u'eZ"uLpug.b]a\c?$FWZ!*#O2ikMa5lCk::MsD+ud;N\di@67UBYQG\I5BOI`p19uAAeJlJ-Sa^ZB2RGsL^:iB&S*6,-j
%bMZ/'>H64M%_kP(GOrPjeTpWq%SI37,[UZ'\s?9j%EF(E:$OE#P1F_9(kp6dbet/`P+m!(O`l""OE)Qs1Jt261,8J\/lea5E[C`P
%LIg9ml6.-rjr\b[<DO_t=<n2p+/]oCnF6Elq2bW`I^lYXMjM^Zl8g?9TY&eTa6.=0[Rq(HjT)pP6K^B:(Of5t=N+HtQ>sI1P^tOh
%2S8MfEi5UO/`B0D$%Nb``PLQe#;\Yfk_.Z))-C9c5aO=&+*b\G8@FD&+I$Gci-Me>+-1jh.Vgcub"(?6@_l7%CGt68jA>6SHe]Ot
%lNDXseGj/$%s&A5qpV1e2o/*8R(PW\+$]]qCY+?[6?G[6$ae?mi=,R#6E"kD$8[Y;(tp+%(@&1+)-3dhb6?iW5^eYYi9a$`om/=E
%o_DmC\c)88l(7k:Hj3K&Z&0;$!h]-NreJ3!^Vt\;QbJ[`>[:YHZ9e;3q#!@c`f\kaP\.=Wf:Ge7('7,J41IWXY#\HNBPgRhps2.f
%=-!mO4LrN1gJfj"(n3LCrlqGZlb?W^@\`61q)3^T>l8[%ig[eRgV/0?>C<PW7(-*GrJNLa?:>g3Tn2X,D=E_oTp[BU+Ds3a\09oN
%oKS+0)Ldc\0]7hZg<ZBUK",#-$#>+XdM(ho^4uFh\h6#'"?/RN6uI&cF$^7u(*"0gYrVI[h?],)%%\J)11092k^=[SqH(cNFWbGV
%8^WYFA#I9j?#HIS%i:$QF9lnLWkgUOFW.bm\WTS!k)J;S\?^"Dah-*g4$46#-$^N*92<:!g5NbN2^gZ^Ee)WU5i*Fm;5rhUq[Q/.
%Dd)-:<.qqNeB_QDATm$b!aM$1!#(leZ7RV='P>RunM+mpNOD39[oMKZ/qgQ*UAa)@=iZZ2"=EZjnN@"FVNiG[c(%%NP.E2r"Z?\Y
%DZm%hi:8(D8ln]9N,ii;,sbr\)uLsh:K)+!elB`WY>!($(WXcQo<Se>cD+Q>g_iYE%r`EFSJBYraRCQ;pAX,pTso"o%%&roG]_37
%[!LZ*"t#N[#q55Y)l<I)ZIr`OpS#M8jU<^0>Rs.F3s108I4]sh&RTN8$TPSQ4=[(SBd3m[,!,W65;^`(gBQO8$A+kcK_/,]1cUSm
%iU\X/7RaJ$-EV9V\h*tC/NO"TSd%E;;\k2UIT/F?-KF';0Ar"aapCti$^k^'1aG^XK<r#ncJB4F<!P(q_W\;2$[`8ZJ*70#0''@?
%"#sFgX0l+<0'k\3&D!(TMbuas[C))<6/)O?UhhS>c^?lZU;6qf2/Lq%(NRA2s/ss*!?+Js&^3BfGXBNdR9nJQOW2=t/l9r[i3B!B
%W0t!L:lRbdB-<K?(n_G4_pdQ$D"&>f^9ba3H8-403i)FR&YK@IY$&].n(N[0pTR#^MufgdIqTt-,Y0N5Am%5gHhAblTUsRM-!:8o
%bMA+6V!&XN:dH]"&/9>Ff4T_l?6en(&DhmK"@55dI\;b*hon*@0tg6^65jEQiXZ/OXg0K^!9)^5CW<Em:hmt#+eGqMc:F/9o%a^5
%7cGU)4K@G*Tejp#=`=65e;^q$OFP@diOKYAcUHPLi/7i2XtWZp5)n&*6O?eJAAcY.Z$mN<`^V*m&mGHuU4H2c>ZmO@:'%&$#$;uT
%(ALHddKJR=-r9mT+l4X1Yh:&FEF#2"9/+u(E$<A]P)hQ#g[OFu4DD\B7"HOG'!KiQ;p#D3;E'XmXLQZ>`&"X).gg4IRu-YN"iEM1
%7P[j=1*bZi84OFE=$+h82hH,VYj:Vm"S=j(q.-CN$J.C2A>q0^,oF,$8Z2q=E=P=YA5B]Z692:m12<PPJF=FXaa.2iC-kOHm);r6
%O=p]>82$kf$Cre%3Al<AjefL5J_6=E4iG(-SdTc/\VB_6isc5d<dA?d.u0S#io?D<]&XF[bOQK'Y@`iX#$lYhKK+*&>@;^^&hE8>
%/_!1SLK%jt$4(opU%Rt"S^cYXnIe&>[YS5ngX"pr5Lic.'2pYSg]6L`(Y;%8]%RSqGh)F7lsQ2mT16bX3T9YXRtjhhZp)9m?gC_u
%g#oHT/"!^EG3'$1\b-6/-K;b-$,OB62ajsu'mVIVKh10skU/e<#id(6"r>pG[*0O4+U#L^&\iRU6YDr<6>/4r8o(q%@ZJM</qL(E
%s-\uF)'`qN(#_m:kY1H^[m@B/dk"H>Qu+g(2^<BW6<Z_!GAq]!*"@9)B+Gp_5r%8DLc]ACBjFIJnWn>#OZaQ/+VJ)?eOYrrM<\aV
%CHIZ7,ZF,rDP)2W5DI>PO@L+]r&e@3+NROS'Y%o-%o?!j?roPW\%e$3H?M"43r!e9iQLMsb<9m-"HbqU:(T$2YaRN;k;iPW\MtuJ
%s$`WoTCZ9k'KYOFeZ-5,rGO=O^bX3k$;"P0.H*i%4L?/]>_jj\2Hkc^K+I:T69p#?q7VpHQ("eR1bKM^W%bAZ0(A=2lp=rk,DTTe
%COA9EO=R+gGbYQ5;on]+*<]ScF];6"E>*9nBu-eDL<Sd]?+Y_kQOm:Xn6RnU&EK&9LP:1T<5'PU-fis"(?G8PrMrXR'2]oc#lE%q
%JR.ikU@<,X0cpq%8?U*JrRcuO/YAX@%n"W'P_bG,B7?H"Q!t1/i&^ieHrQL-4r":o[S%>O51!R-j+)+1S-o#p,1dR<$tlp+$8-Nr
%J_Q5X^i>r3WDNVS[[S?n(!&R$X`E-!Pq9DPYWk<(pHPT2##m;I\o+N[VuZia'IMWq<K'ao9h>cPL'CB;4*2t'`R3s1d)>g7lg4ub
%>d65gEB^(s)JMA3o[mN#rh1GiO%X<;MH.gH`,#J^Bp.+3o+A=XF>uMhRR1^T./8B<JF('&QT5ElGjm45I3Y#!j3N"?"/hj"+Zb(T
%OV![WTXn<F5!J]1ku=`lcGo-X_-<(BJ6j.&63BFm+Ba;+:io6B&%i8Z?Gf$pfs0]jYP0XIh")8irA9Q>]$[24,CGOKoellbo]l-C
%"*#JNr4khmY(43I=gK,A4Vp6W7[>j^OOr[4O:$dX6Ypb@aSJlp/#U'J&Xsh5)Bo7a5Fq*NK1?Eq'lO=O7HkmY`NeoKlESlc_`/'U
%-4KLb+W3URT6>[h@prDKXJNoCbEm2.3>B1jgkm'73#tlP)n;Ah;oY$SOO*cSRu'[Qa$cpSHJ'$LfE,J;Fo0#p9t9+,bA8!KUX8/6
%6[0i#W!eaV2!")7h/!TQ8JU^3=<F&j!WG!_;0gd!8(G'g^uI^Q(:Q1M^&-%]W1Z3S7>Yg$.!Nef^[.Z]@!8JoR/&^JIHgG+gl8Sq
%p<,_o@J"3n*eem-+,9[G096=+34b!UT@p")BF^[RdE$i@?0E!/bRa:RDDKWH\qZ%>pKY2>fgFNQlqha`lf0\Zk"M)%0SY3j,/H(.
%IR@t^L1+u_L[dP[&U9tG<@@)h_diB$7%lZf1Jo:A90`Vjh!uaf9t(Sh5`"'2hGg5nY,/crot*J/aE`-K^FRZ276rK'nW>3Y@-0Qr
%7g<070&&2+&`EX's0c:=n.Z+lDn:\%WT9c]-s=O"ZlrtC6(?q^([AD:ORRoClT5f)ab"+%L6>l#YNfk?U*9bD6aPr$!O!GOcWMQ_
%qU*ZeLK))K#hQ&9]"W`g7j$>aI7A&WgpDEQ<65Ae(lo,<1LiJd_`!B=K4\e`K(O8cIfb"R/[fjO8f"b3>j_pE./%&)G7Y\/e0,*[
%URVu+?Nfd,&:2b.nOmE+\AC1`[WYM)*:Z"5i_W>UW(,<**/[/[XM*TF\ua&5)t=!N^;q,p#V/-TLE)dQ."STUf\bgcf4Hr&F#d=?
%X;ln9dXuG4Kc[S.^@!fR`oJA`,bpf`gt:hR)h8QDN$UDR:Dq&EDSW/?M0R+$`hPJ;\H+,,%CbC&+Bhg$gh=rEB$$$uji0;.%b`5*
%i2>A/76$'-_b)LBH+C2Q6Z+II=MfkKdaRoK*cbbc95[`([nH5MJ76tYhrMe?qlZVec^#LhnoA667j$>aI7E,9NIfE'3TGrh"B!"d
%L@Yb&7l2UL9JlP!(fK_`h#dOIP$t_d$(WTEhu!NcEde%ERU6%jCUd_oqZY]([R0/Do*^)*1=/V+quYfb,`e8d"lSN`ORii>eGKB@
%rCilKgo:cP]=]ahk5d)N7M>Q8fTE']YrhOb!%PD<dk?7A<[d'b?NB:P+M74Q?ku)YfH1QOF=)NAa86%U?RcZ?h$ho1'2cMp6_%N!
%U#m0L_^*^HquRuXSl0ZT^VJ@.jZ^KI(B>m<H"=?j^d6^.YefE;^hg%A^%O8QOE&Uo\abI3d-_gtY=MFCm2,hoDF*+,i>?fFnUJn?
%&22I-;N'^$K%qL]SpM5GB>gX3I5G7](o%/o;3H+\P8:_pX.l94l1'L/o<0635[d]jBm64Ki>*5tp?^7<J"?NqIrf&8,l0Uinfjh0
%e_-Uj+'$ljX@N%,7F=Q8oG$D;YT(sq*cO,$$._D!WMg4X8eE1p?%P0MKHRWQT_O;!ODTsA[J&_B@h0[:!qAUNB@7'(l9]8#l+03a
%3Yhb>,q"@=U[anJV,%+/km%?4b(;fuieMj!GJf<fGguk@_lSK8p'QG-6a:9DYn/!)7j9<t!,>g'Xr#%6p8[i.DV.f/Oi5L@_*-h5
%Rnu!S]1c3p?@".AjkN5cMd-;)'u+"GVIR3UobhbY.!p$/XC=K^%E]&74WM)mV(N(3WL>sQCHBXuRi[Q`0Ca$JntD/=4o^PK57N[d
%+diL=fYlG?C=j[[U7=M(b/Ef'JZqB8a2b#q/smL>^DQ';.ffuD9\HP5&@-H1ej-aF)*<;PN,Hec=tCeVAD5R?/.4KSb<kr46+g:I
%ZYU(Ed>YC[T8Nl>()@Tk\qZS+g37>;m.'qkJf@]8A]HHi^`o%?h-r\@ZDcPo%:BqgO`sGEi3m/M-G$%*1K&7)el#YtYuEVr98/F:
%aChUT]QKf<oirsi#iVq%LZH.kj=ORb*,KBS>UciaiP&2$L(SR-K1DTW9%bUJW%'-I*)Eq-ek.*>i4,m'gtgWRFY"sU9:;&$<MaY"
%aK13o[200o,6BQHS;^i/!$o[BY2WMTV?Z5<X\k0\PYZWDY4KWVG9O;iWm;)VU0gY0<!h><;]cPmnsnSWVFJX%ao!)'SI1h&YT)#&
%KOfZINDmY:a9rOd!J`!_!ATX_>4i77Y8)?H(TLc+l.W7*5S6]g_o#k(*&02+?7D8]<*YosTmH?oSL"j15EKtO-mX'PHA6K4U;e.2
%DTBj/<";nFOLTU'+F;b>gq$>2-;`(RX<lR6@;oaSU6mDBEK`0H7!4ElZ=`KI#R2uiLmbXhZ6jsT?\]\?#9fY[p=9<(rIsXSJ^bg\
%N,R(A`!nX^+;C?n95%JnJ]:u3'1&@Taok&tG9b.4p'oX7^juhR2@jrP^9K>aL6M)cqPMT;IK-nZl--K!_f?5QPXUAENpBeu$UW]+
%L^aK==hJ(_mX\hu/r-2HLae([DOJAF!f/if$"(;7K@DbBecYGV2-"bB->3WnB:Q\/>"!D7dC8&0$48F4FLrL_C-\Z'JOOW`5RntY
%N9YO)od_&jPEi*lcR9Fs\n\Y`"^>(s0Ct]t0'^TujU.c)Uq.*i&(W_#kaU8LJ/[kp%Y5c:C06ZQR5fY:Y#"eNg6]Q+%@$VWP0NYC
%Yr!XmL8`Gdo58ZMpo+rJJ$^g$N#kbcQ=BiPVS4f"g_6:,aRlc"MW?&D-:D*$R[EIF71.o7$$BN`#'';Y7[?_0Q\O`[T+EjR&+!`K
%Ek8_24sC5D8\k+s:ReO!PVO4s-1;KY=<d+#,c)q6h7ubRfC7%$\f"s-d6eHeb!P+7A#@hDI7E$/p]CQ\'U:<&QX;`%45@UhPbO5u
%SZ!&V^HVDS!_Nbrb-"lEqV$qf\kHX,D$XAu82:tE.aA_#Oh\#='?f?k!a5eL>*7JJG7:.ENo=;60I2PEj8o@C4E)`4(Yo<0)7I-$
%m?04LLM+'k6qO68@oo<`S'$ToK6AESa$DC``D<_S@u`ii0^aLUNC$rWEe/d3$fk)Q0?JVe>E(Y4'2!$9\301>_QFBph/H."DX0]d
%F$nRgQUk;8*dq;NmhqCOIpX-#@Fjk(A\K._G=R9\YI?^PTuUnM:O%NO[apa^BS#:V5<MR:0$Z#),8(RL^,:S-#U7.(4996KU=@#0
%JHP0_&b4k4L.Wm<*L^sfF@deZWp/92c,fY]LmPClQUEY*d`1WBK@gnQimQ)b)kn[j-1RmpD9>3`mPJnt3n-q@4&aipo_8^X$.%h?
%,$mJ/I8(-5s)s=Y8dO=J(9jB"Ybp>00-(lX--=ZKo2$.&NgA3,Bmd$/(U/(E$Wq=h"g%5REA?fS:Zfi)Jd;-"\O='c)T<%c^CJj#
%XOGZ)21O!WX;u$VCN+dCk%bje.<:t!!Gg&"MC#PI%N%F\#HSs,!nJ;r!GaeM;Za*]1dAi<`@PDV%Z:4r)m3VNJG&5Q5QA'Hpg8/_
%]np/[1`(@EE/bRn=Bl\0#9Z\_0S[e7X*+b?La@X;WX(VJ>q*sF?1lqH%fQqDiu<ke4da:>H/VmJ\2c38Q9lsSGm?W>BD+oO;5-"u
%FlcIg_hP87$0_TrHlQi[k!*imOaA[0$X"234mZS+Y#;HSKK''*Flim&+ue%I,?ZcAe0Uja;1DfpK/GL7pgsHN%F'5DZNOSGYm>Y]
%jT:jPNE;Dg4OTW#mbe]A\=Vu+aCkDbM7IXrY'/Ho`G0>4Q*MPA@+\25$O*"Ckmm5C&k,)77a_Cu[/hW"K(rP"3$nEUCD9_r5iqJj
%>.:'cK=`D77l#>RFbgDnI0*OJk$+^AA"$G^h8_-:(1J1->s]s?pi\u4.'BbpgW^`A@^2fF1_;8HZG4Q"0%!o2El[t+b[MWGj9+=p
%L8u@)FUY5&,-/r2:`gYu?ZcLiV7MP.>:7*,eBgIY3Ua[543aRb-B4*\P--mL:`L"Z\(_6YVOZ9>3&<`(^gnY!*I)im+mt8fk=.kZ
%jE][.X5ZA^8>5/tWG6j_onP%=k`56"PU[2LM5so_;DJYjO@+1Y&P5d@b-FlNr);]`_ta_C.==T0]K''(UDPHda?#]7_Biem^r\FR
%dcF*3"b"rf9,X78BX<<nZdo6C80\X\rWPHr\A%/_C1$un3Na]QbL)>>rTTX^*DCqoUd8s3B&sBZhSu-mi!*u+0&ZSKNOlR6%>7's
%/>9)r-m/qLSWLhHXk07=+`/B>&0fbt'g5*ga&1%g%)lFY&d(AS./bK=S(_Pc]3SC7gq^G-hcgXWc47[LVbksS#TaA&c-\=^o6Hhp
%#-,_2o6HX>e/p<&8Z,Z9#7@%gC1&G@$+q;g2suM%*%-g&FI0'[+Lm9Ma_ECBrM6BVTHb,<XA=La(B7)T?,)#2KS?q-.-T&KBW58/
%c`!HkF?Yb*!t3P?ZP:cO_QT$R&2.31\K-i'1j'Z>+*NKM/QsE-kU/f?*9p9p]^Ho'plnT--$M3bKMn[JpCd]nHMI%Smp?u9Brh?#
%>U[97EM5?g'(9[*P_A:V8@Q4*+IZL#">:D?64<OU$<DnsHue(Z(X1nV:`IB9+\ItV[C@!KA]!hC;UZtY!e4F-+)Hkb#(\#lEDH3O
%GH$Ngp,8;4+9]YV3j3ha&CT'd&t:or\h=>u:duq#)/`3&ec$9r'$72e+T<.C(Pra;)o;c.o`L(P.\`$LTV;^pN3Hnj;;BT^jae&2
%Vjg""Yj3Yk81#Ko`P?AI6\[cU<'$4_),M>V8n8U88(ecEK=08gb0E85'PhAQnGFfdgkMaFrfIVaNW-C*:A(U&5q<oVn;Hhn3Ep?@
%X]Y3,Nis/:](>DrX=i[$<Y*5=#Fu/QbS'4E%$cl0<&HJ1Br;B&M2Rh:\f6fES4/DP6+V;+&I[,9h,#LQK;*m1ZW(FsS_*ZX:qKG/
%V*^fVcb9*sHYg?=0HUiu#46cN9Ys/#")e[N\7/(CaALS:*SMfEl6$Y"Ek$c^Hi?tJPlOBRO(/o<8BOIh@uhER8dtdh8A(*ORLKh.
%UaYdtaVomRXUlmfeW*87jRd?N@cr3*F+r.Y/FeT1f<?D*Y@WG)mqk<b[&-%rJb[f^XdGR-Z+QJ;5Dd?DXu<iirHp988A[d")O@7(
%`)K8"_E:8[KY`c1>7L3['@e'OQ15@'RFga49$)lAAuu(mmASSgf2N^+5.>(qo@C!o_*RVr/o!3^!E4d1!4fn?F'X$OT#&AB=47W.
%$MB7KmQg+#;W/I=2=jonFrAnKB?_+:L3j(IZSn>3$Da-5n%I,DLMN/>UUEa3B.%W;.ofKoC/MC'.$%UY=:S*ac4Do2%/9LQa4T-d
%Q1q]9H8IHC)1hq2,b7c9)HB2eoHI`#JsJ739pC9\R$,o.%c5,Se:r2pera'K[J#!>SL@^aWI+LHF[P0RM"!TK)f:CA!.$fn6BP23
%(IlYLl!=#NJ:E3Oj0=SG`gi(f(84->/U<<i)B67aL8+-B-n:0aS9]q_Rs'YD`>W1`E$$/dVa"I+HXCVi9!/Q)rVWC'93HEG4nAMY
%CE7WoYW0p'K?GC*hl$ij]-3DMQ;&OWJp.Eo=%W0goXu=gHh/6MH,CChg57_a5"G1ZH!U_\f7cGT7G0O5jp(+.51P:rgIUGZ+_QP.
%)F4_>^RR"G$7Y0u4Ad\fC=\X5ZF;!#fn*mLG%P.3UZE%_Rt'@Jm+)%(6=JJgOFQ`^nbQ^Bao1?*I9(9So[1)%A(aY**O`I4r`!2m
%"G!@7EVseUrk%X5rJ,m8Z,6ac`4$XIoC-%H&,T/[Ie3$Cs/kHRX=1bK>0^(<PF:qOFRn?em,asYncp63?iRZCrq2=Zs6ufPkB"gR
%s6dq20p)^qUF/dkn%DRFrf?R1l&Yl+f^cac+Toj=O8\(r[Cf]si_\<t!85a9mpS?Q$doW-8B61IO.U&b4#Y=&NZGIb]ti5EpI<eR
%5PE=dVe`huZ_$qGo)ITbRE!F3k(3Em4nCmHcgYiE*n+uP3-an[$O1*Za/2/^VK`FFVJ3PO\0%U\XEg[Rq'U((mhlB!'lHfh)e$GW
%gbPq"];ZapHK)i`5QC$\(k2_?WqhfQk$U0ui&6;*"h3E\f(c;a!`e)n$+h.c&:mAcWrFL?7hRe"m1-?QBVneNQf!neRq2nGa>M>n
%-8)t"kk=V$!-cLp6&+4CkD9ZMj$3(Y^\T%%o2f>V9>%`rjD_W5k[0!(=X6<.2\B-t)`/gZs&ib.lO0dY9p<RcjJOp5jZo/#W^a#H
%,St;\nK0b'=&Tl=^pc_F.do08:Y_>(E=Uh<Bg'm9/pmC;j*!@eb;Gae^mAL095"M!hdi&_VA2>an3:isJ([QicD^[E$2p3?<W7/j
%S53Mldl0L=op#TnqW@7\rLOR\cZ$,]UG*V^o;0\2-pU#A6hY//r?;+:_l)t\Y/oMun"9UN?i@SI^\f4Vs)tiB4obQ7HeVju[c9F?
%([sYZ0*;b>l=.NC#ac.f[Kj%aSe7bQ6,GMg]#bI<cBSTuG_Q%`-_;&7X"pa@oVp<Kq_i"k5p2Y:Z8-Ligb5oW<ikuGs"T9.@@,`@
%Xqlej^ZIb0q_+GGr.R6Pbm(Ttl#sC@:d*O%rn/N3#"s\-Bi%pt+<XfJ[[l+>qBQ%+5M<gNQeDB".>Fc#r:F@rH[,D)YO%="$\'?d
%4[BD$$A/lLHaab$ZhN_dlS61:5Tnc.VGge-h(of?Bs&lg:(3;u8j2nTVNfZJlVOLHZ\#RRQqYmag"ma\*$h>bo#@2SVIB&Ua7Ss"
%M-u::8^q8eJ7C@bo8<jOFbD!&C4_?YhT6n:o$p(pG15[L*ZY"IC:aQ]$5FC@H]K9TZ9<)e62>J:e`/QgB7p%Y_R)5;JEIt]ng(`d
%$E'\UBmuLZOl^.cjAo&F*1[Tq_]GALpN?&&O'=DI8md*.R`t!ejLJ/Rp53U+'mbUU=%[m'*F$*t_k$MiU0P&W'3Wgl)]VUg]VI0)
%LTHO%;`?4b7DWCG4^\u1fZHo'dM-F_#OC_N(qlHO+m-:\Vt@+-A>[hAnK90U=$k*MHQ1\agR!<&%t<>*VOX&X5Bk+91e<Pcg0p:!
%H/V[FfV;d<V"tu$?u>M5Ch?-Q:X;#NV$\2)>ShiW7h3J3+rF;1PlmbD(_c/p'>`C"oOEtYYhYk.Qqn^%=d01:WbTf`KP!L3ODX18
%fTigq)^`:BPmS!tNk-pbQof#G'<1b7rpZ,?(aC,Uba+DAGFErJ8GZhN<U_7N!c!eRYBsmhS+Oc'ro(aM([A!T>f4E2.t1[.GMrre
%3Q()Pk2'o4R>>n3<pl5s2Sb"<8Wrf%j\dCeW^MH[\FM5a(ZB<qq(Fk:/@,e>]ZfFGGU\%pJTCNnP>\R.4@Y@S*#EMFdJ+?UO&AL1
%Gq,D+)rSnceV%LT`3+5QM">R7r1.@>:0n8Ef;E:1Be>^36[!C__/;03dqe\";:ZJQG(F"#.er[B7r8![d4UmM)NdaHMRQ4s.0-.D
%b$?km2ZFQ6LP<Fpq^1Y(7aV3Nle[WKhjJMb37$KV<'mi6#:Z7sMOp?eo*Yn]br[jualfFW&+qnEd^XBNN4A`m1W2OAqFa:48)3@*
%YJ$OW!-!^bL/W@Y@7m@M9sSJ`4B7(P)_5[Rg<l&]FW*:6%=h]K20(>/4PPbrW@P<\_kc9cB%(=k")89!"?5Rg9"Gj;Ks@noZ'.^I
%Y#&I7(tN"!]J<&,iDBfu'\k*6A"XF#b2O].?3<?@'8`&&Jj4'0_"^YUp0oYbC%uR3;7i\^#'!,b7).X';.=Wp`U72e&Li^t_i7>8
%$kI[CkoD2KXLoSkoPr!>nlL<JdVic>>>q'C7:3YTU0j.7C:!QYAHn/B1H?AqE%:*5lZrZPIu;<gD4A#2#b>LL0Wcj)_L:4rIl)RV
%2KA9DJab/Uic`%VCn\Sp/CMT#Hbo1/T=a]WlS>rW(u=GorIVhmZ'DWk5>LB[WcBo&%YAlA-]*Z#oqj%A15K?_Y"3Ce=&@*<_M\m`
%duC:@(Y[*)iMe'I,/rb$fm3Er!uEAn?7t/=H;dX\Q8gHjRJ"EZRH^geWaM[@1f>:<"G&BA6)r!$395ngEKho!J%qg%^@J'H,<eGW
%5[e]CR7M2s"l#2AQ>WaZ?UVT0OB!D?ca),;F@mFIquR6\%I#hiqTpJmD,Yt)KUSSMA:oP$,V8MuPmf=?;CROfWBps/3'f$Gi*sXn
%:46g`c778W0&VgJ2F2ui7Bn6N$Ydmb5mKrt\`C=I0ZA8]Wk7#_mj>JHQMo>^\>`6,M)f<L`Z2JQ(Id;)Y84WLVK!.Li&I8E!HX'f
%ZGScPr/i5-Bjo"^?-SNSpU++Rogi9Y-r$5t;;Q'0<!/tTELb:kqb1PZH)%L*T-e8^DBf&uc$[K#!bt9Q9!Jq'V4%,j@9(oeArBr,
%oBQ:O[sbTTYdA$uc<#AP,$`%/S>gjbN'W;^PRqS6rRRLXLbsKc@qThRnlMN>NN_Vc=>sD?UanTG"6bZKN\:#Fko?a1a.1u9CXPad
%X\Z!`l-?>Ym29P#/@*CHnQVckZC'JpfUNq4QJi&bs4<nt_D-),h8PDN1$t\4ck^]KONoMZI-;eg`kXS`"aQeXblq6.3(+;?.rbbf
%$(db"Us=$-TD3eqFQT>0lLBNXEuQC\GZ'-E_JC2"KHR=gopfOWVWmsq7l:bdgu4KEA_&A]fZ`&Y6ie$1YGDoV/`eAc6Rj<[rDf<,
%%G;?B7]k8>P^kUm)#:DM9oD>&_\9XBR5.FA>jn6[p'U$\Yh6#*Tc`qKJu[X5$hf[rpnI+g1@Feg`Oqc!mrcNsEcj)tqj>_:G:_`7
%8Yt"?l+Qu7DD_pmU&[g(D8#Z!Z$:V^3_S2NAZ[#@HRN*6W32lF`DOKP`DGm<WiT2@1fm9<]m'G/ZO;el$E_&YPgS4uZ'ZNu?%s1'
%1@#Y42rDHCFi(>f^".KWMF>M`)ts$V46BJX<SZDIZXGZ#'R:%V[lT3?S6W>(S=7S!=I5+<bX*2QoE;_iU,-/3B&o"_<8acs7#Jl`
%Z5i#d\ZaKPH.mBcG]@`pC]@BZKBCpZL@=8jr`Y$,@49d2iSB)rJ^/7]VE(Fnd#aDVFDG@=OVRPN,2m#1jhVTI(kb>W/sB\\%Xsi&
%,ub8gbL14hO9!V5qAWE-'Bag[)Guee8_H4M+d!o?Tmc.8^474BP)e.]K3.*uH^3Y6Tm:56B$M\Uo6Fs<+bjkYT8d6C2^#a-HK\6O
%6'P\k!$+)aWqZ77E'GqNN%j#f^`/8>/'b?@gqH``Mg689-i!Q&b3$W=p*R^(gX9.URIrI9F$Cq29E_LL]a^oF-4r*+8K%LIH=L4n
%-0Dg+q861.+$:=;mKm[f;'2.LM[s5::>g^19oATVm@MBR%/COt/.eGFmPX[d8'`\Jf:T8/\TNS:(/<bd.\F\-SOOuIMAeA5EOJ5T
%(f&'7fhW8TO=g/jkgUU*a6fEE3,,h,Qu-$];5[n+`+^aDNs\722j#sl_"4L>>^QdA6AV)_4>blZod^CD:H^h3\NM%t8VJ/&p&MLA
%f*qCn'CI,=#)'TTKUk'W+"'/+'Iq-eQ?/NpZ'p@@=+7ksh=6s]HtnPL:2#_8;HcromdNjW8"9l<E*#+_39,XZ<?.t5Q#WR#nPnHN
%\8*Y?M)r<R'Q?NTU'?05!GH<D8\-E'HM6Rj[8s8?l+6JoIbZ7I,<>Yphg.l+jLu%BQf.>(gp\'4QMJT#1d1`nJRt&C#Ooqr$l[ZL
%T<>O#8Yen)Al4<JX<h#Gp/D@'<QGWj^"Y9&[\03h3Ka<l.rZq-$XTG/+/TP32nolnpP-7BWRfe9DBT!Dqs!S+n9"1*.^g.'LearD
%!".Z9-X50[i@hf:f=Q6VrUJp?^Y]Z?2gMKo8aTG8.OlgTK;GBGAPZ913re/uL_W=qDRbbSoqV'L],(\>$Y0,&FL[l%^O'CPh+l#J
%XMlP;Y@PO2i!$<+7@P?'4_\K1.f'XnhkkESYq7="4'h@GB:'/^WHi-]Xu85/WeaQ<fr6*AnaJ#e7eDLY]pl%16G9t%%nA0>qpG*>
%#1jg^s6^QphgLL%m9^mGOOMHWo,G^;e`INr%cpjlPBWb8MqE^c4/?734L4E2**13YTQF_Q6=bQ")Wk-CYMB[fN[Fke>"'_EPDE-7
%\AH0M&1IpkR%MXi71Y^kI?J9o#gLt+>YNn'3d.t3`]gIXOlC@mP`De^>ZGr_0/7Gf@?X"]b8_G;EKdimotGZQJOG_Prt@i([V,,6
%XQ7i:OSHbT.jRl*:(o_oSsD6W&\?[k9#$b*U-:i>6]o+a-ZE-h)MaJnR6q%_h>t%miI:)a+rn&I0tE@hp<4Gk2P`p)Gag13c.fIn
%S9X82&,%er3Tfd.-[4?e=r<cQ?eTSdDUk)RN.&0'7Cde,O<tQ.(LM,t&RTmFoc"-&e]P2C1eqbo^CU)`dMY,XfUW;?n+W?]5Q0CW
%Sk`OUW"$M.0(=+)cf+e%Cn(<lGoQ,Z6CrlcSNR2Crh5]s(i63Q-an/1!,=_@>W]<3GHh?)k)`gN,bE8eqjJt`7ZOF`cKRhe+Ti>m
%%Th6O'Ku:FF)Ot4R=E!!RKHLXE3Di$>&cRYG3A:/%d,15ceAC+&UU""$3?NDF5$lUFI.PO"8&Ejp!i76^gENjCbo$Tq_$?qgQ0t@
%/lTs]>&>sShtl.VDS>oYLYG$I:o?IjNmATA=.@It6nmtX&#Trpq8c<]JuYon*Yh9"X@"Ei"f4,@6pIY/^R.8^['ftG'F!2=!+pdO
%PE)8ETN^<0eD^gjfLaUhRcO*@I\`E:('QdS_pUs$SUD[@k1S-:_O/Q96li&/ak9YQ.*Y%6CB;8*W[po5=f4V'l9n5p2$g3W,,:$R
%H(?pLU<HUWSr,#7_6!8DJA/*u#h]-@90TdfAGEhOD`F6H+MU<=e)&*SU/R(:+-\uIKju<kmRgp?P1$)fFqUWaEoAg=j<pn.>$]rb
%Oi69R&<o/-<=3n=<oh%,f`*buBj.[aUEl2g`(RA/s/&/e-A($u!!+4QDts,r$"Otdn]AWp+K[di(iMLP,3[AT6EMZRF%#StHR[C6
%^DULI:_@0(69;?rgK9oY"q\osf#L(X].IA$U'eLAd+Dp2:)$:37jZ:)eXcBNB%?mVkP(6.;2J'd*af"GmIEOU#>dr8'6r&8.8'Kr
%+*c5H;M4@.h`rf6W6b"/i&o-2dDiIg)I4NVZV<H(JoJH!?7r)D%`6!pPZb`2BU&+C%.`]-NODq&Rb&)nQ38qD9cJ(d-D*1g1MVMA
%KmT**jXYb$n59PY[?]`LP!$2NHrn"7'd$?FHEIOJ3\5T_?WO;$qqgGpb%nSr[dtN&a1J;V[\:5E:Ln1)7aRf])bZtlN3l35;'RY$
%0,:)noWu0`+@hnHX[NCNNtVaUEOJI'<(g"R?R3,o\!D&G=&72/#%\Dl.M^1Y8<8Qk/h%4NH1,QJLQa?Kg+k=J'&SBQ=uMj6I9Vn%
%nd-*%+8)n,`$G6HiH]#0)+nC.]dIeb5Z*dZGb+0%;%Pa5hRLEfV)l:H!)ZCu91=sO'e2o!ZO#&&f!:qM=06.4gm5KZFEE$:4?/e6
%;TOhu=7Lg[O[*:s^9TR=`&#krA[Z08irZ8/bAR$*J,mC<VkQp;qUB@J/agj06X#%Qjg(auFS9=KNO@8UZ$t'JVuRInE,clZ,r*ei
%Hd_-[B@-t@%QXV!SM,s8#,_FAO96N.q8U(ICO)H@\6'bo5<dq+rf2J@JpsUGXY^5"j2![kkio(9U!jeoZ4/o[)>.9Jo0h'7d9R&[
%N)0m,IZdd_Li9!Nfh;i.GSP'8O_K^%Q0`/[T]Gn/T[=T0*VOpqp25X\S8?.G'L>A8Ofh9W)TE."r\nqm-WT10/lat`#ErbQ:gDrT
%"Lt/d\jWoX:@!UhplQQ`B2*:G.UfJe%n`)jeEV!;..#67p3iN2/og:b1\PCeg<mqGEJeIa]O:c/g'/3e[E)J\mgZ\1[Co"WI@XGe
%ng3ON%UWotj9!'l$@k^\<BR+5KmMG5:k\6N)S8W_ku$MfTFZb%MMK"3NNCc,pQen2`%1=/(_NeO!Vh7sUI-c5jSrnf")U;Qe@`ob
%fm,rt+h#P`9O*/ZBp5jQU]mQXGWV6uKkB^fS3?T]7OB(uef3rmPPh%/9nKV9'O.-J&0j9KnB`*>eVb^0MN17PWcI$7D,0N"]UVK;
%L,A)9;pXr=7RcJU;k,_ucG&1Y\R7Ci2W0F2jgJhg)DGVeEPYRE,gW!P+1?e.'=i/YSWspb(5,Ug^8sp"j_PC#fWojD^[6UK`omGW
%/uUK.rh-l[?JE>`Ht"A.T'eH.;^E<r5#LC(lf2EK6(h^br[:mI1b6sUEA!hDA@4+-Tj]fH[3^AS.fYbb&A"d'W9ZW_JV,dT()-JI
%m@pR.[3e\1:<qH*e(JCS:*VL!Ml'C/'!rddO,J2r/Mu47<MuGin(Lish]jR4$;8L8XW)l5i`f(Fe@t$0g.^`QnQD5,p2m4??i>(,
%?9VX=mP%4rlUVg<F(bK=6p?NM'1?cF%[X/01VLAgZR(^c:j1H3!ota5?d#K/kBI<c(0p:t@_aD5fN__[_OHL*P2PgN5IjmWDAp%:
%hk6!c7DkNL?8!R-n+fL'Ofe!nU;(Y!&MU57eb)=K?bal+ZeAJEB/f)'c;sHieIYS3,qskOq?B4(X38FX\Mos59p'+rSJ,J8.c7"Z
%,Ls5!LoH!S\K\1[bW&f&MKgsc=T^4V?Nd9b_Juq=*5@c=p^-cDQ9E$6FfLm_nf2=ST/#?J-m'*fk6IReo9X>#(G8MpJ7g%K94l*3
%"cnCM!=GeRRUEqa(K:$o0$]fEct-R_(47`YX5M]q!jU3a&N#5VYKsY7^DgujJ0:UZNqD((f!-6f=?0q(c%,]%E%%F)qc1F%*@gEL
%3![6Pl<t=^7]^V[`%E%&p!/hd03b`H.a[LOb(U5r)!C`I42R2KU$R/7QU0l#`2J1jMVY9A7n]jifoCW8@rQ$G3X.)EC=W\tcAk^-
%`#JoR^l"a3^_&+t_Dgda@$Gpk=q+Bu0#so[G&^`SLB%MIPg@/<IU_a-YcE$0e0O0f_[)J%1Ym,.'nJGqC(>4SqW]efJ#$:!,A$qa
%<KX6n*A$^BZBlIG92iVr`bC>0/uh>26NO#j0s;r@^aqGJ6-0c5G@\G;MdpN%VN6U9;95U)F$>gb3+:md]Fl=))01X_OV+.!$5em5
%AMISIau=8Q;V3VG?H"Q!?lk6;JJ\4D9"A2ghG<p%Xth!gfXdm"iprrr7&+d7d'"&#?=3[SYMA*Q<nY$cf%/V+7RRh$Z?G!fiBsn&
%g-T=X2/!O@%k9k482$%3FBl")+("Ktck%0-VloR#^XTr'MY)?5:^pLS:AiL"S4,N@'6j&5r^f5$Kr!GoYEn`j'ODAnlrrZg:oINg
%k4.`+HU"Q4cR00kSB3!sPLLV%VAG"B&-/Dqc-M9.!AkpXF#H['K(kZk!,FVt(s^CJUMl.<#:$&f!oR=TcmZC;_trJ+2VZ9iRr;>F
%8Z8Et"l8"-P4T@\m,^N[g[6rfR%KH%F#/#93d8S\Dglj'3JNn!k<qk.8`_B5*P^e*"1@,O,k$#_D8bJ2.kbtX&9mfpS%a76VYf6*
%htZOCJ!QR5VfPkJm0A<!Em`C(=5tRDBdhEch*=p40X!T`m8l1k8/KP*4nJ9m>ae0fpJ583K=u%";Od(6YmHn&UX.5QJQi$.*P_l:
%dIQk$MeW3g\(9_pp"\!O;_Blh[SQihWST.l\8QqV3Y7H:1edj7n]3ibJG(e-C3-T2n&N818:8u76#g[h^+q4h1nQDH0d!M'H?XY,
%AbpY!q.3Quf^:ka34Sn!p?FB>h)"c5h-8_j59J/5G4$Dnq4>(oq%p8WbaVaal#b?,c$=?RVho<*]6^P/08mjQ[se#AD>/Ii]CgIF
%\5'c@OIC+0k,nr?8KEZ+*Bf=gp13+6&`urm.EOGh<,f"g#-B=JSua4#g%o,qSPm8oK)=@U?81j:ES-`)[C"CT&0udB+geWkZig"u
%TK38e=.E1l"\H5nlu37`@$O6]/8j&(TFGtV.QJfAGb@))S9F;"\eEs`dYuaEUnC]CE,d8^08H#aQoT%*hO%h:?"kP!^`XJ!-e5,4
%#cf@S=CWcA7=d9W:B@pA<TZd(Adj@8J>:n:p%rYEK*'^D8CqPaP,k2<04)5V1S)*J1BDc+foMK'WGoRP!!hV^lK^B@/nC^!+^De%
%kaYGhp!k_/`pW.4?KG0@KJ.d74R+,/nV4M7`5LX%e@jFmOe#^T%ZrPD_Lfrr;$%%`aX]u8@1q<"W[Ljb`F*KPr+K"S=abtC-cLdi
%#%eWj\?.l]a#-s#\fX29FS0<1;kc<L!8KdeKrLiO?A7;;ibS[n7E#94af`'e2G!l%8PO9"H8nodf^)P%!u9ppkg1ZRU+e`Q.uLc:
%TXk32VpYR[fJ#j%\]d>62E$-X'*ng\amB1#oMPj%dnTG7DHhGVdNcR;ai^Ud1;F^.UaqV[e#WI[aK&cBg_`)el+j:@.NF$HG,0g9
%rDD=Z\uV9ucc*H3Fjs`df*2p5Ge4^JZ"MkfeF-`PhS3b=?4na'7WQqcK<Pf)')n<H!b4a)JOGlnMLfUedN"+@B]1"#`E@Vg\CS`h
%<(kuN*Q$A="dB]:_Zh.P3He9k`GSFHL'YZ@H6nfQOt>U\>_'scTu&9@V`'mUWqA>jP>gXE"i.<pEX)>&T\a"=A]*Ye_:PHJE^c6U
%?Ss-Q06UGcLki*DTJ()C!"Ik;D"I3mF2.(^fS:Vs'us$V:,dTO=sqcDTP0^G0/:L2i@'eQAR88Oeu6YkM@6Uh"Yg#IEcSka!U6qH
%5\F)B>C.::([O=HmEU*L\]TM:!NkY+\+HOjT\t<2dNTf`>1?[hSL(:[aKmOL(i"Q;=aX<s(5+`:f"i"JV!Xb(4>b6N/TV43BeK5:
%W'V_kXkumW4d!.Gl\7uohD,i8,r5;4&q933g'G>c.R']i5M>og(58TEU>2HQX-%"_c8Y=AqesF?Z*B)^KU>Y.l7/(M<(t5nCA1bn
%i5p1iF&LB,;2Lj6f-'mc(`(CM18JS_#u`ii)q8qT`#Jq!S^K[,\\KkN$HGD7%ViaJUV<82e-*]'4Z:Hl%3i%s'Vp><j9&C6>Cuu)
%?ls=mNjVY*U=K1P@*cHt*XF%\1XM!DeS0RWju9IKG[Lk.I]^IIa^_%g\]jE#g9`U16o0_Q)[:O3p`]p1<"*.qbM##^.:GYP6rD8)
%+dqMN8QhQRed18m,1l#6D>@-_/95N)fG:'Id"5_IO!qt+HXk/2M(;aE4G,=BO<"5-:s%X!=M<-[5i;c4d2)td4`T+^m5NL9r#&-2
%W[M$RCoS)'.<ZkTbUWX0_o\P'b\Su]GJmDqb3tA`H#4aM1\=M@ics*Rf&l+H<oglK&u;8r!sK@i=&Wd54V((-o6JBr0`gReArDWa
%E/%[^MkjPN,:\2'b3!KHZ9BE+-)!t;=DW^TiCeE7PAag+'DfP3h'K0Y'`I,:%<_sKWU7),q,<k(k,,SRa'.M9j#F0Gb9XPm4bI:W
%Z@h;=YYl9.bWtbL"_T">];;Yf%2L))]bs/CbDE^eYI[F%J$^]!l9hrU]t\Vf$0;:?"N$R@1nru.U_T>I98O!cD2PE/NAZI4cn)Ba
%'s^k;"f]5)N`[i.G?3L#pP3KR[>4:YT8q:4m9ZF"lOtd%dt]+h=R#hQdU#R>Y2Ms9Le-@"*X+2Tq&=?0>p\A8V>0mQ%UObB53;U?
%E)ef9;mV'G&BQ'8WYgma1plNh*,-?,O!2b[?<qpkQ#G*,7HUDuG!](ML:Kk&,^R:8XYCB8%EK5K+gD`e)R]h<Dqk,"GC2EJAa#e)
%Y#0)nS$n-:/?(.%f\tYn"!Jf=&XOGN%b6b0:0l-W/1B')6elV*\#1Z%:Rdm(IqG[!b_TMr/M/kn!):O&>bs%/2T2!&gid9,qGj_p
%9<"Dr)7/2,.GNt4_'7Cpntu_W$:=bOA<D">"ll@j;o"kOrP-hH0AE\&dR]0*n>US&qN&H5,Of3FBKVqHM`q;3ch"8d";MP+iS")'
%(u`ok5Y[F"3RAM@GeQV&fA&0VCtcHg^:]Z?CZILZ7[MuFNghmch4U:1i$`]H6)mg&0r<P=]PXM\1SE;U#dL0tELjH^jP(K,Xs,rM
%YKbr[@UL^?\ktt9M$^XTG9)?)Lt_%n"%_LW+"pt%KCcJXSj>g[_tBjMmS"$3JLZ8np3?9"?GF)HV:XAmmGV&O$Q-)Q`LJ$).JU`P
%WTR;qM_fo#J;X`XK=H(jKI@A%&g?R[c#)lf%##k'HP'&I4HHbj&\9N5==NbA0e5\-S7pZ^56@T[Z<)K^iKUDI'N,I^%rifRjH#1d
%]DuP9"S&Isd31Z)7f9GCQC7dh2/i<]_D0:a"r'^,WCg5S#55%LUZ]C/0e);$5mWJXKr[JHDaJ5?#Nf%31b+)MOTWD7[n!%2k7*C;
%g(AGTJ:]Gk`AT$D5YRg3?dm:n20"OehVdH0>a-3I_FBfc-<tccaNaBo5cI040g1JW(H@[d,>b%5Kg;B-oq\`Z5T:X[@6;ooqpI^L
%S39GG*.!RZ\_15f*1m@Z:Nt`0Tm<S.Ku2-8!gQaUZ7[+'75:L?i>`=0>(B\+M%,Y,RW>ErB1_0OE;T5?I"nU&:&u&@F4hoXrk-Be
%FH4!-bBjb3.[,WhbfPl2'S5%hC!KgLaWC#o'J$hCr2"7\_;V(SbQQf+a,R:-/=Zf%\=qnKP45EGa4StqL,g?6fUrnhSg)MPn-Q#`
%cEn$Ul76$'=LSr1k$0^u7?F%FcJgAW-lE"mThMBl\AS-B/jC@gKHc9Yi0'i6"kbhi#`+u$kbth/:'0i+JlH$]N;C=j_r=$RZ?Jp[
%?7;NL]=8<p4,s3,k(`]!YQKS,3bg^ZJt7D2*E<7HYGn!hT`j[c(TrCJ$!XM<:oWa'BfdNO6drM,iK'\6*,p.5ObR3B<]RJ0A0<3k
%Fc,jfW`pVj!ci3"P6AOIi2J2B,mcmhTos+$K@]]KiOUP=qOHc[qODfkFU8_j.+W"gUXW7kNTopGOaPWgRj?g]4n?`@$=N2,r=KD_
%:sLJK--(-LkENfF<J#ia.hoj`$8oU,,+W)GoPg*t=?\r$Q1Eo^AZ]`s\)t)<_ul1lC9#2ucHSLmf>Jkk7Bi-rB[]:-.$Mu[PU<H3
%5uY<^F@N./]rWA/?^</5Ab*tS?JZ0.fhXmWWI>IN9j>Gr"M[/A&X,+G^--UnMFS5o<e(:MLf>QAMO]DpX8qD?ia<-J`jr;djo"=*
%Y=-Hh2Hc(QC*Ba?#m`[fiZTt\$3cBo1Vj\g;#Qq[Mse2QSW':5F;*/3FF3L_>AWG.&4bNM-[cGCiWQ9[>Fo:<JP8nV3rrLV&TrQn
%L`+5OnU4P=3E'ruE$4..ign_:b9$XE#ru'l!`g>Bg-]jq_as((mfHX8:1/soEL%6"3WpDHrAB9`jE$Hp!+s-HlXDa%!B0`r&J.^I
%\\(AqZ32ZTQbhH*"mK8?$?_Y0W)6)YPr>_2R\Fm1+"I)u-"p56dPW`l3(AqVK1Y</o:$I#(poYt5VE-[UtC:4e.@'*>\*=IYK8WH
%W`%jF>oUVFp"AM;Smg1?.ac,B<bfQHHl`&Y+[\gt,:X&^R"ctC.^&pi7$H8*!C2KupZDOTTe4b>T<\,B0FKeJDZ\jS*W]Hrj9a>_
%&4KP)Rtb$I#XA8E/["sV+*HUs0ta+0`O]/K=XV@V"FCh1oGZE3eg\Q\Trt4eKG\i4TdO&Z_G-RMDd)PTEk&h<O_8O;*`_HR<RpmY
%f80X9DXZrgg6A-pN8;4K%Y?#SpZp3N/h7@/&0gZ/>iZ;i)-rf#F\5q)FoEf[+csl(*`<>D\<et[43Qt<ci9)"^nUN+!bH;`ePD!b
%R?-E*>A!()*[`29V=DP>b!<TZ#Ysjh^)6cQ_.H]Ya%+Xq5bTe?BV$n$F^ndRBi.a7-3EtHqf6M/,3#%@KcU^tO@jQdVcIO5],21r
%FDD8U:9ee_g&OI=dBtBVBb6O@$[<p@.Q0d3_m4)QS"<EbNIBo@^27(U]P36N?i6rU?d?f\(NVki*eOs9:/t:noIOIZ'?]bT#**PS
%a<#9Z)!BXC=74j%.7M4g,'7%ZLn444iqV)P):J%40YFem<fq$u`,TrQVio,LEMOV"Wi?iX69_8fTPTG'ScDS"m1W0K7Cbu^VAf9"
%HgUf8*8Q3J0*L=tkGnNd^#nE?3Q7%G<Wl9s$8^e^T^JKW_*)&?lfK`!`+Hb7\%`Wj/MJ#_E++gJ!P18#A+O[",L>0@\+/J8hY^-A
%pFI^2*$Th&DdRusi\%@VX+@btHGQfDhgR>b$1*+UJJbDFGBda+ip#)\&fg=YCrFA,-\*<D`V?7O"u/EtTcRHf=i#B*iC08)0eE6l
%9d,_1E!h`7Y-VJiQ(g(<]D0f?#U?e&_4ZIK4d/q]5RP#UYQ:a;XON4*H6kbpi5)G<#rA(,>3,\L>FjL,HYrbZJP?p'[VF_[$q9G^
%0"p:u6n>?1AR%CYQ*uT0*0agp5tr?3g0VCl6CJQ&Y["?6j_V6Q)4[mYkmd@DjRO(iO(@IX>C'dAZScrBSAM<Pa!<SU-@%`&AQ1't
%m@LLX]WWVIP_+-bPpT4#M,'WjFn\.;PhWA>`8+VC`BBh]?AT$8.&mLBd<9&+=JkN)<UO*ibre"]"m>B_dEHK;mRltNTQZm9Z)L5B
%hE+jFd6N[o*I?cHMrng_@7DSaaMEP\FU9F`!tIq8i>i0A_D^5iG;FM>U&\m^MeH;+-Y$*kV&r&_-2/A"7T<W]L'^i(JYkJhDd-r_
%Cim':'[on0XaAKnE%V:Y&X7a=XIe3j#?IZX[4RIgJN+m^7+C=k.S:R=q_ols9e2ZHa0kP]mlUPC&Y!7$gUN,Qg@IjnglH'u(!RHk
%XW9ldA.ij#g*11R&sXWq?e>Gpb_5,]-+V+Drer%If^#0%P)[H!dUf"Nnhg"cR$kEsAq0I#QZ-Qn_O8]7I/VeF!a=[f#cE6TJ+r_R
%7paqtVkJ&VR(3-/3:h!f_Bk^4'e`gI&2AP^9@oSag$s$H8B>Vq.up4Qn"NlL&mc61TjK^Z":7lMm&.hS;BQM`auiU"a5K7(2P)G+
%+0$-Q&#D\T[262g"H6aS*fDbC&/st`eMl!b?:F_>4)Xlq'+1n?W@WgfE?Z\3-@FS%T4rHoF*HZWMJ!D/l4:fhgYt>On-=r,Ul&@p
%6bH4<fq\"Q)*i(o+aX%7#Tf/o+9j7O2QT$pQ+*)$HKtHJk04F1fI["m,2qYMm_/J._?i]Zr;pUX>kBnN_bU_SP(G0!YMdG&`t)PQ
%D9rqJ@D78O)g+jW#_/^.Qith<\JK[L;js@p$A$^e":G.0kHR]<%g@#ZAkL]7B/:\@'V(%a8\1E,n1_mC3g_Oqlqs6'bU"oKaCjeI
%Ao2*^'763B_dRuB)9-6N]#BoD>2+KU:3-GoD",U[164LWQnCp6O)OAL">3rMZjF]9eVFjc&5q&"RqX#m[$1hjiJT2#*KL+$3ROBK
%P_*GOO+73s;&`p+!ojOt13j^9P%rO6$^`9K`04YESEQO&33OX-6Z,>.S80$fgZg(^8gQ^]ZQ0VG9Ob"=.Zq^=LP]@V+rpGhh83WS
%k(JS&Bd_[i'M).FX/N1++$-;NLT+*JI0Msk?IU!FPK`VtG?T'Q+6*be]D&O7&I:8jMN"To>qmM.h:T_@(['_,Fi&<TW$I;aW?g\a
%9C\,MBp#./?p[#3`OJrn)h&kQh@'lC([;Q/d(\VN?oL5(**b^gU$Fb$=NHe&Z%1.8"&@<*j-VNW%E8o)m%KWUD[[$*(dZ8;JJ8i%
%iEu@Yr:\_<m+.]H!\l1YaiUk:f9]kXfZ7T"oU.Y38k+kr)0"ZLoI7^i2hf-&,V&q)(sV-keo,3ke/j%176.0j2?5s*n44KH16Wek
%XHoRt2nna>F$i2Bg8RDk,(\&W*S7H6AY3IIe0aGS#YV[p$3_PM;O*p=7.??KdcCHHLD_,gl,7CLjVasdlG;[1q8[f.nDo3!2$*Kj
%N<&O43biA/8A<^SqPc9Hef%q**7mL<LtYQ$h<aJ!c'-%nMKA^0?Vscm=:(-K<ZG+j<C]Om?b0QV?O;0Im1mB(@J3oDp%d!/j_obo
%T+cI;ZhtAC.q8/B&Oe-3`t$.%8's6Lc4+Qa=#Q1*%]edrqKu/W3f)NS4?*U\$P:TW:eca]7N!Zs+>KqkcE33K&I^[f@ZlrfGaNL_
%Z'aUL1"CuZD61gKnPGXsRW9HZ(uk1e+u!(4Sq#R1mVC_P9cL\P;i!tAH%`O.1m,SUMXJ[LOG8TA;`l:[g[BI&e?is>lAIpMiHp*p
%[;LP#/ChY3ij.(HSk5&6ctP?hEMC)q;X?\C"lYJENN,?dRKs73M@a)";cBKm,fD3[ViIE8D*/7n7'oRq"Kj<?MhAE3;lAg5Q@I;b
%I?AkAA,f;8ih9]+r,S+F<j$0K?aARmDqnR3EeS7U3>r(NW09gGp^TB:D:VM[f?F5_*g#CVMu@nr`]Un>MkBnAS_nkTcA-;mh>Q\/
%Dp)-pdQ!=*C8NCk+GSo&0EE(R$E."A>X>3aktdKkK3,$MS0@8%<ek/PZbF$'#!FcMX<.pQ'K^s5472HThn$G;:XH`Romcmp++F7f
%pOB\^6MfG$If/Bd_n>VCJ+`d_s7?hOr6t]C,HOH39Emp,KT0V7h6d4,JRg7CFHu:l\%hs\huEMErp$]H.p)1rTT[BHq?p@GGcT]P
%_!NF;;mOrfoVWUPQga4Y#,Z_u<r8r$GcVsuCO"=YgBYqag9KJQpPHpsn%uj<a$9UA+7'NY;=`;qV9f!KiA7)A5O3%<4#Ue*fjX&m
%YO<pshYL\cK-&u+45]*,0UZeMMFs9Bp()c$=X4QLmI!%fj+i7Ae[+K,me?IXQQ,l#lW3"&3<+AqFULq2o$Wut-'g,"ehTkW^FWU(
%/6d=aXUK4UPl1Q)bLW:MQ_]EgD\bFm*7EG];>VVIf![95))oo'%`RM1j:f?1km!nQ1kjJDJl'W37?djXQ&:`qBco1(4@!IO.OGc(
%6;D4pl'55s%k'*B8sR146^89=E/L2QG6m?0K\GW2&Mhs7"g3a`TMQr9kK!!e>?)tA7o`07!L2Z%.#8AhpY,Z;e&S4q*Dmn33?ujP
%(#'r&(F`FN&=GdRc>Wd^5Z&"'-9^I!Xo/Ce6?P"TVgB50Jt6Hg=$=ORWp!L.=//Snk=6g+QZARKd.p`Sh5h/MF*[kn1a&QD)qN%3
%0U.spWU!O!RPK`"RPFrV9qWr.Z),IH#"K_DPH]6^KK(7Ek6U_eGU!JNE74n2^EnYR9MW"#\8X_A<dG(EpWQC=<C8W4Lsu%I@'G4[
%VR65O15h%N^OC68&d^_HlV!r>:lP?tnOmePde@sCs6O+QoutM3L@LD6Fk=)qAcmn8i@5.m.^;UUhB%>4Sh6taaZhueb(UV*(fE4:
%Q(efrr[^7]i<BsP4qfs>o9BX<+s23*Ugm['!$GT:75OgUU69dMpS5U%c:1^C9,74B,)F[Pm"tYgo4Adi_<b.+9<j^QWai'=8Ks:)
%^"[Y222l*N]L^`;lIgODR+ZacWf'iXMj<%lLh^I-&ID3rT_?K54:Y-cT9N01>9q:Dfq^5a<d\P:ZGH3a<28?$30`0kNs??$Y@OtM
%/D\`OAP=$RMMug?PG]pLQGr3B-:([h:EdmHb,=6n(C(B5(B5)ep>T8._aKtNl5`8O_[6QUbZ$'1$J?p5--BVl)+1\f:rW*VI>D!R
%\PFj7lsg:aY\"sAc9sGDS/0&k@8F%nmLjA*#q'[M!^SOhZNA2JL_p3YRcu7\YtC"$m`(?ZB+_5m=95r^BK'mi9ZU/@-E-uG9aNP(
%>X>qOoCHR;U..RD]5'Sl#\Y\P74_<.98Yg`;N7/:$1\<F7\MABC1nld4L3]KN'3p$YsG4i/J7*M/_cL.Qau$f+c=<10MW_Id)#cW
%e!6o8.m'3Lo=VV'nK<aG7ob-ZoKi"S1FD;eRWnEmHXJ@QfetJpRk8Fd`gh?[+htJh#$!ZY.o9*!H.1J)s'sl9AOA6)RLJ?RLq%+Z
%*p]VjDF).9A6,at&X/G^_Xp^SGl#:_niS"#=NWg!rCR^X7fU@-Eh?#Z]^8al_C'e]*aA"QJkT"c.[ecSO(QI4#+9cQ*HOC9eO+=Q
%1@U0iHr8X7+'6RSH]$u:7F!+6M=$<be+W-nI9T`3i@&k2hbIDWRG?Bh\S%+lU%9e+c24ASpUf&B:Uu&fd,<Y&%L:4e@)9%rbJ:4L
%!"6NUApSt2ha,dKIT[HaJ(4u&B?5H0:7?U$11tAiA;d;<2q,;Wlji@(A`0.SN-V4*9.g#K`S2VVnTM[<Bg5rW<q=:IcBm:Jq)*B%
%lmL"hdY'WqiRtkZaEG<[/cOmM4W^B1`t:'dgNY@l5o#L8,/50B*ncU@T627-[EGB_g[hI)55Xsk_=6Pq$F<p-<u8XD(720e]Z<n#
%jmYG`hf;/sYBOuo,(8`>Ip%mT%LN)54IbUL"[E1)bU`qF#/?G5]0qqejR33&_SN%2HqEX$G(tfSF&m.N!U'\F;2-Z.kgl;((gXt@
%ja5VAU&lN[$tkl>_1nVnN2fZ^FsI<3ENY>mKfSTJTmU8-&kE)`*bH567<O&c%XLIi;4NbJHVu,:l#^E7dJ7]rF=JIT4f!D&2o,fU
%EkV:,J8K>9H30X.FZ#n7PeaoW_G+u-(T.e"g?+qRA?quPi3A]ad_ch#QAS;'^6*/%n9YM&-:TSKn&l65&9>l`^lA9mfa<SjM'<Hs
%9YOVn6A49&l[T3V:mbPq#Dn9Y+eT'1.,[[)SBP'poXsQ:AHC2$8;Q78&Udi+hjI;AdW$A<C8)F*B)0hk4UP<5G'3CcQRGrMRgRh`
%a3dEAG=gS]"&E13_U=`R*(kq4Y@McM]I\l?U(\cU`1YHb+?4#qL010fHec%%=`5RCL:L-D`#j]i&>Dfg2?oi"2pIJK.aD/tKqO#r
%TcLZmC)Tu@74m"D;o>Z[khN>7,5kWqY@A+PS_ud"=4L;Jc+bmSYW*!"lpHh98TPCYpL"8(VmiPo:.%f@#-8;5H\tE&oFVYsg0U24
%[Od%).FC[doTcp7.QbT-\upjkAP0"?F0,OL14jr_S>MpR$!*RYFh4LpEPLY?<MGE-X7DWIG"Ui9N*5o`5MTOd5'cucM)W]q[kC,7
%p9o=]FT2+D8.%GF!piQTOcTk0[(82GfUM,&6/@U+M&4BkS,E1u8LfWBJA,rcQ6_0H$,(`"`$>nrr8JB=a\2W&cV"?*Ih?SiY;e3"
%hWGs4G@pEpnJH0.k0]sK0$aNYV&o"Yo^$$pjL-=hFgS\,PS`0/Ps);in*Eli!,Fb\NTb'g%!;5YRo+B!Ik6S3?$@'&]8%%Q2qcJr
%il4U5V-Qb7p[VFq]et:!RZlC-FGKIO#i1a3BtNtPSW3W[jSm<WgHVcAT$rD]DaO8qp`uE]:_)1(-5"@bTfC\_#G77tc<Ue0nFUl$
%.V3IlfISYRcM%jC4V*2)gAsAL1qB<`9HBXeU[@(`Wo2HDHHIq?#k`H8$7oF7Fn(SaDuB%B)]u\-GOom_i6V9",deFCU_,X0agk49
%R@g\,*C%2$+[[:96LDX0@bu*V-8lr>[*/B6V5SXDF4]J.fD0BD"N%p<G^.fU\DBl&^12Z,[Yle+2n;%G'cP_JYI89&pX5(5<$toh
%]`!680AC")FQ$;^K[!:\_PWM^D40MN1=H'O/5<8BX_J3_E;SVZD7jbQ185i)n[k-+I/$UOS+"mJ_UH9tMB<kWW:0N5#Z=1)f&hM*
%H$1:PG8E#-mHU`5:1YpD]:"@>EKUL-I'JGWA*1kp0o*C7k:8W9qcs@+];Iq?__LTKAt/=cQG.E%2D[9ePd#e5g#"$*lIbO04`,,m
%^[aPbo9K:0meu1S%_D&dY<KlhW<NM4I,*@_5t3OZ%ppGSmjMP,V'$?(nbVi"hlbM(r:mDO]mT-5cgG`O'1M"\,IL\c_s.'[1"jEB
%Y(mJs:Cs5:Ie\bKY%X;Z'G[.R_&/j95,3dKmEaC-86-HQ\3)ATo6)MKnnr+#a(&?!Fq%%ue2kn6I$4^(8.+Ol`uU,NGJ7^>^9X@M
%^3eXQG2;Cqs*Aomh^sr@p3)&!fNYcC5a?b5K%(s6l"/Hm"4W)%M+'9_P\k%Y1#LQ.F3"9-AOiOG3ebuCE<Je&OF$Y=S+5OD.@XJr
%7.#B%#J1j&hf`h\q.Y39rfus*T<IWd]D%AuI.,frr_$@5`dX?u58dED@?KpeGZ"*grT+hCE*^%ZD]ZFY],,C5kh#dX?dbT/-O'q%
%cZu&l)FjjQ$QBf%8Y_)^h&^FnY2@Ll)FEXQg"G<hq\W6/(lR]DR#>]C@C@8V^tm31b0uDpT`e[iIYXGSC=AW-4-MJ1A;X*l,?/&g
%70EsSlQi<6E@q<-X<m1m%Bu0EN[8dDCb?C:Q2h@KV2gei%lecuqJGQo$HXH=':Bc[i+0>O;VLX<&P]UC_S6?s"N'C@DO0VrcI?h-
%arLl^*ZD:X/l<Q`=V;Wf?\ZV5lAc$"WmS76VsGBQo-0/TLatlL^`C6`<Rk4B9k!>$pM#*SL)JS/bhjpR=c;Lmd,[SnN1!l6!d`Js
%9#13i_iL.:S<R8Sg&41m-0H,"goIn#P=hB0b)]WqNfb7#j4,fr9Hgqk2M/iI4JG$+.+!E1SG:*rQ1t,8Joh1UPp,r_F=3gk1`+5-
%6r*td$99q4A/3<_S13q/rU0[3]fX7&9a8i\Z1)JYp`8fsY;Hj>DBAes*fWM2..SlEQ0'QKi>W%:bXsP!N;?Ks3Y4r#+K]$'][Q(G
%E8%9"le=>u>RT=c69[&Yhc.<'5-Vj#nM=qgjseqF7O9Fad.s3sYp?W3l>AY12)_Zu6RLUMPH``Fq+AQ.\ob3!5T&u#!9k6r-jF@'
%+LGT<6rGfnHDfo:5!i6374CrKbe!^BfIjq>HB^7,Z5>"(Z__.TRR68QA4*V!Kj6lt$'"WmV(gOa<EhGRnWKi)/?Q#ai&(\DQV*<V
%qKQ1M6/kN+BED;[q2%EGoD"USh.2'985GE(FHPJE\YtHDXiPQT#^:O5(j[m4B?+&j#A1-q]oVbZ(W-7rXfS::6?FBeq@*9c0%i[9
%L"8R&XS(s/I(l&WOCPQJ7^aE68K3c9-C++X]5&k&?4ZY/J%]-H!u4o!rU/s;hW<2%LGsL/;6`IJn2V@Bd?eVn+A4_'"4hk#NXQJG
%"=[lOS!]GTW['pudqdXYn9$Bnmfm:8:!)jm$9U^U!*i_\$<"*#84$i(b[3t>S4^aVo9J,$n*Wr0gBmKk?RU4bDp/Xj/INF2!Qi[/
%!1Kqt><CB/Whr1#"rUC3m^2iR^eI,>`_=7q"CI?K["Sd+!AhK%T*"3c:r,%go38;KLbn0/F\Z?[ZsJF.en\AC#:lqi!EB2e+[gRq
%FV>bRp?.jZO]:Ne[Nu(6('PES8.auNL6P#PnBoNJALle?^nPl2h;89%<](9E"qVmP8cHQX`pG<O,n6sH*?g3YAdUqXm9qL*6bFo\
%UIUW(o$LQ?p*@h<[EW]*A14Ym:EaE'$A(<L5:Nm+gMk3"'!E'PFi[lh![L0M8P[N)o88;Wc0p5lF2k+)d([Q`!F@V>5nKL!O;$Oa
%\.ShiX:n9\/BOb3(1,'Jh-a,BeJ<3,0dLpNT9#"Eo)unIBkH)#Z9rkHp;eS[%/<Zhh&J7SS=.i/aLS#G(o^FhSdV6Bs'_,+/3J_p
%ek)(f;jL[23?&pMlUYcbG:K+PJd;V^Z.'M12b#Dilub8mBS,.VN0u)6ITV]l$=ZHN@saL(oslE6WEFU-I"bgqF9K=XmVqHln,.50
%P"ue&!;>ri6:HTK8-Z3Q/dr280Of[sW'L`'lS%jpQk)(5E&>b78[_CKimAe!Uh)j!L05hOP-1a?,ffS]iE<GR[cMYIfiZ<-BNb,C
%-bk$+aXT^r9tjY>-g?]:Ca:j2OFMCbs7ZIlErA'=$'jqu&Pn"2fYW0'BMe27.d5IqQXtjd2IoX5KD5Cqr/['?)OF<+HP=g^K`Lp9
%<g8na%52[m6=oZlp8106ZN@.X!IstK-'`_(S-Gi(C1+6nIS$I<iC[`W*;q"`B-RSTB<OOUg9QO&Oi+j!_V60.9P^sPB-&Y3APZ9$
%_.k_R2C4!`rB]F^2Y]=\VUU'BGcBNqK2)H^rHJ2&e$"8ma,g8uO+7#<O+7$'s7s]bs**r2k0WeYW9ZYFC[AY4lbEAGGG!]8Irc'O
%i2j\ZdI?e_+8K:Dao:tJbk<]un3$[4VuQVN_p]]VAUjV^^Q`+,97Qe2=o*OU4NB+$a*/`ncgO>CJhi@<JOffqOilFRF!+k!JISmJ
%47n*HXLZIbeA7X+WF.XaqMC.RTF;[2fa"4`RLU!#Q_ctY>"!J3YMe\H[\j`Gm/HO;@=c0$8hO(l(eUf7Car"H1OaY8W0h:)2$@'5
%#U5<1fVcJ1><5#U<4n?eP)[%n7HZp%(FNSmE`iMY[AII`D;1V7+Oq5[K`O8[Z)orAg:<E'JWZ#sIm!%/WuuO0O[8T5H@^#U#(/+u
%kXa?c#.b3)HOVW/=8P6a-J0KRjq?)s70$9i.#L5#Z(m.k#%N,$%;T;!$K?_+bfqO6lJ>%?+il:kPm9Cel9m0=CcDSE2lH(;<T(e!
%5VeX-LC/_9VP7(Ld'](u&Yo`-eK/`p)WCrq2(d44=OWhu7\.d8:!+%0gXg!9s1G8DHhaRm'U@;d;S[EL^UP<!\/kT]\'A@9NrRA[
%N]4-:=)LO01G!5CJi@6qGuc,3icjN9m0$X:.;*_618XF`'ZD'0#rUE#d]TBRSZlS)F!I3Qre&YuW-j[.GD%]fMMK\IrJ>R)%16:B
%HE!H-A85O.CTJ&0L^J0<6<GFn"P#i8%`tOci75lg@YCc"+7\Y.f41b.ROXsW[Gp8d&\?"4rq$K4C[9.^Q=01D1WZrE2;hpkGZ>>U
%Q+C66_PF?t^s%C,(&[?QQ2)Hr'Z;`"e]\C^;&+DRhV(+7hS#nYRP06,!-CbU<4*.B=4'V8^"q*c0$&f#%M7,oP3T?Pq^5hM]KTlP
%jF1o?-C!E[`JaN3"[0`'\K(f;=.gfcZ+D!hAb\Dp$^;n?*(YB)hS?Wg@(16'F3&(#eLFab+n+VmEJ.!:.t4XMS5^[;6=L-_0'Vi:
%@?QD;qsNG+g*\3j$h-(i&L'HZ3:i';ne\oTr8OjViiW.<XaHOJs4U[#Q(:IDn82%sPmU?S*!?VQ"<tK&,7b*)egEQj;HqI&%\OX&
%8JT*c`fDC:$Y:qF8E(b$6GQ4O^ISdM'.^VO>b/+-16;ErL9r\R4;=4-ooOn^:CmOI.2BI=[U#[q\VFb]\HoPQ&^kgsakVNiP"??V
%]$r4c;oo_%dqG,B(sk%T@te#=`ftR@!;>Uc7"J5Y/[D&WFV^2JBO<hp0c-eTZI6";glF[1E@2?>b5H/"aPe<A$l[,:V"AL$dMlT>
%F>).^m#kIV\AXkp?j^GokhE)?&ETJVNVVgDjC!AH%]L(0k4k8=_L*46korI*q;ab='SXb[]_/4APIiKe1I.RX9S,a,bso.K,-KM0
%=J2?'0*TjVLqIi&Y(,/%gRXKU7fB/9l)N'Vkdq'A)@MEVK\oPcB1$qQaRtHine\o"r8Nt=ifsB#P^Jl&s2led*'kJsTIrS7pU_Hc
%KoIXFN_#]'CjcMF$E/V3a4XWajiA@s.Y.VIadoC=r1dfB`CeC&)d^OiZSo(`g)\KMiM[[#P"FE_S4t+"Dgo,YZ`,d3=aOpS;,CKH
%q&qiKp,41$cIVTV59Ht2'/'kVGJp&$oR6!ufiJ_5+'t'e*HD+m^MeuZlStAZ-p\q=q9IbaLFB`@+JfgGfA6`*%2_#U3L_N!l*O>n
%B4JaK`@X,8VP']E[aX>lcDHZ7QTlGbH9oZ`]X)59L+;Qhq&)9CH5F5KZgmVCcU[TX`62(3?#cbq^O?d:-RstZ8;c,Qd%^VIac'Pp
%;s[lV+MgP+(mFoCq'mUL?Rtm9iB+gO`18QRrc%J$9K`%7s8*o<o_n6NhoH0<V3(Nj/P&nCq0Wi98;>3g4hqWWa;iYnO"c7"V5Y9I
%'a,1_GYE)</T';l-GkBt+`Fo8f`1)FeV,Zl)=lDZo:Q$Pq9T(g9hb(<BujM.Qp0[`L<k9Or1'[U8OKp(rr?cS>@6`$Z%i0[;mO^H
%2HfXt.])N0_$=WF<\0mN_K%Pu1TA_X59HsERc>%*2i*AkY!PQPStlfjIq<P-:B]aQ8GZqGp5K^7kf$X(YBN4dY".hPgUhF>Zh<nK
%cUW%LWZZUK5=HIjGu.&<^!4MA-Y[r!Mci6gf#EVnhf%7jme,[;j3IVY*Q.StFCZKI116PD08e`Dh(kpU9eWWsq^o_21Y-X+.rH5I
%!fh-fYq;_4Y2lX")/n`ZE;7\9gYFMe``LhKW&=u@TDqW())(KTImtG*3l'8p(WaDCl'9`HX!97JB<2Dm_;7e#U?+hL!op#G;tdX^
%>]cGJnN5mr.s'c.p9];ZHI+s34-qn[C`e_A^R<bEWe(N^1VoaFeEu"C%]7F=hD7A<c!+EH%pE7ZVaoA'j)[-R;@3o^fXF6jW7k7N
%?a\X[97?ZQS.HGBhK*[W"NX(PfaU/;h_RJ=c,_B-OM#qgR42tH;J4b)6PIaWI3[`Yj^9^jHj46Bfq,R[mG@N-q>&1G>.].0AMi3,
%fBkAB`[nE]f5]kGj""!m=DGE^3NO^D[q"<<8kbR'UUF&22S2oX0ZtL&o?h<^:D=l;T*(;nMV%eWD75MG#&ImtP8$u%_H=ud82#fU
%r:6YsmII,uXNsE&f$aM<c=>g.TDB@epK(Y#7;iq42CEP/#P4At1!bJTPr,G]SAYEVW1lE,_KV8#3R*CboCL?<04nO3@XA_+4VUNV
%?YZoq4>pV(Y;m2i(Kt`h@b#OVRVYdRgNN%3chr0%?EN$JC$V%2rVD_DY2H&.]>j%j7=0_lYF;U,c*0Th[a#PK[.ac&DTmrqM7U1U
%X6Uelo>-l'm-X1Ss-1H9`+I'hKf7]+j6LVq3YNLHpY0:K8N4n:e+KBID>0e!bg/fNf$`B,c9pPcO8bA4bP&9)p+=[\Q#'2:HV!Hq
%Ks^]Vj.M'g#rFib"ZoYeBg+Y*IE223[$'#NG/s2Q]FN@rq=6^^e&U:VT8hQt+XPgp<"A<sj7=K*[`^2X1Huu+>8t&llit7B:\n_7
%G1-fgjr3s+I=b@iH6:k4i_O:b#`4F&`L4ROQIV:e/NFd5hF?ifN.l&W@t24uX*P^Q_<tG+:!o7g][pcnGh%btcA`-_Q[!Y:8i].?
%]Pm+MHe\OZn(F>:ls$Ob&)2En:B,cQ^*PUfihAk.7]NnBr*Usu5Da>nJ6GYdQf`JiRGi"peeseq^@f+)DghOE]A*?RL,UqT>$RT$
%CF&[GV]ok9W4S1UKD7h)EVKPERZ#t(3F2!f-m&AtcnBV0ce%l(0<*?JH(5.7!1<33m;2]FCs1N2/Ghi^^)V#gc#'ShkJQ<i`n``6
%ZThgMcOJbpma=PuqKXg.<E/>)U2jJAVb^^tcHO>;X.tibiVKfTcmPcmmEP]]1r@QnSbrGirV=Um79liS?QOuK.bV/G]5>QK=)HXW
%l6s.Mb.@1fP7#ENSc/&f]lF(tp[$4-p2e.GO1Tf048o'nYipc+RD/\.[Y(Q_I*o2n=+@`lka\ii/34<tqVB?(5'65lp?+lb`jOWb
%ZEil8madFU8(u_,on3:sgGSZq&qu!k3F!NN3<_j\XWQ0gkA,DEag'EXm;W<;ODXsKhJG&t]P>W%hpr=-pW&b&k`M4-meLi-j6iK,
%fq5J7kD&FIGOD2PrVRHcGjfHaQ`koA5[UW6ZhPX1&)Q^-:[XUZ[sn)BXUgu7^\psa0un7QZe]<ALprA;[8sJ$&+!8,$*eB#-V90D
%%i9b(<=HIF_3SEIRG7;Tr-U>ZMG9$"j[miHlZCnCXZ#4[X&a%[+6sVPpsJkaP7#b4poKBfs0B,bkG*08m/Aa&?Fe[ogE)4GZREoG
%>PT%+<cVM*!a\'3p$8k1n<*#l-FCD.d0Q@JFGZg*p?.&K!M'LfD"fdYA@'4hcS'H"IGD<kCfU4+D-`1:YDE91Sal;m0"0fPhQoFR
%g!:,A4RDQcDgM.2?u7pj?E!#S4$Rs[XaMq8rG_R9>0`JKYV!S.j**06q!`9H2h-\_oVW)gZjQ%][<Q'km2Lp?Pp>aJ4Q']!fc&"`
%^:+kMp72Y6()5*chF*lR9Fh-\>+Z>V5*9gIkM&@ML]3r0?!_-LI,)L2AcrJHH%IFK2e0b5W.a$Q&(m:nmruhKI'@M5]0,-/$$Z78
%%#+SKTM-jCZU/0D;k)52@.EM)"V.tTLbDBSfm;bVW*]ESMna1QmH4hC^JsHrcYp^m_Q8]Pe>fnY.R'.m4"Fejk-.9m"AG-qosdq5
%b;4q0IZ%)@)>48"(0jdlKWBsF(7GJMW-ReZjs`Bo/RmB+OG;cdN'^<,fMS8Yg\M6rAi:GUoLEt5'F7`6^II/g;:"^EKC_p?E^l.l
%4@/ERAelsGP:0W_Ti2c-L9-rMW)-H3EYobP_ZdtuKfBI[KG1^+&lc'."7_:Er@:c>3YUYZ=k&kD7G;6330_8HCi#d4@XX*ah\>p-
%31m/GP'*HGn)7gVoM_M3(9aht4uL8g[uL>H#l.e1C8LctlLM?!BnM1'MA!<fWNEE=cc'Zc-QsX7Y:bT6&qRmTjmP$5mG@C0i]HmX
%p'T,O?!Rm$PmMTCp8.LkZ4V#dHB/;E-/UOeJ%F9DD+mD.7o`n,q(l-NC9F['XZ$B,V\FH70YSe+C+e/&D/;,oa;=LV).g!IWkns]
%EIqCAYCKe.:tlFrL&be$0%ZgDU,f8lj$\Z'Wj>14.MLEAAqB2M<M>G(+mg._?Pu>q9FtaL8r9+*(,X@g1Z$HD@/Ul:c<blrP+lf/
%^,67p(cAb=C->2q9%n3#CPgjR\HsZCq1'r"Deb)2]=D-(15>)pqa1pjOD/`?Abi_Q2ubH5h[Iej='Bl%]2^,Ph%N1*Fr.1:1S&k*
%HZL9=>F+[Rd5M].\"/qIZ,7Wd'!&(\=6CjK"MVCB9+T=J<>.?9ZKLN-"L/rIMU&f:_2gB@LCETL6:r(BI+,!JXD)V_4Y$J1eto2$
%Q@pF4d+M/4r6i"jauZ?.jEH<$5RY8=9sG+TVEr]KS2E9GgICkeG0l3/h"?QahmJdPV`PZN1K;0*JYLZlCq!sE<<)?Fom,A5_F:dB
%lMfl"OT&c&Ct)9HG0hOneL()+c^<(<^]MDLft;!8<s\kIPpe+91g4Du@A7F.56OqM2leNfer7V&A='^pE`0bbUQ,?g=@1ff^fmVf
%T**QHq5CC;%X+!FFIKpu7Y/Y[I&P;oAA#^^(MXkh]m,B;,Eo?N?)CRX=#25UkekB@TkaXknrEQ3@jtQ(jdd7\<!cSi3888L'">^b
%[3_l1R$oi5DO6_$Y=MlPBH(X\1=DJ,]@T^(Q?V:DGgO-b.T\[#.kpT+>D&$SL'F^LhmVh@=b;GTLnWe8_%!*o(Z+,*dK#lGaP]Jr
%]31Eb92"%5Cb>4OdaBVSDXVpN]-&*^=J$+)g]j]rG7RPBPL<Lp\(OFs%r]0bnU1YR+tOF@CNK6UmiJbjmG@Anp%`"OR^d^cee*-&
%nSTO&:qp7XT$]Y&@NPT'R\--f0'Js<NiG9SU*POn;09SMQOidGIkZ([)Ki;f/E,>n^->`GDeTH[:@[SO/KB;ZP.b#T+26<<rG_O8
%kDm4(h627/o4Pc.nS^q>qfPBW.rN?;IYM*%\b+Ob_<69\m?sTAgA8cB$&mHtEOZYjR3*!u?/Ln7rT`K-k^Qu)>eQjWk=ZO9H1\i>
%?G>m2X7j$Zb65i2GFt.B%`'I`7$m99q:MVc;a`Y+`'G+<l\t*g:N<=h%oNEB'iG_r'1Z<bpQbG)$>VoWh4d:am7/@!4FsXS?/eif
%s+.:5jaa5f-?!bu\iLR@q!?-ajt9>/o`OD&g*3J`bo,H!''p!9e$q51@>K-amTC](J@e'G7"\B[(nC"Nr0=Uu]kD0lj&I<\kQ-jj
%'1u6/K[mC_f4Q71E;]*g,Gjj'7uiDZN8*jgB5$-*jpK)XZ#Smc(gA:XW"ZiL*PZ%VWVF>.oGfF\-c?^75Du_7PHHHU$>^]Y\bLJO
%r>d93!1SU2q#qjnlFLl/gk]ajKs&=OlLZXtfbGI6^VUM$Vrch.A=fGGMlUMDQL'DO)a+4ZI"IFYi]<IeHM8D_/md^]8[tt)FY9Sa
%idCFE3gN^343,UR4O8-`Fr.p_)H*RLnFQ,f5Io.%/fMZ\FpR^>nGN4Ys5-%HiQL6kb^[@b5*S:e^"M<@r?)'W5Q"qsEZo.ufoPXr
%oC^/X%tDn^mTt2fcKOb6M(IuS]AAh@hS8=4rU]LXoZmceELW.:hS";@"V-mf9//%0^FI0H"F@h3r$?mfDdCG5HAk=4jW7WMVUUd`
%;Vl15h=/BsEZY6'1R'+PCZ/gK/7MKol5]%aM"TDWDRa04'V'aidZ3NaQs^PYeB/Re_So6C:OiUt?Fm>/i"i_Ag#eB)*7iGE[pqqE
%)T#*0!p0q!F$uCK,V06.:sn-PhjF@"&RjVJj(()"95B&cF3p(gZ[,)49[f^gd@i#1r3f8/\FY6td$*^q[4:Z).i<ZTCV\4pa"S*s
%5_;ATd4+E+kQibW;Aak;-c&+BQ&pFA0!7?rC0TEC+mWsu!uZTLCG.Q3c-@8Rm7iEHUW952JOp9[Y%'WF)[L?,XZ)C>C;+CTZ:gN^
%<$7[*m*SgLF&PQfa:9BSHYkb).1J-`6bQI^;?M^98Cf)Ej]:-i]-%u:+K`;02<^\Y:po+(0M9Sj[^rrLG`?P/3!g7VLdOn['q%<"
%GhGb%/P2rSpku0)ZU>ar&&t2@L^/ttloG(2)tWY>&5s_tgDk(#^]qcS0kio2qIKsP&<lk\/$ZBVf/jG/MM1eh&5&;YTMX7O-%KX-
%eInkR?_b3@q#L,6F-bmsofjGH6+g6u2oMPRqBFqk&Qf@NaLDkdi87&PaPhbpn&seQR$8=tmiP<!rmOb-0=+CIlq[pa&_b*p]T'qJ
%[&8HN!gFM,"sV0ok33Va=\(h8RMCVl]:jJAbF0>D&h+*>jrikHP+!W]j<VdfQ@SD(8e#R_goa>C%.+2i]gbb(+L:Ui>J1s!5nYVC
%EH'&[aJm8<SC2.aqIfC:XBR#:5T4r8HEJDQ5-1ALTRNe@kHtI-)aIKD6V3,L-YS5W?.)W8q$B&@>?+fZ1#_e*O&1mjcl01P7-'=0
%_U)E#8L68j>]_)M#Fk'/Oh^NRqh.L6Eb`]CXqFHmdjH"oW+;tap*+_7qFTjUb'u=[+5ZW:g3P<mVi2gV/IC]9<Y0iTnl2^IH8C$e
%ot#+5FAc\F1LKpV<$[+fZ.h7F<\pAR!%0\=#H&PTgT;'h3;.?HX%gu@E"C2(1kTIg@HJ\IB8]<dhCRUQkY?6`C4Nc$JldDj6iu<N
%&r:O=1?8(4lVA;Y=`s/j\]?(Z)o'kWDsjlK!p$eW%s46FBMSa4XNAGN/;HBpbdEtE0'>>\@G9IA^U`\_5&g,<B0V%E/f,$DN8RMm
%>l<$>bec+,GjblXBl>'!5M]0UA:%HSiPMWd2+tNHEPlCR8_V&ApOPsB!2e^J6)$aPoN7GH.a3S,[VYeDBBSO.F:M@i*b<ofm*'Vd
%ga+L?]1V3,JH8L[WWFcr#iE%pIS/9A/gJs271b*XY4cO"!diKrj5(\b$\=b/U!HJCM'(H'V`fl><5h$++_#B?QU77_Gdh:sp(Q'n
%4#^5ZKIp@k-ZP;9c/.(Ucs`#Fakfmp\M4I%m.mR8rP=%(2gY);<YDtI89L*F2A>)0p;6M,7cFgc3FX(jJ)jmuSD0PkgXkFJou8!>
%iUn2s_0b'.EUY:S/Vk[$._RrK`<Irr,'\Xm!do5@kY7;l:1-.>_HjTs:<@deVZO<9TqkNBoIIF.Gd/1,!4l/^JV2ATP$_t9Dq#3r
%'F0qCi^MQZdTVs82F6LnbL2%RP4_K-@oJ:Mfdo*?ULH3q2Z22#2h#LJQF_bR1p!>+=J)irG_`VhZh+QrVJm__RPWV`1s$"b%C0LA
%<;MIo]c3CgaE_a!m?=l/*'F,flj[7T>"n:[3SBj^A0\cPaW@Iq)9+R=reZ]!b>`frmc]0ZZtNtqfK,pk;Ueu$jO'h91ci-C;Hg`j
%6su8b.)1WB`i/=/9ojWq+8.:c[F2<^@o<IsI.ZWHCEh4!@EM_A-PXWXD=0)Oe&qAro)hRRqLI(_mu"$bE?B?B0V=H(i>lr0qf$Ir
%GqG"Vm1_=i:`A_<pNeuF<ljA0UCut;G>QK?YL87e<O2\`@Z'60V$&D7*@`9;]!4ZJ':j1(7J@9Ac)ubN1ND[\P]]:*c@,-ChPqDk
%]DLOn=luR<DPp;r4@@nEK2Z4@p`n]W6!')n&IPs)),HObJ#dN4\>KLcV,3,UKd2G9<$\M]M7M7%fDI82^M8-UC0H]5*stL^?p<A(
%NQ![YGl$Kc3A?Sn-mEPeYf_mX^52Ma#O%"JpZb`1[%.+;Dj1>qAEiJY_<_r--T89k=1AglWO8j8=7hfh.?u:/h%?&.;[CGFS9sPM
%&qrh@"5&)pWI/l?AfPVHIANAp\g2=Dl?Ttmi,A"/%4]raLLEh!J`2"ZG3.5Z[oq#.<!>P$^0JbkKV.;dqT\gcj7Rbkj/)/>g;<j*
%[_'<HV:Y4^Sb)Uh%ldm6)mirp6DhZRCtkXBHA&AU!ZFH67qQk:5-/NmGF8b"#pNX-LK!k5I2&`(SeA<YJNGhVa_(_=5g<a0+-LTT
%9G\4RJ5IMY5Zp#k!R-9B*KF,W1.bLpd_eP<2XY5grL+DCmq(IHn7:]nbG[crFNf)nXTTFKrjZ-8PC`lBTaDgaZ#^\i<Bk[g?a-0t
%M[J29V+N#VU``HaJ6Gm2.4IM,mEG>cAkQ@E)q(a3629,_RhRoJ5Z*r*%Km-Z5_Mb:"hkUn,>Ndf8ob4n]k@&]!2R8`Z`'9jB<3N7
%/o"QL%X)A:W*M-uCTU>8O!um]-NUlY#6EX!>&ij"f-.7gfH8E-,d<1!'P.VKUmq)&MfXRgqcXkld1\f6=>"10Rq!h"'Lt:Mg7mD<
%!`^NPBo^t0J<S=d9hR(7f.O96*&]EuDoCJV_t5]++p@hV+t2bn$g<0<cOg:T_c(E_kOm5?bpo7A__t<7&R*Tl84i,G7UiK1\>TfH
%A^R:2Sue!8nS)'*0<ju7$#aA%D@kj(LJ`;e?LRqVD-4!+J3AdVP<^kd5)l=?MI.gp'.lO$$5Su$M3#L[1dJ5I*%Elh7pCBo;Ue('
%`C'tYDZ_>fT4d.,RW.#:<QdN\LL,C*CN.fmY<`,q<>\.LX&iit"Q/hkc6s$Rg%lLe+71(g"+2=>"D*S>:pQZ1F`UakBAO/CQ_i;=
%[Z!W1Q\^^9q-L8:CnSOI<H)<4Y9NUgoFMf:%TQ&4DF>ETk&8>E79:>6S-[t3Q+kOuAVpD:1%S84d6;(r7::,kSae>&T67duFYN=K
%5_m:!EjlE;=TpGF]L6"\#WYfOBi`1h89O7]"-l-J`-L9-<SBD\&3jX4_,gn6`=A(mLdfgtK3Z,P/Uo)"h$2!-LY]Dq+_P0`L<=2j
%e[:t.Us]<YE%5<uk^qYIa0Lm%jDm;[&KRrL&"79B'pM]^E[IcYILn-]%igRO)5/53Rc^2^8(R.;Ffh:H3DHc?E0Q3Pa1Gdk&2.]k
%Z`cfI.HCaSGg/]sLKW^l8WeLF,@Fu_oQDL5%Z0&VD>C[8hqC*8SA9ZK-OGKZ2BS"rC(:a/jF>hq0s@`-h[Qqp3OA)XB+Jn2#B#%b
%iHi&Kg5bt7BW%o3?[A+G"aLl(qsZ5AUX@sWMSFZ`f;5UF+Y2>qoMZoJUKt0!e9geJ&$gf"(ioj%LnM[]Oa'p>,GShp#U:`[-25Aq
%_TFHQJ/o\^_qad#SFCh!@hQHD1)1;R$<dR5Li%AQ&$"*T_(4`RMMYQ2$NWB$XXb(0"@Xq4c/%9U1()g&(-%"l\'8m')*AS)>!sOW
%QIoXjR.;Mq2$&+eP]"s@H)N]]4`^n`_WmRPJek=DiN1#(0SCCkOV+ns."6&$OAu:AWj$[llKYMioue#[n-Dj=Whq(@\$AVlm4;rM
%Wrb:R)lr#P"GHaca+Q9O.1?QnKo)mL=@q)(]-en$cJ<cK$[_'$9n_BWW,KLYi>E0GZ$ho3H?LRma0J%!Zn=iYTR9b`.*;?nqJ0AN
%)bgMZ%V^d^$%MF<-Mdd;>b0d5V^0hV.S(aSC%He>XbN+3USgT<0"!.R>"`lkX9T3FEr&8bBqPWD>:XWnceA[26*8Bso-[=(-8)I6
%7A"-1%\YGCjFBItfhn6-h\h]jPU!I]pU`1()N9?!$(</LVR^V,,=PrJ4;(5!g!Ti<f+a&H`"*Jff;T6)!TIH14Nsq'*"EkjPDkFr
%]ok<Q,)(QSqD,)UeG>Z/\BQ>`S?Rm?UJd@_YndLdJ>We!e'3m!;()N]Qn&<Xp7515VJWBmoQB`16*[aa4`@#Eao0L&I0O>M9arGD
%lUhYn);5_]T)P:7l'4r?XXZ,UR7ueuDY:RcVoZ402^kHCO<h-SP+J^F-_2_5JlGq-RF'6h?K[EkKG"q;e4bd]XVJ.$CI&u(i)>IH
%!!<NNOeZ\?$[LQrqL)8<b\*+\+/a.-[dHS_p2G)!12.3(EO:pS0]?*,-jOB*Ys27nF7Crn*S?dG?-N09g3NGr'8^W5gMl.KG-C/&
%o&LjBIMGFRQYup'RN./W30Lhe"T?bq`Wr/D,>5V\Id4(SLOM*6aSAmIrA'FOf'onJ:U6XMV2]_+(b73ra^L;05?0#ofiBKnn6Io@
%YUYcWLnlKRS=1o@QKpESn=mFs,21>N6Ma^Fi"Kaq,1[(9##T*J`f@MKn55Ph[C.Z^P6s"5OO.-0d;:\mn^IffefcL/D<q(R`#;(U
%3D;uhl9k#2P!2JmPJT0em<>#tXaPLeYarV'f&P06ii0:i79XlE%d>6oRQsFa06[\;cMQqR(tLNM^\Kl5^(H$'/gg7\<:dT6pn]pS
%YsKKo+5c)ZDuNI`pBu6;_Q:tE]r#!KIL6o_-q4qpp169;c3Kc^_,VP]iVnEW[fP[O5!Fc)fl8V:juF-jDUdd1&)=#@GGWHEU\l7#
%.[hM-ePpWU[`A[$?s?aD#$D&K:on@`eRZn;l1qc-:f+(QW#E<;EBEEE^fKR`[Q3W]-c)FMqXk,MY3S_n%o)=]SM98f7%EesLa)N"
%+caPdThFpr)pB6LoX(?i"&":O4d%@t;=e%tiGC@tjc$+X7.2B7rH"XDBXUMf1VI5_73M5JJdnBLXZ(d0i=&Y*aTs_%=J_joFI/HU
%!4&CUGT6qZ2:o%VUML:f<&=_HWP[!#20NFEe]:m$&AarA3ii]Ee:$deT8+fq?O/69-TX+!OuQ%4*,a\)I+1EB^b)kT<o#1$biLfX
%jgOC8Y5XYA!E;lY;E:Vb/[f`Xff?5e.t47>^2p;/>P0e7CdX/s/=`8Rd=6UTIbr:0>\Y;,QQu7KR=R+tf%fqX!#N-sXB:EW)(iLc
%Vb>g67Q,c1ZDF8H,^`:IoL.MLl:\p^.2*GVX3DFRW&:IY35<1*j+qHYm)@9ufBh?tKQBR]ksVZ<oVkhMM/\ER?1\[jSEsZerhEH?
%oP=%&*A>BL(K%;hoRX6;C]n($,D#ma1ce!DDRg'=+AE4tA)89F_k@[FCbSRp1]4h(!)kVeD,#ihN<U&YYGdWC`0ak^q`?=W/+1%j
%lYQCp,4>B`DY4<[rm0b-3^3Lh(25js(\,+:gQJ-b]/[ZA^*7F>P"j#^*=2Xh6nH7X5j@tR/uDYk5\sK+0BdJSbW@XP,?XOXfKie!
%"]k9]3_)KU@]SmCW&2RjPndRr+SV<=nT&]t74#p)r*EHa2o1cF*AgK!S4$0go.Xs*C)-_,`>psd&;@q7Q-/+=gH_7t>T4PTGoC\>
%F1S7TZ"WVS0nbu["ark6Wp5hiG`sCumtHq8.WZeIAOP(T\q@-7[hg"#A+&-n?"%Jd016bNYS)0N'2*drgiVS@CBKW+*E6hblJ0ZT
%?6IPZ7:lHXYJ>GEa"K:o,kt/n9N<T`!b4j(lTM)pJP<2gP[It/O,b?V=+2M_=(`9V6A:B;qLlYrQIuTbW!KrWH4FW!.L..['>#DQ
%RQCW3PC[ZGD*'=u.EkAa,s@bf%[mJLn0O:A?8ln_m\b<k[Iea@n[B/[<S1"hE=u*!O[;&O*@`^p[,iE#+Lr;eRO.)W-,OGp)Z;.o
%2.&%oM%%-O5R`T2*Kb>U_'PgK',-r;E=-FV<@9:EC?(]dYS\W(bgcd02]P<r%8Rdo9O3rHQDbgC/Wg!Ej\mm<6!W@,Qt^OBr/RHh
%#_=N@E_W.+C)Q:cJ_onVJK-V7GR&@h[:(TIdr2aX>]EOiKElp),?cS+";CQuVE-ds46C=/A;*Sfi=h#eTst)@28p<`^r]H\BVVp@
%f./fq5geq;.\2FuZ(_Y3"g>*=Ka6TaY%sr,h]^iDN]Kr(6!JTr;\.rN*M@6_T\365!uI\"W".i<!lsTe*<g]''NlRbCh?+/F]EF%
%ShA'+FrrN*=?JnFb3V9RT+"-@L``?SNTgKP`p1Mj=JMu%r`_?-:?4Jm^>>DXq&352j=h[:f!e8S<`q3T6j\7%aDY&W5!><HrfhgT
%n@(`0&g3^[&Cr7m7/%!gDDW==&<3P`+T;Y'I]d2U<aUs1N!DOcLG<8+b\@!7mkr\;\>$:!eeeWtobWJG.8aSK7;FP'@Ce]"YgS9(
%orV($dPuft]Z"2u9Hq*Ird%lCU<OQ+&uAOW_ig3"XfBN@(k)P1%'7/GSMX:O.MqhYS&j,=X3[N75Z@=J;V[k1rBe*Q_0j<GW:Ld6
%[/4s'Ur=8l<Y[SQ:u'"gGl*K7qEZ%]pHUh]Ohe2$hLIadrjCW'YD!c2cHD6gTK9DN0geh^N64>X=E=a9#-(!4MSlmuF;-Guq:0^(
%$LqI&\8e5S@r<T\#ksaI]V#)^GE4tV>4W<V,$juLO$]N3Iuj&(nje6mg6f/J=/`iOD5,_n?]@e)p3>M,Cg>r`?[gOA/8*)H1h6Rd
%q1p8HZ)k_QB.O&A8=d`bi?15(OYUj>Cal5ul`QfD_f0W$U;/ffTcOUg)iSc2`-+'!^e!3d85;Il(JoEl3+TOg]@<'4.On%ZJJCtO
%`OnaHe@lK@i=sH[.$@?^j#u-54,1mhpcDV>Z@:1_TBJL7%9oH!E(o)5L%m*2:IVi%r%mE@q.Wd<;?:J>#r[i=642'FOo&i9B8b.M
%9i5&(*nl.d1FA/N>6hSa$/Q"0;WgArd8Sua"hP03rD[u>KA\O:5S;'H9;(2Qh'qhQD'H'L</"!O0>IV_K2Xu;<KcAB-OAB2R`DB\
%<9Y)9l$#>dC\n09h!f:Z+>Ts3,XkhJ*>NeqHRDLg_KkZ)gFK&**`@B\CE);&Ukp4B7WMFDaXK8kdtm&f8g9'4m*OjMcOS6o(=g&g
%ZL>_,</FX`.S2$V(%jMZ[s3YfQWb"9GWiJa<tQQsKW'qBf6$6-LJ-HQRhsG-O9q&O-Z?8#N.VJfbL<"WGlK?qF;8d9.uFWO#(FV9
%930Dk1f1tc$?]oE>eNZdcBki&4aPk,0AlKoKar<UFd8bAf8a#,9rk(l9gsu9GT;a%A:_6\-NI;pM^7d4.'696R$R*edaOW;:-cZ/
%%%/%RQ`XSM.[u>c%_8PcLZL#iLO0>W+]')]YsH/n=[s2UYuXTI=.MmA<i*BPhmCUEialN6m6i?n=;RDH)X9Xh"7$=5Pe$W_VaGfZ
%\o#Ia:S5V_V@]Y5Cm#TQlge:'>''VUldE^C;RheUQj"W\nA6BR;jK'j`20OjXT4*<"CH6nQFZ:OC2Zsu\pm:?LZaRu:.!\BoN88f
%R-N4q6KW@o^u+W$7"rfHqsW&U=@_lA5Ll%m6#g!IGEA'=[iYG:DY'H,"60i3\K5':S[111-^@;8H6q>-lrgd7B.fouFnSiKl09HP
%WT0^k"gApc4Hq*qJ$2_a]A'7pDN2O''CeV]SHQ\bAd(II8<3%L3<lcSEE,,tjI(T95o'L`GjrrsIWF(hT'u9j=fn@G.d@On`qnQ<
%L]]CXZVjC$@k=NeVi-sj*h/LTeM)j8X@Q,4P/n\.rD3R)3"9cB$M;l.,C>+r"0Nu!#[k>CPeMh'_nonXJ30-qJG+h1c%7ie@oo'#
%4:$@/<a+6AF^0WD+Ap.#VfAnWnS]AGbdU+t]rJM2p&%%gLj;+@MoaW40t&P7$g8`Sogq_Tef`sKM+SDgb6FRuNK\I4))daC6$#)5
%jYEgW3VjqiW-.EhZG=,k\f.tOoTH3q<Pq0ZP?/]dA>.^)/s8R39MsQSa<h19[s"`@YKi/JVm0U=2dtTCbaj4#+k3gNW$/#MERf8R
%?#1E*M7(#Q3YS2Q%6Dpn0)<KMXMTZ)eVf]p.HiIgfcM>L_GhL-WK/:D;#N:6!oL)0]:,ngaXa4!UIcE?/<A'ViL54s,U8R'^X`&j
%^Ou13'`\R\[%PLSC$[?8fGn_`IpCY&Vpb4ZHNcsa?VX%Kpb%('J9Zn0Po*-tX2X&=2WkgoM8e:n0p]s4V'\>8cOI\igP'Mo*(q\H
%_j#:)7iQACG4l"mfu`H;Ie:]0:Piah+`ceN$gB(Z7hpFfU'*46($#F(Y<4KW'*.(3#KioF`8P04<Y6bk#QgjedsVjEJM$N3:I^IU
%;1_cL/,Vn3!1k)_2*=lS6u[iQrDZF<oRKog4CTD`,"HWC8+uCHYJ)oU^A^=ShAtN@@QeO?.`:4d&"'ilnFOI%%"!jgU2kMFJN+ai
%!,W$6rafnbHZY<h?;Z(af:,2-S)S7<!=.[1k&A\\"8q&51+<qKnCnnc&-%Zk`0@IYL"IZ,X4"$18T8P?KIN[_ET'>J3"Tca.&toL
%_tb%:PSepRO]?"gU*`;A?:%smO$^b)QrUoN7e\/V^Dt]sPB]tA_dc\D%aj9&Y#i@I0)"5)[=H>fYk30g3!kim":b^m-V6=9QmZS#
%SaZ*dQh44+\r8p[JJ28IRLf6g'RU:Y*3IPVQ#0a%-\P7UidrU+L6;#pkR$F&OD0%7'5m-;RRjM`e*Mg>$qDghZP'NnR7p3R7>l\E
%#;D3r^RV5jBuU#]#dbuVM-dG6f/&R)VDq@*%!0nj&-]aq^7'bB.12GPWm3Aq(C0UXCSJE2foohflUW48oX"@NXGd+M;!r1MI<&2X
%Z*:.=!JCLmZtf+^%WBs6NYTA%c3g5N$ect,QQ_8s5_]Ga<`R(#J':4p8)R.ESODNf3>Zj??EZ#4;pjSWKa3mg,Jm<4ON(D#.]u`\
%:I\/H7r:.%Gca.7jY-Jm9!Bl&#?HSYcGquEn3B42#b]%%+p"HV$VXp?"[J6?YM7,-q;.4%k7Dp.9"nQR'%kH;UK&O).E5Y+h=U!!
%p$2R80@%KBIes?h:)@Zss6'!>qG%u`)l:2c;`eG#G((4TFCOke&N2d/.0+>Pg+oFJ[&Dk[-MsR1`<YI(g?8p95$7(uFZ`-A!)lQ\
%c@K4[$02f0,Yg"]f23ZU\C-#jg;o]9qT#0N2?90A@P[.>%!Q!5$5)H3psk%W-BT#CM>YX0B0iI(ndok%9T&GOc+*+F+*PT]S-%ol
%b74lY8jD'])Bu8V+W..(-3fdtRUfurXE>)IpZa%8q!_&Q</:1Ji?SYON^;P(&376JIr2e*%V)"ZX/7?:dCnMAZ<-]AYJp364OTCc
%ST!3QF@lQ\T4+6p]7N[mFhTFSo:2[V#t**pgHA7Ih2N".BD-6R>G3U2.:-/gS4d$G1a$jebmsMRCKQ53e3@pGpF(<in!g#BXo9pf
%W-]>WOA,FQCcHXYjD-qV7/Z!%ohRXaF<5HD#as=ki()UDL?I$4Hk-!WYtb?S?#CXWh:\GL98r2X'ia-o4^XM+p,COVNp54Z47q7J
%@,mSu4nMW(/U8153pT+/(O6c*+^l0#*[6PA[cfF;(24D'kl+Mrb,Rl:P#eO@g95WO.O?gJE0]hGWu*EW&+PRW?7`gTq@lBa,3(O<
%a.5o(f'&@d<C5LL-4'=N97ep#d^_hYV]1><AQ93S,qlG`q.E=,R1E=ilo\,R%,GuTS"DM:Fo8_)qh",\`>f.MW(<Y]G1]P-KIcV&
%r5%,b,T&R'JnrHl:j\DSm4V7(:`o)u%EY'g<hepIc[>KF1TM>Ln-R1<Q3TdsDk0-`<q4MgFf5S8$36j10O+0T#HDK`q5i^poU`8\
%c%MIVFTnWhr$PRB\/#hc)Z)u>=$7YfeNYT/'qA<kbEXu]8Vmgs!8lg=G_\Qd8N6jN:J:[VJr</Fb=ub4@sJu53;$48X0H?8kua/1
%qZ^8jI>dBmaCO#9i%KB\a.fE7EQ@qB4).g<W:uSh1@,s&gGbLaGP^qH:sg3afb;$"N_H[P_]Yk%5I<pH;C;0G[$LJb:hFFW<b`T1
%%h9_]+tmEcC>31ANe,0q9q<aNcA8;FT*j+f8F,?X2B]diP2aDqoo!Bb(]NXoIui'?@Knm(.>TkKM8[.brhVA`<CsZY2b7VaMqbE0
%6#j7HK7gR(f`<OM!S)o$gf(pTOhikq2QKcE0>UYS4;qAYWICLT[<a=`WXF=OQFSYg?&Z``#BV.%'r5V9alnPa`d$p0FWSK?iG.OT
%EUr;aoigAs]_B%)n',6B.VJW?^UBTEF^VsjfeqR4*D<mB>S;j>7`:NrgQ47Q+7Vm\1,Q6[A51/\_$J":5j1tM9I$M=l*6d)6TA.i
%pl3hmLsJ],QN65gY=?IYU8Ud+Jk]Z&"-Q9o';SZWdfP4pTG$uY6.mYGUQEr<QOPg0n9Pi1*m[Ib@$i*)<4Rrio;-Lo.Vc!l\?Y=j
%,'t!H#NU/<_>jQ#cD<J*,It\g!TlW=AsO/%E?CTA;]#T@)R($4JQWkBg_^uDBai+LTmuP/^;sMYlmf<!e9$bbi$Oh6+*mGi)0+XU
%Hqm4bI8!Nb[sIY(HNc(I!ogL):ZgR;,qBe;rkF5-hTGi&O9MB1<qkuqo9]al1rlS@85e;kn]0fGDJu_E7m+?WkDN9Yc9"c;YD<Qs
%8F`/%7>^fnX=b(oZA+e$KaGM<V^/RLH'a;>mAe>4e=_2D$c24&YQi2=g1ig:H[fKglFe]oI1K`]'C:#\GE8NP*oj1GbHU<6qpDjr
%9f^+f2\&abSB+6XU6G"ihkh8\PM?1(H%6(]^2q`M[c!E6+I]E-L)7N]J"5Z,p^#50aP=Rj!a\3iRD>4p^%sZ/o+o)7HpZqBCMc'R
%`"4NmQ1f7f0b>!EM=mZiN;:*ujug&46%A@R+.p=Em.+9(/hVSh;&84NYDT=7N2O=JCk4rR9(F7XTPJPRJ@mJjI?-,l=*=f0^<Lkd
%INY-@Op<"EQ&Q'5m8A'9-\RduII7R9a17+Ek*m;r0X]Ws5QpC2[>S,=>GR^h2QP>LcN5V9^%0.c]349k\rFcefosmBQ$dCub--"7
%L5E2H)l.+3NMsNajX>;_2TJ7S_Y?[8W#!!5M'^J19_>,,o%/<dfkf\N%edNT5_f9f=C,X$6uU@N0<^S7O#j%&9#Cf>,cNfEVWceb
%ZN?"@XsIKPd9WVPasUVnF]Osf0ZU2k'F32%E=eN=6;N^./]C+((-qJEFst9sXtVdoh%BK'T)tBa$'AmcQ!eLD:hNYM&;G@9Ae/jH
%Y.R8jP&i!,eR:,'a,sS<^R?8e%]K"8o9ut(!XJM9]qRq!Fl@J@IecG$"l8DO`rUOClV%PWAM5G$im[.sQXeFt8sD>"C!NH^:,8&4
%q`oPbHhGGBYATIUZko?>r/O57FT_VBK*iM\j>EVc6R'Q=?V)61;UC.1'dJ]24pYReC"Pu/+c%k3Y(RFjWHK/lZnMOl?`#6q6YJ.5
%%jHP0aor\'n;V:P?PW7Xk_C48=j;j>$Rg+rb_0/G.YfM^:HgMZ]RupC?8RRbZl3d5MKN5`euT?[.MnGjPYD^]*oIi=18R"lS=^N>
%m'Nc:FFG[CA5-n+P9.f'a3j:[[mo,Ir8ZS9o!<3TR8;_ugY8@_rE"fI4Z@khQE!p(a$*df@CLL[h4fU(H??M-BH5/>Aam'Tbb/Fl
%i:MZBmpC59`ttmC#,Je[qT7ikLm)*TR3,`P1=aP:/U$3[JW:J/EnQ\JW0CN1oYBjfpf0oo7Yf,]hj)Une@sr_?Um4#^m\(Q8qmu>
%?`>o?3O34A@hW3TYAlihhEDO:=]YTK:5'IQ,W)[qeW1)1,mOIGA;SfG>?LBl)aE2+is\pSZhDR*ODsoWms]>SqVeKX<&/OT1HK8#
%%q+@4\,%f<"66UNaYJOJ=ZnsY:!5i9P,p9`EdQ%(`9!3N$:<pRYI&As]m[IeFcm7)_+s;q(N$=Vg3K7S/*P\Kf;[ZAKm`]AP?#aS
%;3:si-KIf*b:L+PE_ruBI<8Ej*?1O;+n?3K#L.^#XJV/_cK2h0F7);;Qt8r9bkMWSn+u3Q]O!mW?D_s<e>"GTXZ(aBs5jJiXCp:C
%mM`[>:M8$sV)3Wk@dF4m\!MnVN))Eq,#(ld=N-iH?Q>25,fpaCMYbD.\b[KM'aG80/N%(D-2d1MeIHYg5q+_9'JUkp!)P,k/B+m/
%n5KVrl#=hO]E_/s<j\#T,o+4(&+CX.Tc:FgWZ'8;;5!mTktr=dZL=.,iY`ge6iP&b!+,mY__<TNc)a\F!S>`0j@34'G;-&i`ct"h
%:bBQ(RCGX>jtK`W]c'6>TNmj;;!BK,8a+3:G>U%k>,EY)XC"0WPAYeuLqm>fE2Pg2S9*TY%>0MVS#O^t:J>CW/9dYfKlAMYncZ/e
%mW"3=<.(__2U=i#X$5_*Ml)"kbVrm6nn^DUma'5AUaCkUAB-!ckU]MAVn8R;rquD](JW4/FM?i/]?aXN[YVb+nOU,b]CNg4=dWHd
%n1dIth-kiq'RAAsLWu/g"]Nr!9c'$Pl]Wij9pZlGZGPtIX'T+nWBpXUjfK&_^HOmD\`rp,cBl1mn`\"$L7C129b=&$l^DgX-Mf93
%3CrXq[8^/s_R[Q-cS^)6&/B4Q6^FSTTWB[)lgpPIm<2oJdTr7!EWI[/M\^l7Zs8u`$]kdPa"#"-Da!BpcVE0n50'M"W!IP.M@dID
%XBgYsCe>#@ejTYK4Y=n04\j`EU&/#F%+HjG^n"MnW*+F#7FZSl?`55:&nYKH2EcQu1X(.gYi=@aaiMS]3XmgG(,:dXK$[qY$"^RV
%;+P@X/pd2`G:mN<l%:3)M#at@A4%"iVBR%3XW;rTmBUXY]a8h<-_5<:Y82]YbT0ST`N72CXo15(CmVRi#fE21Zt0sqOY8A42BB8e
%4lKqSo#:*,:)=$S8=feBXUgo95!S/>l1no9=1j"N@mtaf"Jc<;1Tl5TMjNT%d\nLtO1't\\X]Q6]f6MN/S+`2Ro1=Daee$L-d0JU
%>Zd%G^:`7K1RE="ketZ"4?#F<bP@=QYPnEb#lA7kBBI)*##n%-Te=/eT;#jM7PBV^76O"L%&%&p!=i[WH0t]9i1^'(YHa5fL+XMp
%V_UOuN!.TmV+g5\7B+\C"oWiUcr\0b<@*o7IM&*,(IN@:86=)G9U#9u(Pke3#ONParPs2XkS@4<M#oNXBUhB=Q.)!kS,Q:BJs[XA
%;\ZtUqbG7?4<@8S`\WgD0(IBJTNLpJ7'^"RV"!L\flX(5*oXIB,X2YLf%ogG:*jRQcSXC$g7Zouo($^sfscVgNQ5(?Gm1nHPXAgY
%VQZd_#eb)H\cHR\%"1>VT%<$9.Ykh&0K,pT]g@lt\41+;J,U7"nQq\5+5Jld-AHl*L4$0Z^<"QMja2N3Zk02S2DUTW@Zu^F98p#'
%c.boo<*[q)Sn_XdQ%eT>R/8p(oPG+%".8)k*b.P<O"J;`K6]sk'"/"5P4V2uY"OeY0X\thf%H)WO=hmJ#Gk;FGmtSs7r)gWf=2VL
%[01'&`ifC6hV[aWO'a-&(\.Y2\^J)Z"Tr!/\:nt2T,^qu*b9@,cRE?/@:PU!&,imOkP6j`jHI^n4rp?/E>ems9"Y>?@&NYVqWH$G
%T9De@2/(CtYklpT5MghSiObDKNZMQT8Cr:Nl`VE$:2Q'J0t#L&#^0b$E\&+W]'W0b(oC2iA<<rj8inQ8k>E+I#0Dq_%J\bJO6*3(
%aQ5`mbpU-O2BW&2bo/>o=aIX"8UH0]fB.B]+lDm7WZTP%'aMnC\*(;BmQk@D(&!UL\BSTn\40N_9%VOT>[/K[V!c9<][XL++dK:7
%VcB/oU;gHu'c)ZcdMBj:cZNPkTJfm9F9i$@C8_?],utoJ=CT1U])E2sId&;j59C9jX@SmAN?Ul)Mq?b0CV/KX;"tA1mRW-UbpR\7
%`HO>rbC4d3eK:Es]#/,YW8d'\s4VPTD6D#qJ"Qo`A@o/to`.-RXBGAS_!-[q:2\kh:t([Md9hs%TUgiGlC'tu=c1::YlMQIeDdLq
%5\&A#,G)i<,TU(i9/bt)bbGpXEVq''6dBsn?K+aPYYNdoam`cW8Ok]lQtP6R2T!k4C"n9)+G[P%[jM$M]7G5tV&2PID_+:Z'Wg:"
%8usp>Tb.kfBR1k%b>Qu)jl2"OT"g<6(5V'qigJgZ`.E$65$DA4pSNIf?\1@^miD_^)B+]A;!^tbip-DgcBT5.Ed<YC7EN3")0:u;
%Puo>B+GYp32P^&OFqq%$RqZQW=BQpe"6e>)fp$j@@i6`<C[ZCtD\ht?$WZ.TF<;'rCf=B6YjHNU$08'9&O5KeLsO[d$<8mQJ[irK
%%A=[24j)"V<.N^E+UnQ`L<j8VZ1^uJ_RLRDKVV!m&;jhh0XqfC]F:`Lq.^>Rii5LI+HOE<X>1DJYsKQJ^Wh1-its(Si"ZTbGJt2&
%1@F3Z$K^@7*pG)m6(bn]4(am4/Xe-lJ[<RJfJWl$MUgQ)I(0RN/^\KIS+[n(Z>cRsS*E;:qCN[<G2/'Qr8KCs:*)OFh:o:)LC6&u
%DiYQ-1&nRMb\i()d6Wlb134f\f>.J%J8b`i.@)k#1ITupF'MQJ;.Q'2/<s&n'X!R,gHGPU?s.O.cQ$$Fi_$R:p?ba_Xm38NZu6t"
%NXpp&hN-NQN7eh&Y9cY,B@tLK>gIl&KuoJ?kh2:N65eo$-X@p2lPdYO2o*hAI%3Dj`MKpq/S1JKNlmo/%=Be]A`p!9#Sa%k*Vr7/
%s"4!)eYef:f,dAQITn<%p^HT/]9K%$Hd[3qpmbNVNP>"aO3_._Sj*G#`K`Zs!P`dn>YruM`]ASslrms.LKfu(dkr!_V?D:N!bSt$
%MPk2D=gE'FWED3U0!!M&PU3])+!_4Vma?ab95X!hAtKJk/,@G+DNKagi0>ME!$CfP#i:ZBI\6gYK0_/NpEaL43=^@kk&aBO.#Pdm
%^id$+7gkL7UeNqihc.c9Vf@Q(`imX==im=qr>NEt>[_kZ$9&S_j+/Uuoi)2tO+;dOc1.G\g<41O4@4acCR!-pKp,UJZ=Kf3_8GZP
%\AL`@Km&_Re)8\'TdNEHQ?p,sfO@]NZURm(T(j-:22b50B-tT+79,itZ7Uor'_7'</jI>"_f9^BK%6<daPrJa5Y3@)#"T-[pY[)G
%JS2EE*F;qcTNd'2gR%.TL)9RkXO<$6c`asFCprKZJr:7<j#0Xu1JYAVcVZ[gPK#O=g2*3jC]c/>#V7sS=Ym?-L1<M>gG,W\>*:7o
%0+BmiT3/d0(K(\=PWWs^FX<Kr8Or3%#BK15c1i,_Yb#lBo$S9:CTM+_djO7ghGBF*@/<TUF-M)CYu1'TL")k6AODQl-]P6C,7'+h
%1KEsV##J?.3,#o(Bkt&O\tr0C^':A3K?*JOB4*:U&='-]L(1E@+cp>%2>Z^a1i1hr-Zq/.L>MbNJ,2b<Pr/2OeUJ\=/0Ic_V7T%8
%$0c.9SAO!h-_p(u$Q,e;j<>JfU+4LLqTeVW3QU7-"s(`/M9q&JWNq!Oq_<pG'!pUUWa]0PF[]<Fq=]lQ\:"BJKu.I^)hf3tqbE-g
%oj.%L+F)A70dDt6/DD)`UB2`=*#Ud_PVp\5^4pu'Utb"$8be5#'iY:<BJkHi$?`k,OlCi12q-aVn9+($.q_Hj7.LEeE(Oe>p7P6?
%>Fd!8.kVs1$H9/K3D7Z):T%EEW-]#W"\@nk_JE8XD>Jt?:oCZ1%5qP$_tZ6B*qgD-W&B3EO;fI?kFUL[5*]j`G%a5dXq5k$9A!16
%oHn)H0*LIX9<(HKl!)n&D/6KMeAA[@8?g"E83S5?43u$.G""U*A-6gV."KY7=OBkm\[[!=RED.skhEb^"AU7$QV?TX]m6VCr/T3I
%f@/PWI;e=Ma3g[#X(TAt+4MDJG\4@i7F%,7k/lG4e.is@PFb4k4"n/1;FnS*EIbJE0c;N$CS'Fcb57a<pj"1d0jH(+(u$<V8X/3M
%U]A"pr7"+aaQ_#2T6Wu_4EiJkPkZIcs0/L!;&qGUMFFqp&p/Npe\VpBH5]>k/TE#"@@'(]CsX>Dil4;2^/1G>HJefa;$nDcV@NOS
%&AT-E%BT]pcXnkR$R403GD:UHkSE+8n\?G$1/%lU.D\p)go%;&k)0JX78.g8J)>\_YQFYC.Y%!;8?1_Qg2,TE`19/A#gj&"].T!g
%iK0(lPrK_,4XEqsCjqN3Q5=!?V[XD(UJXp[3tZ6_N(NPhPd6IU,U=0j`uD./3`$2J#1M5a@V\Zd!g;%mC_r&ig<^:`+g0U0;<,i[
%HeXcG!kEe8VhereAa2*iqp\(oc^s\^A[bQM'R8*eCggZ1RCX,5/M8J.hsb2#eaq14Q0e'`EPWf;GO$!"KUX4>=WbTZNeOD5!hkd(
%9Eo>Sk![LhjC:+>Y])?<O/+]T<lS'KqP^OPf0Dk!r_/b0!n5Z>HaZ[4r&6k'ia>7S.-no\O,k+#8m\,QOBY]1GjI2>aoB9N*bWm-
%]F[IL+U%7T%jMQ5?F5gB/2a:I)=H%@Yc9E3.$-;_i?3Z)W[uVU=%8]0m#\At:f%ccXFIeZ=>/sHN7eP,kpsF5[mYnCf21@U>r+'0
%?Tu]rGC/rs@`Rr3WDQfVcH#7(;pLsZR>RimED?YV]!Il(QC^#_[LcEl@9_:b.o@J)pK0nL0etfT<lX"$Ye)Oh[904R@-=PlcW%oo
%l7T5;roF,k&<,]9aeoKKpXe/<qO-8V)1KKh>cUq)VVZXO+/V&tOb>9^<IMHG'&#K6A[tYRjKMfb\9/fZMi%$$!h=HL)S@5#YWCh=
%jk,0``15?+R]V\3U.[GoIGIhO])ASrVhb,GJN)-ulZka`-f!Z?%5*G4?aAgq7!``JQPGP&Z%eKg)FS8AbF4Dm=K2rD-joeh5j+QT
%SN+N$6\6H,O<60-)I:!IB'Do```kWIj>Mh_&rB`e5)BMfp5hNU[E3Ruh$B0@I\6*;adHrJ?uNa?B@aY*lid%jgPPWIU.Gg3R/:<(
%b#?C(KeDU&0;;G5YYcS$jua"QKc3X`a-<U8ZK)%[q?ToP>$=3W\BbK7jl;JAAmOR@Z8rHEIcU9<*cmImcNK%:XEHHV#Xq$>_Y@ub
%5F+>jDCrUV!nC[=X7[%Q>PuiLn,6>TfA@Xu9>V\@^6=qB@sjINPFJ+(RY\]j$snt>`K`?e!"Z/g*.5Z;)R!T]-"!,n$4Q.%ZfrO:
%@cetoXp!TfNgO56m!dlOQFM@3)3.osqWl=Q=kA'Q_I%In;PM<$?fddORAsd.NM@GdaR1#eT(uRETd$^Y1T";e8!2`T1O"lfYe/V?
%:GuCoP#7DV*1lS7@&37T9o[o/>FUh*D!XfOOB[]pS.<><ie-qBAMm@qIB=2%l.G9/@qo=M*X;e719)2E/+>O=$XLICMhAWt`7XK)
%*;Gagkgd;2q,#D4;N2H:'\.dE+Hf-s&u&Nl,Ht^nYl/$0PS99K50T-&%E9DL&2BkcDr9pA'u99+)tM!)$TMN+&Y[:QX:p-l!GW1]
%_*@84K(g1/aG0pP-]-^LTJ,aPA><A#oEAa7<=]S8_)ngs(c1[Ni333l8aI):(6&2K6pIV83!t=\4r)ca2Rb))gI#^s4=Ea.aV,FN
%8<n/$mH/X2rJ&P+g0!R;Fa#VU&lo>5.)'`+?GH>pU[>JCWrY_6=08!@>FG7Wp5_'j4b9-24Z8!dq#N$Q*0o*j5"fD]!0V]TZhV_>
%71]]J-?tS4W?l*#(l6*rLba]mh7+Z.jk7!2I7rXS3a=C`O7&.cdL4,E&3ck%5t5g[8e)qlWM=L7+NO1P8^[/O-e[>>;`t;ADS5`\
%0<]\!3Z&*IT;BsY0m>,'<,c/;b>bhVqNMJE)d%p9e)heoCh:Z7r4pVEB3F6WY:ZZ@r`m!K9X0kIpQpl3H]W1I])#AB&+Y3H3gd1`
%L).hT,Gutf&!U-Xb@V3K'b"CE.VWb/20e%JRWO0bfTs0GTLoo#@4S\,J!ae0RHB1.>je(l`gEDtZ_oP>@/EF_oN3h)ZX,rmgu(Hm
%36c#uU='\6*efW;+tbj5W$M1,_/-KW5<E</*<e4o\4MTE+N#^1$)XF?D_nu!#.sU:Fi'rXkgC8>QamBUk&$?)Egl!h=#IS:d1#Tp
%V*nB,E2+]aM(V4-U3=,4o@f"$<c$$IEAcBVK0DObGXJbWPB_rT9XHDu2ru_Yk\Z8):gQWd+k)e[iPS>geSZbUeZE]-jcYR.Wl@:9
%_<C?^6^;A!qM^`U??7[>'d441`f?;q7"rj%ln!5!*3;U\1Q()(T89DYK_-3j`nc7jVd"gkR2q.m[VXF4!W;0YhP@Kr>h;.8Ie4g_
%?eXp1:$NLuC6#(K*/E/.O,$k/qZ>ms&96LHR$Z%&la"GbXgq+,>5-kA:GX=<Atl6<AkPYC[`/S?X//U`^/g9a^en/q#_[`_*68Pn
%Yb>`6_pjreTrt^DeI6>nTpSF)'QgnrmNg^`8Mu#+!mk=K%/E8pA:\&CDnf(3fRCWkC@7:dIV[ZCF\=G'gNESFZV3)KKJh%Yr]2f0
%bfYVZa*;6YBYHIkm"G*rj!W//PHm>+pYOe6Qi=`+#QIgsbZjLL5U)O4**?ZJj8c%jF:Ci6qQB.Vn7AY2kNX(aRB'(:)ES&^UZ/3P
%][HXTX(J^$=MCM`+5Wqk"9R^cfjJcTD:LX=C^j'OA/8]<s7Q()>eA$:<8._cXX:@&j@98WeE]LR\sbB0Uha#I&tDJJV`m,]OmH$:
%4)3WhC`#Hi`@TQq]Eg2q`DmXL:34nsV^lM)Do!]"VKo'hgrRa9C-#P-d#gu;];'LIBY2:[Cer+C+nF?rj)hf^fpW6_q6D8p.T%_[
%)9b>ZNZYQY@HGZ`;tWmd50Yc5Te$tro^1ii&m@sfG_6C9S&?%h&c)2U'6cF(NO1-kbkgl/p4rHJZAh,p:/Qk^(@*:$hYG8ZbjpS+
%agZB:QYd75[\Fuufq$`BI.!F>A)k[R5>0<9o]Yu984?S?2S0dN3/JrtSk>H`(-E0`;T=WX]2C^-piMI4Zi<TXjqU/K1t%!;Rk0&W
%9K>0@9>)qBf@N$;ah2GU79.4X;rYK\b,rl/:*V.uAS*C_RT"jg98&*,^U6TfN-d"kjMC:(ic/CDAn!Ya(qo(l("estI$S00Nn6/F
%iZXL:<'2#IqZ/iY)^<P=;7KW5!h>cZ)(8NEXLpk7=CsLT<H>EWmag(`l8sA.5*r9"XAUTH*>UDq*qKh%QVD>W(4O.NG8+.\EllJ)
%^`!F+=:;,PoeP+VUr[4LO&t^XM>2n:<1j..fkOQVp"_Sq;$`L8-cOj.r-874a1*7?,M0mE"L6``_XP>Ee+h^BcSo13=o_3=D;.a5
%A/*0K(b&Qh@oPcq>De+r*)5Q:K>(L1@\o17XYD;`;H1Q=6?-b0"1Y"^!+RXEga&%>WXcF<k\N/cYV8s"'Gp-SIB*'*B*crqhpbWs
%I":aL[KT>+<,HdG,*ZKs-"Nl%K\5J*EeWYW8<^4<7MgHKU#$FalPDoo\YT5k:u>%Nc:;/+6@mN<bQ<@pRR!'5S-4sJN-#159+Z@-
%a@MTjl&Q5F3'4Jg%0bLnYF";IQ+)1SqmIBdG8=\Z6$*[I]Mn'970M^0Ui402,]tBX:\NUVHkG53MUq1tKe*ku^W4LPAM</XPBh5N
%^i:`-&?ri"<`PD7`@Z4Ih^Hot5=H4r3Y6LfpU;7(MiY7^!9Dr=_ut!k2Glg8(O]2&]T>*:1)JZ:2P9ugW@_KHmL)7nE8c^-]X[S[
%-dT+m&Ti=jC*$PF)$RY'eO[jh(b9dqNgub&['&o*X%/KZ3f4ot_uPRMFTW8S:2MWBBG)V)9"0sp>k@mde]kkK7t)R)>%Du)+NII$
%Chc@4DNr5JV6ihO^IL$a:Pcg+$>IF\nVNF\0!?.+]G+aKe'Yc94J8L5Ib*%fOdE93R.>->kmd%ER+H8gmGm$3,n.+R4\PjcT<^oC
%)DRRK[.c+3J+jK>^]*cDIs_4OY9/4>GSl0"r6ok>rp\5uIJ4g*5Q(0Nhu3B6msb*%m^jQjA>/hgTAs;Irqt6#TE"415CIeNo=t=e
%J$AF;dguHILHkduhuE\"rsSb^@E\~>
%AI9_PrivateDataEnd
